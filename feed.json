{
    "version": "https://jsonfeed.org/version/1",
    "title": "藏器于身",
    "subtitle": "待时而动",
    "icon": "https://gality.cn/images/favicon.ico",
    "description": "安全杂记 & 日常随感",
    "home_page_url": "https://gality.cn",
    "items": [
        {
            "id": "https://gality.cn/note/PNT/IRIG-B/",
            "url": "https://gality.cn/note/PNT/IRIG-B/",
            "title": "IRIG-B编码",
            "date_published": "2023-10-27T09:00:02.000Z",
            "content_html": "<h1 id=\"irig-简介\"><a class=\"anchor\" href=\"#irig-简介\">#</a> IRIG 简介</h1>\n<p>IRIG 时间码原本是由美国军方为了靶场间的时间同步于 1960 年提出的，最新版本于 2004 年 9 月更新，名为：“IRIG Serial Time Code Formats”。</p>\n<p>IRIG 时间码有两大类：一类是并行时间码格式，这类码由于是并行格式，传输距离较近，且是二进制，因此远不如串行格式广泛；另一类是串行时间码，共有六种格式，即 A、B、D、E、G、H。它们的主要差别是时间码的帧速率不同。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">Format</th>\n<th style=\"text-align:left\">Pulse Rate（or Bit Rate）</th>\n<th style=\"text-align:left\">Index Count Interval</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">IRIG-A</td>\n<td style=\"text-align:left\">1000 PPS (pulse per second)</td>\n<td style=\"text-align:left\">1 ms</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">IRIG-B</td>\n<td style=\"text-align:left\">100 PPS</td>\n<td style=\"text-align:left\">10 ms</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">IRIG-D</td>\n<td style=\"text-align:left\">1 PPM</td>\n<td style=\"text-align:left\">1 minute</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">IRIG-E</td>\n<td style=\"text-align:left\">10 PPS</td>\n<td style=\"text-align:left\">100 ms</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">IRIG-G</td>\n<td style=\"text-align:left\">10000 PPS</td>\n<td style=\"text-align:left\">0.1 ms</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">IRIG-H</td>\n<td style=\"text-align:left\">1 PPS</td>\n<td style=\"text-align:left\">1 second</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"irig-b\"><a class=\"anchor\" href=\"#irig-b\">#</a> IRIG-B</h2>\n<p>IRIG-B 为 IRIG 中的 B 型码，是每秒一帧的时间码，最适合使用的习惯，而且传输也较容易，所以应用最为广泛；每帧可传递 100 位的信息。</p>\n<p>为了便于传递，可用标准正弦波载频进行幅度调制。标准正弦波载频的频率与码元速率严格相关。B 码的标准正弦波载频频率为 1KHz。同时，其正交过零点与所调制格式码元的前沿相符合，标准的调制比为 10 比 3。调制后的 B 码通常称 IRIG-B（AC）码，未经幅度调制的通常称 IRIG-B（DC）码。</p>\n<p>IRIG-B (DC) 码的接口通常采用 TTL 接口和 RS422（V.11）接口。IRIG-B (AC) 码的接口采用平衡接口。IRIG-B (DC) 码的同步精度可达几十纳秒量级，IRIG-B (AC) 码的同步精度一般为 10～20us (微秒)。</p>\n<h1 id=\"irig-b-格式\"><a class=\"anchor\" href=\"#irig-b-格式\">#</a> IRIG-B 格式</h1>\n<p>概念引入：</p>\n<ul>\n<li><strong>帧</strong>：B 码每秒<span class=\"red\"> 1 帧</span>。</li>\n<li><strong>脉宽码</strong>：用脉冲的宽度（脉宽，即持续时间）来表示数字信息。不同的数字或字符由不同宽度的脉冲表示。</li>\n<li><strong>码元</strong>：时间格式里的每个脉冲称为码元。码元的 “准时”（OnTime）参考点是其脉冲前沿。每个码元的宽度为<span class=\"red\"> 10 ms</span>。</li>\n<li><strong>码元速率</strong>：码元的传输速率称为码元速率。B 码的码元速率为<span class=\"red\"> 100 pps</span>，代表每秒有 100 个脉冲或码元传输。</li>\n<li><strong>索引计数</strong>：每个码元对应一个索引计数。两个相邻码元前沿之间的时间间隔为索引计数间隔，B 码的索引计数间隔（其实也就是码元宽度）为<span class=\"red\"> 10ms</span>。索引计数在帧参考点处以 “0” 开始，以后每隔一个索引计数间隔增加 1，直至这帧结束。B 码每帧有 100 个码元，所以索引计数数字是 0～99。</li>\n<li><strong>位置识别标志（P 码）</strong>：位置识别标志的宽度是对应时码的索引计数间隔的 0.8，所以，B 码为<span class=\"red\"> 8ms</span>。位置识别标志 P0 的前沿在帧参考点（PR）前一个索引计数间隔处，以后每十个码元有一个位置识别标志，分别为 P1、P2……，P9 位置识别标志的重复速率为码元速率的十分之一即位置标识的码元速率为 10 pps。</li>\n<li><strong>码字</strong>：所有的时间格式都是脉宽码。二进制 <code>1</code>  和 <code>0</code>  的脉宽分别为码宽度的 0.5 和 0.2。所以，B 码的二进制 <code>1</code>  和 <code>0</code>  的脉宽分别为<span class=\"red\"> 5ms</span> 和<span class=\"red\"> 2ms</span>（类似莫斯电码的思想，只不过只有两种类型）。</li>\n</ul>\n<p><img data-src=\"http://imgcdn.gality.cn/blog/7gk5g9.png\" alt=\"脉宽\" /></p>\n<h1 id=\"时间编码\"><a class=\"anchor\" href=\"#时间编码\">#</a> 时间编码</h1>\n<p>B 码以两个连续的 P 码作为帧的分割标识，第一个 P 码是 P0，第二个 P 码是 PR，注意，从第二个 P 码（PR）作为帧起始标志，即第 0 个码元为 PR。</p>\n<p>在 B 码时间格式中含有天、时、分、秒，时序为秒 - 分 - 时 - 天，所占信息位为：</p>\n<ul>\n<li>秒：7 位。第 1，2，3，4，6，7，8 码元。</li>\n<li>分：7 位。第 10，11，12，13，15，16，17 码元。</li>\n<li>时：6 位。第 20，21，22，23，25，26 码元。</li>\n<li>天：10 位。第 30，31，32，33，35，36，37，38，40，41 码元。</li>\n</ul>\n<p>位置在 P0～P5 之间，P6～P0 包含其他控制信息。第 5，14，24 为索引标志，宽度为 2ms。时、分、秒均采用 BCD 码表示，低位在前，高位在后；个位在前，十位在后；个位和十位间有一个脉冲宽度为 2ms 的索引标志码元。</p>\n<blockquote>\n<p>BCD 码将每个十进制数字（0 到 9）表示为 4 位二进制数，每个十进制数的 4 位二进制编码之间通常使用特定的分隔符或标志码元分隔。</p>\n<p>例如，如果要表示十进制数 25，BCD 码会将其表示为两个 4 位二进制数，分别是 0010（十进制的 2）和 0101（十进制的 5）。</p>\n</blockquote>\n<p>从 P8 开始是 SBS 时间码，共 17 位二进制信号，每天重复。</p>\n<blockquote>\n<p>&quot;SBS 码&quot; 指的是 &quot;Second, Bits, and Status&quot;（秒、位和状态）编码。SBS 码是 IRIG-B 编码的一部分，用于传输与时间同步和时间标记相关的信息。</p>\n</blockquote>\n<p><img data-src=\"http://imgcdn.gality.cn/blog/91kavc.png\" alt=\"IRIG-B结构\" /></p>\n<p>「图中的 <code>1,2,4,8 </code> 或 <code>10,20,40</code>  指的是如果该位置 <code>1</code> ，时间的大小」</p>\n<p>给出一张更详细的参考图：<br />\n<img data-src=\"http://imgcdn.gality.cn/blog/5y0rng.jpg\" alt=\"IRIG-B详细结构\" /></p>\n<h1 id=\"参考\"><a class=\"anchor\" href=\"#参考\">#</a> 参考</h1>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY3liZXItc2NpZW5jZXMuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDE5LzAxL1ROLTEwMl9JUklHLUIucGRm\">https://www.cyber-sciences.com/wp-content/uploads/2019/01/TN-102_IRIG-B.pdf</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2R5eDE5OTMvYXJ0aWNsZS9kZXRhaWxzLzExNDY1NTkyMg==\">https://blog.csdn.net/dyx1993/article/details/114655922</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS9JUklHLUIvMTU5ODYwOA==\">https://baike.baidu.com/item/IRIG-B/1598608</span></li>\n</ul>\n",
            "tags": [
                "学习笔记",
                "PNT",
                "通信",
                "授时",
                "学习笔记",
                "协议"
            ]
        },
        {
            "id": "https://gality.cn/ponder/Gresham-law/",
            "url": "https://gality.cn/ponder/Gresham-law/",
            "title": "劣币驱逐良币 ｜ 一次网购经历的反思",
            "date_published": "2023-10-26T11:12:26.000Z",
            "content_html": "<blockquote>\n<p>📖 <strong>Gresham’s law</strong>, observation in economics that “bad money drives out good.” More exactly, if coins containing metal of different value have the same value as legal tender, the coins composed of the cheaper metal will be used for payment, while those made of more expensive metal will be hoarded or exported and thus tend to disappear from circulation</p>\n</blockquote>\n<p><strong>劣币驱逐良币</strong>（<strong>Bad money drives out good</strong>），在经济学上也被称为<strong>葛兰辛法则</strong>、<strong>格勒善定律</strong>（<strong>Gresham's Law</strong>），是一种货币规律，指的是：如果有两种形式的商品货币流通，消费者会保留储存成色高（贵金属含量高）的货币，在市面使用成色低的货币进行市场交易，而使得在民间流通的大多为劣币，良币则较少见于世。</p>\n<h1 id=\"起源\"><a class=\"anchor\" href=\"#起源\">#</a> 起源</h1>\n<p>古罗马时代，货币价值还是由贵金属本身来锚定的（货币本身就是贵金属而非无价值的纸钞），这时的人们会私自从金银钱币上削下一小角，再将此种货币充当买卖媒介；因货币本身的贵金属含量减少，货币的价值也减小。久而久之，人们很快就觉察到市面上的贵金属货币越来越轻，就把未遭毁损的足值金银货币积存起来，只用那些不足值的货币进行买卖，而劣币则渐渐把良币从流通领域中排挤出去 [1]。</p>\n<p><img data-src=\"http://imgcdn.gality.cn/blog/izk3hd.png\" alt=\"西里克银币\" /></p>\n<h1 id=\"娱乐至死\"><a class=\"anchor\" href=\"#娱乐至死\">#</a> 娱乐至死</h1>\n<div class=\"note primary no-icon\">\n<p>❗️劣币驱逐良币的说法逐渐被广泛应用于非经济学的层面，人们用这一法则来泛指<strong>价值不高的东西会把价值较高的东西挤出流通领域</strong>，主要指假冒劣质产品在多种渠道向正牌商品挑战，并具有膨胀和蔓延的趋势。虽然这样的定义容易在学术讨论中引起争议，不过我并不准备进行严肃的学术讨论，so～</p>\n<p>关于劣币驱逐良币的讨论已经非常多了，这个词也已经被大众熟知且熟练使用了，所以不再过多赘述。引起我思考的是 “<strong>互联网时代</strong>” 的劣币驱逐良币。所以，请容我先介绍另外一个概念。</p>\n</div>\n<p>《<strong>娱乐至死</strong>》（Amusing Ourselves to Death）是尼尔・波兹曼 1985 年的著作。他指出，现实社会（书中主要以美国社会为例）的一切公众话语日渐以娱乐的方式出现，并成为一种文化精神。我们的政治、宗教、新闻、体育、教育和商业都心甘情愿的成为娱乐的附庸，其结果是我们成了一个娱乐至死的物种。它被认为是最重要的媒介生态学专著之一。</p>\n<p>但这里我不想讨论政治、宗教或新闻等，我只想借用书中的一点核心思想 “<strong>媒介即隐喻</strong>”，</p>\n<h2 id=\"媒介\"><a class=\"anchor\" href=\"#媒介\">#</a> 媒介</h2>\n<p>“媒介” 非常好理解，就是 “内容” 的载体，就像瓶子之于水一样，“瓶子” 就是媒介，而 “水” 则是内容。如果我们更加具体一点，聚焦到信息传播这个方面，那么报纸、电视、手机就是不同的媒介，这是一种浅显的理解；更深一层，博客、短视频也是不同的媒介，而” 内容 “就是信息本身。</p>\n<p>直觉一点来说，我们会认为媒介不影响内容，就像无论水用什么样的瓶子装着，水还是水，不会发生什么变化。但是我们再进一步，其实瓶子也是会影响水的，就像是拿铁桶装水，水中就会有更多的铁元素，这个过程并不明显，但是却在潜移默化的影响我们，而波兹曼强调的就是：媒介也会影响信息，甚至，媒介直接决定了信息。</p>\n<h2 id=\"隐喻\"><a class=\"anchor\" href=\"#隐喻\">#</a> 隐喻</h2>\n<p>从我们熟悉的 “比喻” 开始，我们从小学开始就在接收这样的训练：” 以下的句子中使用了那些修辞手法并简要分析 “，而” 比喻 “应该是我们最早学会的修辞手法了。这就像我们学数学会从加法学起一样，这是因为加法更加的通用和基础；最先学” 比喻 “的原因也是这样的，我们日常生活中也会经常使用。</p>\n<p>那么 “隐喻” 是什么呢？隐喻其实就是去掉了 “像” 的比喻，比如 “天空的乌云就像一只死了三个月的猫”，这就是比喻。 但如果用 “隐喻” 的方式来表达，就不会用 “像、似、如同” 这样的喻词来提醒你这是一种比喻，比如 “天空中有一只死了三个月的猫”，这就是 “隐喻”。</p>\n<p>乍一看 “隐喻” 和 “比喻” 也没什么区别，不过是去掉了喻词，我们还是能识别出隐喻也是在做比喻。但想想，如果我们平时说话的方式都是隐喻，如果每个人都是说 “天空中有一朵一只死了三个月的猫”，如果孩子从出生开始我们就告诉他乌云是死了三个月的猫，那慢慢的，我们就会忘记这是一种比喻，习惯于把 “乌云” 真的理解为 “死了三个月的猫”。</p>\n<p>进一步的，假设在 A 国，人们把乌云说成 “死了三个月的猫”，而在 B 国，人们把乌云说成 “一只生病的猫”，那么 A 国人的世界观可能就要比 B 国人更加现实和悲观。但人们却很难意识到这种世界观的差异来自于隐喻方式的差异 [2]，但是影响是客观存在的，这就是隐喻的力量。</p>\n<h2 id=\"媒介即隐喻\"><a class=\"anchor\" href=\"#媒介即隐喻\">#</a> 媒介即隐喻</h2>\n<p>“媒介即隐喻” 本身就是 “隐喻”，直白的说应该是 “媒介具有隐喻的特点”。<strong>媒介的特点就是帮助我们把客观事物看成虚构的符号（文字、图形）来理解客观事物，但在这个过程中，媒介本身却被忽视了。</strong></p>\n<p>举几个更加具体的例子，“书” 或者说是 “纸质” 作为一种信息传播媒介，其隐喻的结果就是 “理性、抽象、逻辑、严谨、全面...”。在过去，我们把写书称为 “著书立说”，只有某领域的 “大家” 才有资格去写书，如果某人没有能力，写出来的书也没有人看，这一点相信大家都能意识到。但是还有一点的事，书作为信息的媒介，除了其承载的内容在塑造读者，媒介本身也在塑造读者，“书” 这种媒介鼓励读者进行思辨、鼓励批判性，也正是如此，又反推得写书的人更加严谨、更加全面，这种双向的过程推动社会思维方式向 “理性” 的方向发展。</p>\n<p>对比来看 “短视频” 这种媒介，其隐喻的结果就是 “麻木、轻信、盲目...”。就拿我自身的观察来看，“搞笑的、滥俗的、擦边的” 主播涨粉非常快，只要你短视频足够搞笑，哪怕只是 “尴尬” 产生的节目效果，也会有非常多人乐意关注，对比来说，如果视频的内容是严肃的哲学思辨，那么甚至不会被平台的 “算法” 推流。同时，人一种很容易麻木的生物，之前喝一杯奶茶就可以满足，过一段时间就需要喝两杯才可以。久而久之，发视频的人越来越 “娱乐”，看视频的人也越来越 “娱乐”。手机这种媒介，本身就淘汰了过于严肃、艰涩的思辨，选择了夸张的音乐、配色、话语。</p>\n<h1 id=\"互联网时代的劣币\"><a class=\"anchor\" href=\"#互联网时代的劣币\">#</a> 互联网时代的劣币</h1>\n<p>劣币驱逐良币的过程往往伴随着 “信息差”：如果几天内所有人都知道 “良币” 需要收藏了，此时 “劣币” 还未来得及铺开，那么收藏的 “良币” 的价值就会下降。这里面蕴含的点在于，在过去，想主动靠 “劣币与良币” 的差异来获利是非常困难的：过长的共识统一时间、谨慎的交易态度、关注实际的思想、同类替代物的缺少等等都是阻碍。</p>\n<p>听起来是不是很熟悉，互联网时代完全解决了这些问题：物品种类的极大丰富、激进的交易态度、虚拟交易的接收...，最重要的是 “信息的高速传播”，在加之虚拟主体的出现于有限责任制度，用 “劣币驱逐良币” 的土壤也太肥沃了，以下商品运作方式完全是可行的：</p>\n<p>将融资的钱中的 10% 用于购买廉价低质原材料，30% 用于精致的包装设计和生产，余下 60% 用于各大平台的宣发，雇佣大量的水军和头部博主作宣传，然后将商品高价卖出。最终在获利开始减少的时候，注销该品牌和公司，然后再注册一家，开始新的赚钱轮回。</p>\n<p>这样的事相信大家一定都能举出一两个例子来，我们至少是我，一直是懂这个道理的，但是对于这个 “融资” 规模的认知还是不够的，在现在这个时代，其实并不需要很大的融资规模就可以达到这个效果，这代表” 劣币 “出现的成本非常下，同时也就意味着就在我们身边，非常常见。让我产生深刻认知的是我在购买某商品时观察到的真实现象：</p>\n<p>我在 “x 红书” 平台上搜索了某类商品的测评推荐，其中有两个品牌几乎被推荐，列为性价比最高、效果最好的那一批，但是很有意思的一点是，在推荐 A 商品的文章中，压根找不到 B 商品的影子，而在推荐 B 商品的文章中也根本找不到 A 商品。这件事是非常奇怪的，按理来说，如果某个商品非常推荐，那么即使在另外的文章中也至少应该被提到，但现实是完全没有！</p>\n<p>于是我开始在去需要这两个牌子的旗舰店，并去搜索其营业执照及相关资质，最终发现这两家都是非常新的品牌，其源头厂商在这类商品的生产商中也并不出众，理论来说没有足够的资质来生产顶级的产品，顺便提一下，按实际成分来算，A、B 商品的单位有效成分价格比头部厂商更贵，那么到此时，真相也就浮出水面了，幸好，我没有成为 2.3 万订单中的一个。</p>\n<p>互联网时代对于 “劣币” 真的是最好的时代，人类本身就是从众的，而互联网可以很方便的针对某一群体构建专属的” 信息茧房 “从而操控人的选择。同时，这种信息茧房可以让 “<strong>信息不包含信息</strong>”（第一个信息指 “消息”，第二个信息指 “用于决策的知识”）：当你看见推荐，你会怀疑是 “广”；当你看见差评，你会怀疑是其他品牌的 “踩”。人的选择本来是基于知识的，当人接触到的无数信息本身却不包含任何知识的时候，人该怎么做出正确的选择呢？</p>\n<h1 id=\"对策\"><a class=\"anchor\" href=\"#对策\">#</a> 对策</h1>\n<p>当然，这个可行方案并不完善，其最本质的基于的逻辑是 “楚门的世界无法<strong>完全</strong>模拟整个世界”，商家无法影响到生活的方方面面，那么就一定会有一些背离逻辑的地方。我认为可行的方法论如下：</p>\n<ul>\n<li>交叉对比多个文章中的共同项，对于所有差异项都持谨慎态度。</li>\n<li>对 “强推” 的东西提高警惕，特别是你感觉刷到的所有文章都在吹怎么怎么好。</li>\n<li>要认识到事物的延续性，凡事吹嘘立刻见效的东西，持谨慎态度。</li>\n<li>交叉对比不同信息渠道，这个不同是指不同严肃程度的信息渠道，“d 音” 和 “x 红书” 不是两个渠道，“z 乎” 和 “x 红书” 才基本算，如果有论文，就更好了。</li>\n</ul>\n<p>总的来说，就是持怀疑的态度做选择，用理性克制冲动，有交叉比对对抗信息茧房，主动破开他。</p>\n<h1 id=\"思考\"><a class=\"anchor\" href=\"#思考\">#</a> 思考</h1>\n<h2 id=\"真就无法可治吗\"><a class=\"anchor\" href=\"#真就无法可治吗\">#</a> 真就无法可治吗？</h2>\n<p>在我开始思考这个问题的时候，我觉得是监管不力、制度缺失、惩罚不够导致的 “劣币” 泛滥，但仔细想想，其实不是这样的，“劣币驱逐良币” 是一种根植于人类贪婪本性的原理，制度本身是为人服务的，也就自然会为 “劣币” 开绿灯。一个简单的例子是：国家层面可以对所有市场上的企业进行严苛的监管，每天都派专人检查核对；所有有欺骗行为的商家直接全部死刑。想想很解气是吧？但是谁会来当商家呢？如果商品总体的选择变少了，人们的生活是变好了还是变差了呢？</p>\n<p>我承认，现行制度、监管一定是有可以改进的地方，但是要认识到制度、监管在进步，而 “劣币” 也在进步，根植于人类深处的东西是不会被人类发明的东西打败的，所以，我得出的结论是：真的无法可治，我们只能 “自我救赎”。</p>\n<h2 id=\"可能的自我救赎\"><a class=\"anchor\" href=\"#可能的自我救赎\">#</a> 可能的自我救赎？</h2>\n<p>曾经有两大人类自由终结的预言：</p>\n<ul>\n<li>\n<p><em>“奥尔威的《1984》：人类受到外来的压迫失去自由”</em>。</p>\n</li>\n<li>\n<p><em>“赫胥黎的《美丽新世界》：人类爱上工业技术带来的娱乐和文化不再思考。”</em></p>\n</li>\n</ul>\n<p>但此时，我不禁在想，会不会有另外一种可能性，现代的人类经过各种广告的洗礼，从个人利益的角度出发，重新掌握批判性思维来捍卫自己的利益。互联网确实会让很多人上当受骗，但仔细想想，现在大家的反诈意识不也有所提高了嘛？我知道这样的认识确实很乐观，但乐观一点有何不好呢？</p>\n<h2 id=\"魔法对抗魔法\"><a class=\"anchor\" href=\"#魔法对抗魔法\">#</a> 魔法对抗魔法？</h2>\n<p>由于最近在学习网络内容安全和机器学习的知识，我不禁想，这件事应该是可以通过机器学习来解决的，如果说互联网时代的” 劣币 “传播的相似点是 “<strong>用海量的信息去瘫痪人的信息处理能力</strong> “，那为什么不让信息处理能力更强的 “机器” 去处理这些信息并分析出端倪呢？我认为这件事应该是可以做到的，但是，显而易见的利益原因可能使他的诞生困难重重，但是，“太阳一定会升起”。</p>\n<h1 id=\"参考\"><a class=\"anchor\" href=\"#参考\">#</a> 参考</h1>\n<ul>\n<li>[1] <span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvJUU1JThBJUEzJUU1JUI5JUEzJUU5JUE5JTg1JUU5JTgwJTkwJUU4JTg5JUFGJUU1JUI5JUEz\">https://zh.wikipedia.org/wiki/ 劣幣驅逐良幣</span></li>\n<li>[2] <span class=\"exturl\" data-url=\"aHR0cHM6Ly9ib29rLmRvdWJhbi5jb20vcmV2aWV3LzEyMTE4OTQxLw==\">https://book.douban.com/review/12118941/</span></li>\n</ul>\n",
            "tags": [
                "思考与沉淀",
                "思考"
            ]
        },
        {
            "id": "https://gality.cn/note/PNT/fiber-optic-and-WDM/",
            "url": "https://gality.cn/note/PNT/fiber-optic-and-WDM/",
            "title": "光纤通信原理与技术",
            "date_published": "2023-10-25T08:19:46.000Z",
            "content_html": "<h1 id=\"光纤通信原理\"><a class=\"anchor\" href=\"#光纤通信原理\">#</a> 光纤通信原理</h1>\n<h2 id=\"理论前提\"><a class=\"anchor\" href=\"#理论前提\">#</a> 理论前提</h2>\n<p>“光纤” 这个词可以拆开来理解，“光” 是指信息的传输形式是依靠光的形式；“纤” 是指传输介质为玻璃纤维。让 “光” 来传输信息的前提是 **“全反射”** 现象的发现。</p>\n<blockquote>\n<p><strong>” 全反射 “</strong> 现象是指当光线从光密介质进入光疏介质，且入射角大于临界角时，折射光线完全消失，只留下反射光线的现象。</p>\n</blockquote>\n<p><img data-src=\"http://imgcdn.gality.cn/blog/o2g0de.png\" alt=\"全反射\" /></p>\n<p>基于这个现象，我们可以设计出一种圆形的导线结构（其实就是光纤），只需要在更中心的位置选用合适的光密材料，外围选用合适的光疏材料，再结合一个合适的入射角，就可以使光在导线不断的反射，并不断向前传播。</p>\n<p>光纤的纤芯主要采用高纯度的二氧化硅 (SiO<sub>2</sub>)，并掺有少量的掺杂剂，提高纤芯的光折射率 n1；包层也是高纯度的二氧化 (SiO<sub>2</sub>)，也掺有一些的掺杂剂，以降低包层的光折射率 n2， 且 n1＞n2，发生全反射；涂覆层采用丙烯酸酯、硅橡胶、尼龙，增加机械强度和可弯曲性。</p>\n<p><img data-src=\"http://imgcdn.gality.cn/blog/puwff9.png\" alt=\"光纤示意图\" /></p>\n<p>这就是可以用光来传递信息的理论基础和材料基础，至此，用光来传输信息有了理论上的可行性。</p>\n<h2 id=\"光纤工作原理\"><a class=\"anchor\" href=\"#光纤工作原理\">#</a> 光纤工作原理</h2>\n<p>光纤只是光传输的通道，具体光的怎么传输的呢？</p>\n<p>首先，发射端把要传输的信息（如话音等）转换为电信号，然后通过激光器发射到激光束上，光的强度会随电信号的频率一起变化，并通过光纤发射出去；在接收端，检测器受到光信号后把它变成电信号，经过处理后恢复原信息。</p>\n<p>单一的光纤信道容量有限，于是我们考虑将多个光纤结合在一起来增大容量：</p>\n<p><img data-src=\"http://imgcdn.gality.cn/blog/gwq3av.jpg\" alt=\"光缆示意图\" /></p>\n<p>光纤内部用玻璃纤维制成的光导纤维，可以把光信号传输到几千公里外，将几百上千根光导纤维组合在一起，制成像电缆一样的光缆，这样既提高了光导纤维的强度，又大大增加了通讯容量。</p>\n<p>光信号就是在光纤内经过一次次的折射传输到终点的，光信号在一次次折射后会分散或者衰减，因此需要把光信号每 50 公里放大一次。</p>\n<p><img data-src=\"http://imgcdn.gality.cn/blog/y72w4r.png\" alt=\"光信号传输\" /></p>\n<h1 id=\"数据传输\"><a class=\"anchor\" href=\"#数据传输\">#</a> 数据传输</h1>\n<h2 id=\"信道容量\"><a class=\"anchor\" href=\"#信道容量\">#</a> 信道容量</h2>\n<p>光纤信道容量的大小受很多因素的影响，例如：调制技术、光纤质量、带宽、光源检测器、WDM 技术等等等，我们先来考虑单根光纤、单一光线且没有任何调制技术的情况，<strong>香农 - 哈特利定理</strong>给出了在存在噪声的情况下，信息可以通过给定带宽的通信信道中传输的最大速率（信道容量）：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>C</mi><mo>=</mo><mi>B</mi><mo>⋅</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mo stretchy=\"false\">(</mo><mn>1</mn><mo>+</mo><mi>S</mi><mi>N</mi><mi>R</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">C = B \\cdot log_2(1+SNR)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">)</span></span></span></span></span></p>\n<p>其中：</p>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span> 代表信道的容量，单位为比特每秒或奈特每秒，为理论上的不包含纠错码的最大比特率。</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span> 代表信道的带宽，单位为赫兹（Hz）。</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi><mi>N</mi><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">SNR</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span> 代表信噪比，是信号功率与噪声功率之比，通常以线性比值来表示（<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi><mi mathvariant=\"normal\">/</mi><mi>o</mi><mi>v</mi><mi>e</mi><mi>r</mi><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">S /over N</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord\">/</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span></span> ）。</li>\n</ul>\n<p>这个公式表明，信道容量与带宽和信噪比之间存在对数关系。增加带宽或提高信噪比都可以增加信道的容量。</p>\n<h2 id=\"传输速率\"><a class=\"anchor\" href=\"#传输速率\">#</a> 传输速率</h2>\n<p>需要注意的是，光在光纤中的传输速度并不是 “光速”（真空中，约为 299,792,458 米 / 秒），而是速度略慢，大约为真空中光速的 2/3 左右，这是由光纤材质的折射率来决定的，折射率的定义为：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>n</mi><mo>=</mo><mfrac><mi>c</mi><mi>v</mi></mfrac></mrow><annotation encoding=\"application/x-tex\">n = \\frac{c}{v}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.7935600000000003em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.10756em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n<p>其中：</p>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 是折射率（真空的折射率被定义为 1）。</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>c</mi></mrow><annotation encoding=\"application/x-tex\">c</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">c</span></span></span></span> 真空中的光速。</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>v</mi></mrow><annotation encoding=\"application/x-tex\">v</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span></span></span></span> 是光在特定介质中的传播速度，通常以米 / 秒为单位。</li>\n</ul>\n<p>折射率是一个材料特性，材料制造完成后就已经确定了，代表了光在该材料中传播速度相对于真空中光速的比值。在光纤中，通常会选择具有高折射率的材料作为光纤内芯，而折射率越高，光速就越慢，因此光在光纤内芯中传播时速度较慢。</p>\n<h2 id=\"增大信道容量\"><a class=\"anchor\" href=\"#增大信道容量\">#</a> 增大信道容量</h2>\n<p>在实际应用中，我们会想要尽可能的增大信道的容量，使得光纤可以传输更多的信息，除了将多根光纤绑在一起形成光缆这样暴力的增加方式外，还可以考虑怎么提高单根光纤的信道容量。这时我们会联想到光的 “色散” 现象。</p>\n<h3 id=\"色散\"><a class=\"anchor\" href=\"#色散\">#</a> 色散</h3>\n<p>我们知道，光的频率和波长之间关系为：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>c</mi><mo>=</mo><mi>λ</mi><mo>⋅</mo><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">c = \\lambda \\cdot f\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">λ</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span></span></span></p>\n<p>其中：</p>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>c</mi></mrow><annotation encoding=\"application/x-tex\">c</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">c</span></span></span></span> 是光速，指的是材料中的光速。</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi></mrow><annotation encoding=\"application/x-tex\">\\lambda</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">λ</span></span></span></span> 是光的波长，通常以米为单位。</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">f</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span></span> 是光的频率，通常以赫兹（Hz）为单位。</li>\n</ul>\n<div class=\"note primary\">\n<p>严格意义上来说，公式中的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>c</mi></mrow><annotation encoding=\"application/x-tex\">c</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">c</span></span></span></span> 应该是通过 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>c</mi><mo>=</mo><mfrac><msub><mi>c</mi><mn>0</mn></msub><mi>n</mi></mfrac></mrow><annotation encoding=\"application/x-tex\">c=\\frac{c_0}{n}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.056492em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7114919999999999em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.4101em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31731428571428577em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span> 计算得到的，其中 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>c</mi><mn>0</mn></msub></mrow><annotation encoding=\"application/x-tex\">c_0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 为真空中光速，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 为材料的折射率。在实际情况中通常情况下，对于一般工程和计算，不考虑材料的将 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>c</mi></mrow><annotation encoding=\"application/x-tex\">c</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">c</span></span></span></span> 当作真空光速也是可以的，对于大多数应用来说其误差可以忽略不计。</p>\n</div>\n<p>上面的公式告诉我们，不同颜色（频率）的光在光纤中传输速度是不一样的，这就是光的 “<strong>色散</strong>”，在光纤传输中，我们可以将不同颜色的光复合起来一起传播，接收端在接收时再将这些光分离出来就可以了，这就是 “<strong>波分复用（Wavelength Division Multiplexing，WDM）</strong>” 技术的思想。</p>\n<h3 id=\"波分复用技术\"><a class=\"anchor\" href=\"#波分复用技术\">#</a> 波分复用技术</h3>\n<p>波分复用（Wavelength Division Multiplexing，WDM）技术用于增大光通信系统的信道容量，是一种光通信中常用的多路复用技术。WDM 技术允许同时在光纤中传输多个不同波长（或频率）的光信号，每个波长光信号都可以携带独立的数据流，从而有效地增加了光纤通信系统的信道容量。</p>\n<p><img data-src=\"http://imgcdn.gality.cn/blog/8z24ob.png\" alt=\"波分复用示意图\" /></p>\n<p>WDM 技术的核心思想是利用<strong>光的不同波长来传输不同的信号</strong>，就像广播电视中使用不同频道来传输不同节目一样。通过将多个波长的光信号合并到同一根光纤中，使得多个独立的通信信道在相同的物理基础设施上共存，从而大幅提高了通信系统的容量</p>\n<p>对于采用 WDM 的系统来说，想让其正常运行，需要控制各个光信号的波长，如果波长间隔太短的话，很容易区分不开；而如果波长间隔过长，利用率又会降低。</p>\n<p><img data-src=\"http://imgcdn.gality.cn/blog/ufhx5g.png\" alt=\"WDM波长示意图\" /></p>\n<p>早期的时候，技术条件有限，波长间隔会控制在几十纳米，这种比较分散的 WDM 被称为 “<strong>稀疏波分复用（ Coarse WDM，CWDM）</strong>”。后来，技术越来越先进，波长间隔压得越来越短，到了几 纳米 的级别，就成了紧密的 WDM，叫做 “<strong>密集波分复用（Dense WDM，DWDM）</strong>”</p>\n<p>CWDM 的波长间隔 20nm，波长范围从 1270nm 到 1610nm，有 18 个波段。</p>\n<p><img data-src=\"http://imgcdn.gality.cn/blog/hefojm.png\" alt=\"CWDM中心波段\" /></p>\n<p>「因为 1270-1470nm 波段有明显的衰减增加，很多旧型光纤不能正常使用，所以 CWDM 一般优先使用 1470~1610nm 的 8 个波段。」</p>\n<p>DWDM 的波长间隔可以是 1.6nm、0.8nm、0.4nm、0.2nm，可以容纳 40、80、160 个波（最大可支持 192 波）。DWDM 的波长范围为 1525nm 至 1565nm（C 波段）和 1570nm 至 1610nm（L 波段）。</p>\n<p><img data-src=\"http://imgcdn.gality.cn/blog/0yra5z.png\" alt=\"DWDM波段\" /></p>\n<p>DWDM 常用 C 波段，波长间隔 0.4nm，通路频率间隔 50GHz。</p>\n<p>以上就是光纤通信最基本的原理和波分复用技术，在实际的传输过程中，在最基本的物理层之上为了实现不同的目的，还会对信号进行编码，我们会在下一篇文章中讨论。</p>\n",
            "tags": [
                "学习笔记",
                "PNT",
                "通信",
                "授时",
                "学习笔记",
                "PNT"
            ]
        },
        {
            "id": "https://gality.cn/note/nndl/regularization/",
            "url": "https://gality.cn/note/nndl/regularization/",
            "title": "ML Regularization",
            "date_published": "2023-10-24T11:39:12.000Z",
            "content_html": "<div class=\"note info no-icon\">\n<p>之前写大作业的时候涉及到了正则化的知识，但由于在实际训练过程中发现效果不是很好，就没有深入研究了，这里记录一下。</p>\n</div>\n<h1 id=\"问题引入\"><a class=\"anchor\" href=\"#问题引入\">#</a> 问题引入</h1>\n<p>我们假设这样一个问题：给出房屋大小和对应的房屋售价，寻找某一个函数来描述大小和售价的关系（具体数据是什么样的不重要，我们要看思想）。</p>\n<h2 id=\"一次方程\"><a class=\"anchor\" href=\"#一次方程\">#</a> 一次方程</h2>\n<p>首先，我们考虑用一个线性方程去拟合，例如：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>y</mi><mo>=</mo><mi>b</mi><mo>+</mo><mi>w</mi><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">y=b+wx\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.77777em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mord mathnormal\">x</span></span></span></span></span></p>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span>：房屋售价</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span>：房屋面积</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>w</mi></mrow><annotation encoding=\"application/x-tex\">w</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span></span></span>：权重（weight）</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span>：偏差（bias）</li>\n</ul>\n<p>此时，机器学习的目标就是去寻找到一组参数 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><msub><mi>w</mi><mrow><mi>b</mi><mi>e</mi><mi>s</mi><mi>t</mi></mrow></msub><mo separator=\"true\">,</mo><msub><mi>b</mi><mrow><mi>b</mi><mi>e</mi><mi>s</mi><mi>t</mi></mrow></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(w_{best}, b_{best})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">b</span><span class=\"mord mathnormal mtight\">e</span><span class=\"mord mathnormal mtight\">s</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">b</span><span class=\"mord mathnormal mtight\">e</span><span class=\"mord mathnormal mtight\">s</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> ，使得 loss 最小，一个可能的函数图像为：</p>\n<p><img data-src=\"http://imgcdn.gality.cn/blog/onm4vf.png\" alt=\"线性方程\" height=\"210\" /></p>\n<p>可以看到，线性方程不太能描述房屋大小和售价的关系，这种情况我们称为 <strong>“欠拟合”</strong> 。</p>\n<h2 id=\"二次方程\"><a class=\"anchor\" href=\"#二次方程\">#</a> 二次方程</h2>\n<p>尝试用二次函数去描述二者关系，例如：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>y</mi><mo>=</mo><mi>b</mi><mo>+</mo><msub><mi>w</mi><mn>1</mn></msub><mi>x</mi><mo>+</mo><msub><mi>w</mi><mn>2</mn></msub><msup><mi>x</mi><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">y = b + w_1x + w_2x^2\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.77777em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.73333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0141079999999998em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641079999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p>那么机器学习的目标就是找到一组参数 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><msub><mi>w</mi><mrow><mn>1</mn><mi>b</mi><mi>e</mi><mi>s</mi><mi>t</mi></mrow></msub><mo separator=\"true\">,</mo><msub><mi>w</mi><mrow><mn>2</mn><mi>b</mi><mi>e</mi><mi>s</mi><mi>t</mi></mrow></msub><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(w_{1best}, w_{2best}, b)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mord mathnormal mtight\">b</span><span class=\"mord mathnormal mtight\">e</span><span class=\"mord mathnormal mtight\">s</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mord mathnormal mtight\">b</span><span class=\"mord mathnormal mtight\">e</span><span class=\"mord mathnormal mtight\">s</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span></span></span></span> 使 loss 最小。可以看到，可学习的参数多了一个，模型的学习能力也会增强，理论来说，机器可以找到一个具有更强的描述能力的函数，此时，学习到的模型的函数图像可能为：</p>\n<p><img data-src=\"http://imgcdn.gality.cn/blog/9ratys.jpg\" alt=\"二次方程\" height=\"210\" /></p>\n<p>可以看到，描述效果更好了一些。那我们可以很容易的想到，只需要更高次的多项式，就可以达到更好的学习效果，为了对比明显一点，我们看看选用八次多项式作为模型时的效果。</p>\n<h2 id=\"八次多项式\"><a class=\"anchor\" href=\"#八次多项式\">#</a> 八次多项式</h2>\n<p>当利用八次多项式来描述二者关系时，机器可学习的参数就有 9 个，学习能力大大提升，八次多项式形如：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>y</mi><mo>=</mo><mi>b</mi><mo>+</mo><msub><mi>w</mi><mn>1</mn></msub><mi>x</mi><mo>+</mo><msub><mi>w</mi><mn>2</mn></msub><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo>+</mo><msub><mi>w</mi><mn>8</mn></msub><msup><mi>x</mi><mn>8</mn></msup></mrow><annotation encoding=\"application/x-tex\">y = b + w_1x+w_2x^2+...+w_8x^8\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.77777em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.73333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0141079999999998em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641079999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0141079999999998em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">8</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641079999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">8</span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p>此时，学习到的模型的函数图像可能为：</p>\n<p><img data-src=\"http://imgcdn.gality.cn/blog/gprobe.png\" alt=\"8次多项式\" height=\"210\" /></p>\n<p>由于我这里的数据点比较少，理论来说八次多项式已经可以近乎完美的拟合出样例的函数曲线了，事实也正是如此，但是我们发现了此时的曲线中，在部分面积下，售价甚至出现了负数的情况，这显然是不可能，这种情况我们称为 <strong>“过拟合”</strong>。</p>\n<h1 id=\"正则化\"><a class=\"anchor\" href=\"#正则化\">#</a> 正则化</h1>\n<p>正则化就是为了解决模型的过拟合问题而提出的，回顾我们的 loss 函数（用 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>y</mi><mo>^</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\hat y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.69444em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.19444em;\"><span class=\"mord\">^</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.19444em;\"><span></span></span></span></span></span></span></span></span> 代指 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span> 的实际值）：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>L</mi><mo>=</mo><mo>∑</mo><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>y</mi><mo>^</mo></mover><mo>−</mo><mi>y</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup><mo>=</mo><mo>∑</mo><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>y</mi><mo>^</mo></mover><mo>−</mo><mo stretchy=\"false\">(</mo><mi>b</mi><mo>+</mo><mo>∑</mo><msub><mi>w</mi><mi>i</mi></msub><mi>x</mi><mo stretchy=\"false\">)</mo><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">L = \\sum (\\hat y - y)^2 = \\sum (\\hat y -(b + \\sum w_ix))^2\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.6000100000000002em;vertical-align:-0.55001em;\"></span><span class=\"mop op-symbol large-op\" style=\"position:relative;top:-0.000004999999999977245em;\">∑</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.69444em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.19444em;\"><span class=\"mord\">^</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.19444em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1141079999999999em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641079999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.6000100000000002em;vertical-align:-0.55001em;\"></span><span class=\"mop op-symbol large-op\" style=\"position:relative;top:-0.000004999999999977245em;\">∑</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.69444em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.19444em;\"><span class=\"mord\">^</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.19444em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.6000100000000002em;vertical-align:-0.55001em;\"></span><span class=\"mop op-symbol large-op\" style=\"position:relative;top:-0.000004999999999977245em;\">∑</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641079999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p>此时我们可以引入一个 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi><mo>∑</mo><mo stretchy=\"false\">(</mo><msub><mi>w</mi><mi>i</mi></msub><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\lambda \\sum(w_i)^2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.064118em;vertical-align:-0.25001em;\"></span><span class=\"mord mathnormal\">λ</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span> 项，此时公式变为：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>L</mi><mo>=</mo><mo>∑</mo><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>y</mi><mo>^</mo></mover><mo>−</mo><mo stretchy=\"false\">(</mo><mi>b</mi><mo>+</mo><mo>∑</mo><msub><mi>w</mi><mi>i</mi></msub><mi>x</mi><mo stretchy=\"false\">)</mo><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup><mo>+</mo><mi>λ</mi><mo>∑</mo><mo stretchy=\"false\">(</mo><msub><mi>w</mi><mi>i</mi></msub><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">L = \\sum (\\hat y -(b + \\sum w_ix))^2 + \\lambda \\sum(w_i)^2\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.6000100000000002em;vertical-align:-0.55001em;\"></span><span class=\"mop op-symbol large-op\" style=\"position:relative;top:-0.000004999999999977245em;\">∑</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.69444em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.19444em;\"><span class=\"mord\">^</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.19444em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.6000100000000002em;vertical-align:-0.55001em;\"></span><span class=\"mop op-symbol large-op\" style=\"position:relative;top:-0.000004999999999977245em;\">∑</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641079999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.6000100000000002em;vertical-align:-0.55001em;\"></span><span class=\"mord mathnormal\">λ</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-symbol large-op\" style=\"position:relative;top:-0.000004999999999977245em;\">∑</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641079999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p>引入的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi><mo>∑</mo><mo stretchy=\"false\">(</mo><msub><mi>w</mi><mi>i</mi></msub><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\lambda \\sum(w_i)^2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.064118em;vertical-align:-0.25001em;\"></span><span class=\"mord mathnormal\">λ</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span> 项（称为正则项），是用于限制了 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>w</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">w_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 的大小的，我们希望 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>w</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">w_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 尽可能的小，来使得曲线相对更加平滑。我们看八次多项式的拟合曲线，某种意义上来说，就是因为曲线太陡峭，变化太过剧烈，才导致对显示情况的描述的失真，在实际中，变化一般都是相对平缓的，所以，更加平滑的曲线一般来说会更加贴近现实一些，防止过拟合。</p>\n<p>但是需要注意的是，我们追求的是曲线的 <strong>“相对”</strong> 平滑，而非 <strong>“绝对”</strong> 平滑，直线就是最平滑的曲线了，但并不能很好的描述现实。那么，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi></mrow><annotation encoding=\"application/x-tex\">\\lambda</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">λ</span></span></span></span> 就是由于控制这个平滑程度的，称为 <strong>“正则化参数”</strong> 。如果 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi></mrow><annotation encoding=\"application/x-tex\">\\lambda</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">λ</span></span></span></span> 非常下，模型相当于基本没有被修正；如果 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi></mrow><annotation encoding=\"application/x-tex\">\\lambda</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">λ</span></span></span></span> 非常大，loss 想更小只能让 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>w</mi><mi>i</mi></msub><mo>→</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">w_i  \\rightarrow 0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span></span></span></span> ，此时寻找到的模型就会趋向于一条直线，所以，在实际情况下，我们需要选取合适的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi></mrow><annotation encoding=\"application/x-tex\">\\lambda</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">λ</span></span></span></span> 值。</p>\n<p>以上就是正则化的基本思想，正则项其实限制了模型的复杂程度，引入正则化后，机器需要找到一个 <strong>选择经验风险</strong>（第一项）和 <strong>模型复杂度</strong>（正则项）同时较小的模型，从而降低了 “过拟合” 的风险。</p>\n<p>还有一点需要注意的是：正则项中无需包含参数 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span>，因为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span> 的改变只会让曲线平移而已，对于曲线本身的形态不产生影响，所以正则项无需包含。</p>\n<p>常见的有正则项有 <strong>L1 正则</strong> 和 <strong>L2 正则</strong> ，其中 L2 正则 的控制过拟合的效果比 L1 正则 的好。这两个正则项在框架中都已经实现了，直接用就可以了，就不过多赘述了。当然，控制过拟合风险的方法还有 <strong>Dropout</strong>，我觉得会更好用一些。</p>\n",
            "tags": [
                "学习笔记",
                "神经网络与深度学习",
                "机器学习",
                "深度学习",
                "正则化"
            ]
        },
        {
            "id": "https://gality.cn/misc/trail-and-error/Mac-Latex/",
            "url": "https://gality.cn/misc/trail-and-error/Mac-Latex/",
            "title": "Mac下Latex论文一条龙",
            "date_published": "2023-10-23T12:12:12.000Z",
            "content_html": "<div class=\"note info no-icon\">\n<p>先说最终结论：</p>\n<ul>\n<li>Visual Studio Code：LaTex 论文编写 IDE</li>\n<li>MacTex：LaTex 编译引擎</li>\n<li>Zotero：论文管理工具</li>\n<li>vscode 插件：\n<ul>\n<li>LaTex Workshop：使用 VSCode 编写 LaTex 的核心插件，必需</li>\n<li>LaTex Utilities：基于 LaTex Workshop 的增强插件，非必需</li>\n<li>Code Spell Checker：自动拼写检查插件，非必需</li>\n<li>Ultra Math Preview：数学公式自动预览插件，非必需</li>\n</ul>\n</li>\n</ul>\n</div>\n<div class=\"note primary no-icon\">\n<p>懒狗看这里：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cub3ZlcmxlYWYuY29tLw==\">在线 LaTex 编辑器</span></p>\n<p>开箱即用，包含了编辑 LaTex 所需要的一切，还是在线编译保存，如果不是像我一样就喜欢在本地编写的话可以选用这个。</p>\n</div>\n<h1 id=\"环境\"><a class=\"anchor\" href=\"#环境\">#</a> 环境</h1>\n<h2 id=\"visual-studio-code\"><a class=\"anchor\" href=\"#visual-studio-code\">#</a> Visual Studio Code</h2>\n<p>跨环境 IDE，自身非常轻量的同时，还可以通过丰富的扩展插件来支持各种语言，安装过程就是下载点击，非常简单，就不过多赘述了。</p>\n<h2 id=\"mactex\"><a class=\"anchor\" href=\"#mactex\">#</a> MacTex</h2>\n<p>Mac 环境下的 LaTex 编译引擎，将 LaTex 编译成 pdf 的必需核心。</p>\n<p>下载地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly90dWcub3JnL21hY3RleC9tYWN0ZXgtZG93bmxvYWQuaHRtbA==\">https://tug.org/mactex/mactex-download.html</span></p>\n<p>下载后同样是点击安装，但是安装程序本身没有自动添加环境变量，所以说，如果想跟 VSCode 联合使用的话，还需要自行添加环境变量。就 2023 年而言，默认安装地址为： <code>/usr/local/texlive/2023/</code> ，其应用的位置为： <code>./bin/universal-darwin</code> ，所以，我们可以用如下命令添加环境变量：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"export PATH=/usr/local/texlive/2023/bin/universal-darwin:<span class=\"token variable\">$&#123;<span class=\"token environment constant\">PATH</span>&#125;</span>\"</span> <span class=\"token operator\">>></span> ~/.zshrc</pre></td></tr></table></figure><h2 id=\"zotero\"><a class=\"anchor\" href=\"#zotero\">#</a> Zotero</h2>\n<p>Zotero 是一个免费、开源、易用的文献管理软件，可以高效的组织需要的文献，配合浏览器插件可以一键将 Web 中的论文保存到 Zotero 中，结合 Better BibTeX for Zotero 还可以便捷的将论文引用到文章中。</p>\n<p>下载地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuem90ZXJvLm9yZy9kb3dubG9hZC8=\">https://www.zotero.org/download/</span></p>\n<p>浏览器插件安装地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jaHJvbWUuZ29vZ2xlLmNvbS93ZWJzdG9yZS9kZXRhaWwvem90ZXJvLWNvbm5lY3Rvci9la2hhZ2tsY2piZHBhamdwamdtYmlvbm9obHBkYmpnYw==\">https://chrome.google.com/webstore/detail/zotero-connector/ekhagklcjbdpajgpjgmbionohlpdbjgc</span></p>\n<h2 id=\"vscode-插件\"><a class=\"anchor\" href=\"#vscode-插件\">#</a> VSCode 插件</h2>\n<p>VSCode 的插件都是在插件市场中点击安装的，所以安装过程就不细说了。</p>\n<h3 id=\"latex-workshop\"><a class=\"anchor\" href=\"#latex-workshop\">#</a> LaTex Workshop</h3>\n<p>网上很多教程都比较老了，说是需要配置一大堆东西，但其实现在的 LaTex Workshop 的默认配置已经很好了，我们只需要对配置文件的编译工具 <code>latex-workshop.latex.tools</code>  稍做修改即可：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token property\">\"latex-workshop.latex.tools\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>          <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"latexmk\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>          <span class=\"token property\">\"command\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"latexmk\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>          <span class=\"token property\">\"args\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token string\">\"-synctex=1\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token string\">\"-interaction=nonstopmode\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token string\">\"-file-line-error\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token string\">\"-xelatex\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token string\">\"-outdir=%OUTDIR%\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token string\">\"-cd\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token string\">\"%DOC%\"</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>          <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>          <span class=\"token property\">\"env\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token property\">\"latex-workshop.synctex.afterBuild.enabled\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>另外，配置编译完成后将 pdf 自动同步到代码中光标位置：</p>\n<p><img data-src=\"http://imgcdn.gality.cn/blog/tdeh1n.png\" alt=\"配置\" /></p>\n<p>很多教程中还使用到了外部的 pdf 浏览工具例如 skim 等，实际测试中内置 pdf 浏览器功能已经足够强大了，个人认为无需额外下载 pdf 工具并配置。</p>\n<h3 id=\"latex-utilities\"><a class=\"anchor\" href=\"#latex-utilities\">#</a> LaTex Utilities</h3>\n<p>对 LaTex Workshop 的功能进行增强，配合 Better BibTeX for Zotero 和 Zotero 可以便捷的进行论文引用。总之，安装就对了。</p>\n<h3 id=\"code-spell-checker\"><a class=\"anchor\" href=\"#code-spell-checker\">#</a> Code Spell Checker</h3>\n<p>英语单词拼写检查插件，个人觉得还是挺有用的，平时在打英文的时候偶尔脑子抽筋，打错了又不容易看出来，这个插件可以很好的帮助到我。</p>\n<h3 id=\"ultra-math-preview\"><a class=\"anchor\" href=\"#ultra-math-preview\">#</a> Ultra Math Preview</h3>\n<p>实时数学公式预览插件，插件说明中有详细的演示，对于我这种初学 LaTex 公式、根本对于自己打的是什么没太大概念的人很有帮助，无需等待编译看结果了，数学公式可以试试反馈。</p>\n<h1 id=\"使用\"><a class=\"anchor\" href=\"#使用\">#</a> 使用</h1>\n<p>我们以 IEEE 的模版为例来演示如何使用。</p>\n<p>官方模版下载地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaWVlZS5vcmcvY29udGVudC9kYW0vaWVlZS1vcmcvaWVlZS93ZWIvb3JnL3B1YnMvY29uZmVyZW5jZS1sYXRleC10ZW1wbGF0ZV8xMC0xNy0xOS56aXA=\">https://www.ieee.org/content/dam/ieee-org/ieee/web/org/pubs/conference-latex-template_10-17-19.zip</span></p>\n<p>下载解压后，直接在 VSCode 中打开文件夹，当 VSCode 检测到 LaTex 相关文件后，会在右边显示出 <code>TEX</code>  的标签</p>\n<p><img data-src=\"http://imgcdn.gality.cn/blog/48ni7f.jpg\" alt=\"界面图\" /></p>\n<p>在 <code>TEX</code>  页面有更多功能且带有说明，可根据说明自行探索：</p>\n<p><img data-src=\"http://imgcdn.gality.cn/blog/b1g359.jpg\" alt=\"Tex界面\" /></p>\n<h1 id=\"快捷键\"><a class=\"anchor\" href=\"#快捷键\">#</a> 快捷键</h1>\n<p>一些使用中的 Tips：</p>\n<ul>\n<li>正向定位：<span class=\"kbd\">⌘</span> + <span class=\"kbd red\">⌥</span> +  <span class=\"kbd purple\">J</span> 将 pdf 定位到代码中光标位置。</li>\n<li>反向定位：在内置 pdf 预览中使用 <span class=\"kbd\">⌘</span> + <span class=\"kbd red\">左键</span> 点击单词，实现反向定位 <code>.tex</code>  中代码位置。</li>\n<li>拼写纠错：光标移动到有问题的拼写上，使用 <span class=\"kbd\">⌘</span> + <span class=\"kbd red\">.</span> 显示纠正备选。</li>\n</ul>\n",
            "tags": [
                "杂项",
                "踩坑",
                "杂项",
                "踩坑",
                "Latex"
            ]
        },
        {
            "id": "https://gality.cn/note/nndl/HW-1/",
            "url": "https://gality.cn/note/nndl/HW-1/",
            "title": "李宏毅ML2022-Spring大作业01｜COVID-19 Cases Prediction (Regression)",
            "date_published": "2023-10-18T06:22:27.000Z",
            "content_html": "<div class=\"note info no-icon\">\n<p>李宏毅老师 2022 年春季学习机器中留的第一次大作业，需要根据各项疫情相关数据，自行实现网络结构并训练模型，最终实现一个可以精准预测疫情增长人数的深度学习模型。</p>\n</div>\n<h1 id=\"大作业内容\"><a class=\"anchor\" href=\"#大作业内容\">#</a> 大作业内容</h1>\n<p>根据人们填写的日常调查问卷，设计并实现一个深度学习模型用于 COVID-19 感染人数的预测。</p>\n<p>具体的作业手册请参考<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb2xhYi5yZXNlYXJjaC5nb29nbGUuY29tL2RyaXZlLzFGVGNHNkNFLUhJTG52Rnp0RUZLZGF1TWxQS2ZRdm01Wg==\">官方手册</span>。</p>\n<h2 id=\"详细描述\"><a class=\"anchor\" href=\"#详细描述\">#</a> 详细描述</h2>\n<ul>\n<li>目标：预测 COVID-19 感染人数</li>\n<li>数据来源：Delphi group @ CMU「A daily survey April 2020 via facebook」</li>\n<li>输入输出要求：提供美国某州过去 4 天的调查问卷结果，然后预测第 5 天的新增阳性病例的百分比。</li>\n</ul>\n<h2 id=\"数据格式\"><a class=\"anchor\" href=\"#数据格式\">#</a> 数据格式</h2>\n<ul>\n<li>州（37 个，用 one-hot 向量的方式编码）</li>\n<li>类似新冠的疾病\n<ul>\n<li>cli、ili ...</li>\n</ul>\n</li>\n<li>行为指标\n<ul>\n<li>wearing_mask、travel_out_state ...</li>\n</ul>\n</li>\n<li>精神健康指标\n<ul>\n<li>anxious、depressed ...</li>\n</ul>\n</li>\n<li>确诊阳性病例\n<ul>\n<li>Tested_positive（这个就是我们希望预测的指标）</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"评价指标\"><a class=\"anchor\" href=\"#评价指标\">#</a> 评价指标</h2>\n<p>采用均方误差（Mean Squared Error，MSE）来评价误差。</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>M</mi><mi>S</mi><mi>E</mi><mo>=</mo><mfrac><mn>1</mn><mi>N</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mo stretchy=\"false\">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><msub><mover accent=\"true\"><mi>y</mi><mo>^</mo></mover><mi>i</mi></msub><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">MSE = {1 \\over N} \\sum_{i=1}^{N}(y_i- \\hat y_i)^2\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.106005em;vertical-align:-1.277669em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8283360000000002em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3000050000000005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.277669em;\"><span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1141079999999999em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.69444em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.19444em;\"><span class=\"mord\">^</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.19444em;\"><span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641079999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span></span></p>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>y</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">y_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>：模型预测值</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mover accent=\"true\"><mi>y</mi><mo>^</mo></mover><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\hat y_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.69444em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.19444em;\"><span class=\"mord\">^</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.19444em;\"><span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>：实际值</li>\n</ul>\n<h2 id=\"作业目的\"><a class=\"anchor\" href=\"#作业目的\">#</a> 作业目的</h2>\n<ul>\n<li>通过深度神经网络（deep neural networks，DNN）解决一个回归问题</li>\n<li>理解基本的 DNN 训练技巧\n<ul>\n<li>超参数调优、特征选择、正则化、...</li>\n</ul>\n</li>\n<li>熟悉 PyTorch</li>\n</ul>\n<hr />\n<h1 id=\"环境准备\"><a class=\"anchor\" href=\"#环境准备\">#</a> 环境准备</h1>\n<h2 id=\"conda\"><a class=\"anchor\" href=\"#conda\">#</a> Conda</h2>\n<p>本文不在赘述 Conda 的安装，参考另一篇<a href=\"https://gality.cn/misc/trail-and-error/conda-mamba/\">博客</a>。</p>\n<h2 id=\"数据集\"><a class=\"anchor\" href=\"#数据集\">#</a> 数据集</h2>\n<p><code>gdown</code>  是一个<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3drZW50YXJvL2dkb3du\"> github 项目</span>，是一个由 python 实现的从 Google Drive 下载大文件的工具（由于安全策略无法使用 wget/curl 进行下载）。如果之前从未用 <code>gdown</code>  下载过东西，需要现在 <code>conda</code>  的 <code>base</code>  环境安装 <code>gdown</code> 。</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>mamba <span class=\"token function\">install</span> gdown</pre></td></tr></table></figure><p>然后就可以直接用 gdown 下载文件了：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>gdown <span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token builtin\">id</span> <span class=\"token string\">'1kLSW_-cW2Huj7bh84YTdimGBOJaODiOS'</span> <span class=\"token operator\">-</span><span class=\"token operator\">-</span>output covid<span class=\"token punctuation\">.</span>train<span class=\"token punctuation\">.</span>csv</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>down <span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token builtin\">id</span> <span class=\"token string\">'1iiI5qROrAhZn-o4FPqsE97bMzDEFvIdg'</span> <span class=\"token operator\">-</span><span class=\"token operator\">-</span>output covid<span class=\"token punctuation\">.</span>test<span class=\"token punctuation\">.</span>csv</pre></td></tr></table></figure><p>此时，就得到了训练数据集和测试数据集。</p>\n<h2 id=\"依赖库\"><a class=\"anchor\" href=\"#依赖库\">#</a> 依赖库</h2>\n<p>作业需要依赖一些库，提前安装一下，作业中给出了 <code>import</code>  部分的代码：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># Numerical Operations</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> math</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># Reading/Writing Data</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> os</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> csv</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># For Progress Bar</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">from</span> tqdm <span class=\"token keyword\">import</span> tqdm</pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># Pytorch</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">import</span> torch </pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">import</span> torch<span class=\"token punctuation\">.</span>nn <span class=\"token keyword\">as</span> nn</pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">from</span> torch<span class=\"token punctuation\">.</span>utils<span class=\"token punctuation\">.</span>data <span class=\"token keyword\">import</span> Dataset<span class=\"token punctuation\">,</span> DataLoader<span class=\"token punctuation\">,</span> random_split</pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\"># For plotting learning curve</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">from</span> torch<span class=\"token punctuation\">.</span>utils<span class=\"token punctuation\">.</span>tensorboard <span class=\"token keyword\">import</span> SummaryWriter</pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\"># For plot</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">import</span> matplotlib<span class=\"token punctuation\">.</span>pyplot <span class=\"token keyword\">as</span> plt</pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">import</span> seaborn <span class=\"token keyword\">as</span> sns</pre></td></tr></table></figure><p>因此，我们创建一个虚拟环境并安装对应的库：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>mamba create <span class=\"token parameter variable\">-n</span> MLlearnEnv <span class=\"token assign-left variable\">python</span><span class=\"token operator\">=</span><span class=\"token number\">3.9</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>conda activate MLlearnEnv</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>mamba <span class=\"token function\">install</span> pytorch::pytorch torchvision torchaudio <span class=\"token parameter variable\">-c</span> pytorch</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>mamba <span class=\"token function\">install</span> pandas tqdm packaging tensorboard matplotlib seaborn</pre></td></tr></table></figure><p>注意，由于电脑原因，这里安装 PyTorch 的命令是安装 CPU 版本的，对于初学者来说 CPU 的算力其实已经够了，如果安装 GPU 版本需要去对应安装 CUDA 驱动，所以具体安装命令请参考<span class=\"exturl\" data-url=\"aHR0cHM6Ly9weXRvcmNoLm9yZy8=\"> PyTorch 官网</span>。</p>\n<h1 id=\"知识准备\"><a class=\"anchor\" href=\"#知识准备\">#</a> 知识准备</h1>\n<p>这里仅对已给出的源代码进行解释，请自行进行成体系的工具学习。</p>\n<h2 id=\"可视化\"><a class=\"anchor\" href=\"#可视化\">#</a> 可视化</h2>\n<p>我们可以使用 <code>tensorboard</code>  来可视化训练过程，使用起来非常简单，只需要在作业目录下执行：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>tensorboard <span class=\"token parameter variable\">--logdir</span><span class=\"token operator\">=</span>runs</pre></td></tr></table></figure><p><code>logdir</code>  指向训练过程中生成的运行数据文件夹，默认为 <code>./runs</code> 。</p>\n<p>执行后会在本地监听 <code>6006</code>  端口，访问对应的 web 页面即可看到训练过程的图表。</p>\n<p><img data-src=\"http://imgcdn.gality.cn/blog/70c9ny.png\" alt=\"tensorboard\" /></p>\n<h2 id=\"实用函数\"><a class=\"anchor\" href=\"#实用函数\">#</a> 实用函数</h2>\n<p>针对源代码给出的无需修改的工具函数，简单做一些解释。</p>\n<h3 id=\"设置随机数种子\"><a class=\"anchor\" href=\"#设置随机数种子\">#</a> 设置随机数种子</h3>\n<p>为了保证 reproducibility（可复现性），需要设置随机数生成种子，<span class=\"exturl\" data-url=\"aHR0cHM6Ly9weXRvcmNoLm9yZy9kb2NzL3N0YWJsZS9ub3Rlcy9yYW5kb21uZXNzLmh0bWw=\">官方文档</span>给出了详细解释，这里简单说明一下。</p>\n<div class=\"note info no-icon\">\n<p>由于机器学习中涉及到很多随机数和随机过程，那么这些随机数和随机过程就可能直接对结果产生影响，从实验的可复现性来讲，我们希望同一个代码的多次运行结果是一致的，我们分别讨论。</p>\n<ul>\n<li>\n<p><strong>随机数</strong>：计算机生成随机数的方法其实是根据一个随机数 “种子”，然后以某种确定性的算法来实现的，这个种子常常是一个变化的值（例如时间戳），以此来保证生成的随机序列不可预测。那么在当前环境下，我们就可以通过给定一个随机数种子的方式来尽可能的保证随机数序列相同，减少对可复现性的干扰。</p>\n<p>由于程序中可能涉及到多个库，而不同库又采用不同的随机数生成器，所以需要分别对所有涉及到的库设置随机数种子，如代码中就同时设置了 <code>PyTorch</code>  和 <code>numpy</code>  的种子。</p>\n</li>\n<li>\n<p><strong>随机过程</strong>：在使用 CUDA 对训练过程进行加速时，cuDNN 可能会通过基准测试来从多个卷积中选择最快的卷积，成为可能的不确定来源之一。</p>\n<p>另一方面，cuDNN 在训练过程中采用的某些算法本身可能就是不确定的，每次运算会产生不同的结果。这些都是我们需要避免的。</p>\n</li>\n</ul>\n<p>遗憾的是，即使我们选用相同的随机数种子，PyTorch 仍无法确保可复现性，设置同一随机数种子和确定过程仅能保证在同一平台、同一硬件、同一 PyTorch 版本的下，多次实验结果一致。</p>\n</div>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># seed: 自行设定的随机数种子</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">same_seed</span><span class=\"token punctuation\">(</span>seed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"Fixes random number generator seeds for reproducibility.\"\"\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    torch<span class=\"token punctuation\">.</span>backends<span class=\"token punctuation\">.</span>cudnn<span class=\"token punctuation\">.</span>deterministic <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span> <span class=\"token comment\"># 强制使用确定性算法</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    torch<span class=\"token punctuation\">.</span>backends<span class=\"token punctuation\">.</span>cudnn<span class=\"token punctuation\">.</span>benchmark <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span> <span class=\"token comment\"># 禁用 cuDNN 的卷积基准测试</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>seed<span class=\"token punctuation\">(</span>seed<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 设置 numpy 的随机数生成</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    torch<span class=\"token punctuation\">.</span>manual_seed<span class=\"token punctuation\">(</span>seed<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 设置 PyTorch 的随机数生成</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">if</span> torch<span class=\"token punctuation\">.</span>cuda<span class=\"token punctuation\">.</span>is_available<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 可以不要，新版本 PyTorch 中 manual_seed 会同时设置 CPU 和 GPU 版本的随机数种子</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        torch<span class=\"token punctuation\">.</span>cuda<span class=\"token punctuation\">.</span>manual_seed_all<span class=\"token punctuation\">(</span>seed<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"数据集分割\"><a class=\"anchor\" href=\"#数据集分割\">#</a> 数据集分割</h3>\n<p>由于需要计算损失函数来对模型参数进行动态的调整，我们需要将 <code>训练数据集</code> 分割成 <code>训练集</code> 和 <code>验证集</code> ，源代码中给出了一个通用的分割函数。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># data: 训练集（矩阵）</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># valid_ratio: 验证集的比例 (validation_size = train_size * valid_ratio)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># seed: 随机数种子</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">train_valid_split</span><span class=\"token punctuation\">(</span>data_set<span class=\"token punctuation\">,</span> valid_ratio<span class=\"token punctuation\">,</span> seed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"Split provided training data into training set and validation set\"\"\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    valid_set_size <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>valid_ratio <span class=\"token operator\">*</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>data_set<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    train_set_size <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>data_set<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> valid_set_size</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    train_set<span class=\"token punctuation\">,</span> valid_set <span class=\"token operator\">=</span> random_split<span class=\"token punctuation\">(</span>data_set<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>train_set_size<span class=\"token punctuation\">,</span> valid_set_size<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> generator<span class=\"token operator\">=</span>torch<span class=\"token punctuation\">.</span>Generator<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>manual_seed<span class=\"token punctuation\">(</span>seed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 将一个数据集随机拆成两个无重叠的数据集，两个数据集的大小由第二个参数指定</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">return</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>train_set<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>valid_set<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"预测函数\"><a class=\"anchor\" href=\"#预测函数\">#</a> 预测函数</h3>\n<p>一个预测函数，当我们希望用我们之前训练的模型去预测未知数据时可以调用这个函数，其中：</p>\n<ul>\n<li><code>model.eval()</code>  将模型设置为 eval 模式，此时，模型中的某些层会不起作用，来保证预测的同时不会改变训练好的模型参数。</li>\n<li>tqdm 是一个<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3RxZG0vdHFkbQ==\"> github 项目</span>，用于展示进度条。注意 <code>tqdm(test_loader)</code>  只会对进度计数，而不会改变迭代逻辑，即 <code>x</code>  是从 <code>test_loader</code>  中取出的 <code>tensor</code>  类型数据。</li>\n<li><code>model(x)</code> =  <code>model.forward(x)</code> ，在 PyTorch 中直接调用模型并传递输入数据时，会自动调用模型的 <code>forward</code>  方法。即这一行的代码的含义是：调用模型进行预测。</li>\n<li><code>Tensor.detach()</code>  从当前计算图中分离出新的 tensor，该 tensor 不具有梯度，也不会反向传播。由于在 PyTorch 中，变量不仅是数值和数据类型，还包含了该变量的计算过程，而通过 <code>detach()</code>  可以将计算过程剥离只剩下数值。</li>\n<li><code>.cpu()</code>  将变量放在 cpu 上。</li>\n<li><code>torch.cat()</code>  用于将两个 <code>tensor</code>  拼接在一起， <code>dim</code>  参数指定了是横着拼接还是竖着拼接（对于矩阵）</li>\n<li><code>.numpy()</code>  用于将 <code>Tensor</code>  类型转成 <code>Numpy</code>  类型。CUDA 只接受 <code>Tensor</code>  类型，不接受其他变量类型。</li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">predict</span><span class=\"token punctuation\">(</span>test_loader<span class=\"token punctuation\">,</span> model<span class=\"token punctuation\">,</span> device<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    model<span class=\"token punctuation\">.</span><span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># Set your model to evaluation mode.</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    preds <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> tqdm<span class=\"token punctuation\">(</span>test_loader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># test_loader 是测试数据</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        x <span class=\"token operator\">=</span> x<span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">(</span>device<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 将模型加载到 CPU 上                    </span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">with</span> torch<span class=\"token punctuation\">.</span>no_grad<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 禁用梯度计算，节省时间               </span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            pred <span class=\"token operator\">=</span> model<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 调用模型进行预测</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            preds<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>pred<span class=\"token punctuation\">.</span>detach<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>cpu<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># pred 可直接当参数也不会报错，这里是标准化处理</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    preds <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>cat<span class=\"token punctuation\">(</span>preds<span class=\"token punctuation\">,</span> dim<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>numpy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">return</span> preds</pre></td></tr></table></figure><h3 id=\"预测结果保存\"><a class=\"anchor\" href=\"#预测结果保存\">#</a> 预测结果保存</h3>\n<p>将模型预测的结果保存成 csv，这个其实是因为原本本作业的完成方式是上传保存的文件，我们也就保留下来了。由于只涉及 csv 的操作比较简单，就不过多解释了。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">save_pred</span><span class=\"token punctuation\">(</span>preds<span class=\"token punctuation\">,</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\" Save predictions to specified file \"\"\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">file</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'w'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> fp<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        writer <span class=\"token operator\">=</span> csv<span class=\"token punctuation\">.</span>writer<span class=\"token punctuation\">(</span>fp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        writer<span class=\"token punctuation\">.</span>writerow<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'tested_positive'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 保存成 id, tested_positive 两列</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span> p <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>preds<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            writer<span class=\"token punctuation\">.</span>writerow<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"数据集-2\"><a class=\"anchor\" href=\"#数据集-2\">#</a> 数据集</h2>\n<h3 id=\"自定义数据集\"><a class=\"anchor\" href=\"#自定义数据集\">#</a> 自定义数据集</h3>\n<p>当我们不使用 PyTorch 官方整理好的数据集，而是使用自己的数据集时，就必须按照 PyTorch 的定义，自行实现一个继承 <code>torch.utils.data.Dataset</code>  这个抽象类的子类，PyTorch 才可以正确处理。</p>\n<p>自定义数据集必须继承 <code>Dataset</code>  并至少覆盖以下两个方法:</p>\n<ul>\n<li><code>__len__</code> ： 实现  <code>len(dataset)</code>  返还数据集的尺寸。</li>\n<li><code>__getitem__</code> ：用来获取索引数据，例如 <code>dataset[i]</code></li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">COVID19Dataset</span><span class=\"token punctuation\">(</span>Dataset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    x: Features.</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    y: Targets, if none, do prediction.</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    \"\"\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> y<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 定义初始化方法</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">if</span> y <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            self<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> y</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            self<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>FloatTensor<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 预测目标是浮点数</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        self<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>FloatTensor<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 特征也是浮点数</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__getitem__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 定义数据集索引方法</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>y <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__len__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 定义获取数据长度方法</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"dataloader\"><a class=\"anchor\" href=\"#dataloader\">#</a> Dataloader</h3>\n<ul>\n<li><code>pd.read_csv()</code> ：从指定位置读取 csv 表格，并转化为 <code>DataFrame</code>  的类型，可以通过 <code>.values</code>  取出 <code>DataFrame</code>  中的值并转换为多维列表。</li>\n<li><code>select_feat()</code> ：从数据集中提取特征，该函数的实现会在下面讲到。</li>\n</ul>\n<p>整体过程其实就是：</p>\n<ol>\n<li>读取 csv 表格中的数据</li>\n<li>提取数据中的特征</li>\n<li>将特征转化为数据集 <code>Dataset</code></li>\n<li>根据配置，将 <code>Dataset</code>  转化成 <code>DataLoader</code>  用于后续训练</li>\n</ol>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># Set seed for reproducibility</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>same_seed<span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">[</span><span class=\"token string\">'seed'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># train_data size: 2699 x 118 (id + 37 states + 16 features x 5 days) </span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># test_data size: 1078 x 117 (without last day's positive rate)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>train_data<span class=\"token punctuation\">,</span> test_data <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>read_csv<span class=\"token punctuation\">(</span><span class=\"token string\">'./covid.train.csv'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">,</span> pd<span class=\"token punctuation\">.</span>read_csv<span class=\"token punctuation\">(</span><span class=\"token string\">'./covid.test.csv'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>values</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>train_data<span class=\"token punctuation\">,</span> valid_data <span class=\"token operator\">=</span> train_valid_split<span class=\"token punctuation\">(</span>train_data<span class=\"token punctuation\">,</span> config<span class=\"token punctuation\">[</span><span class=\"token string\">'valid_ratio'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> config<span class=\"token punctuation\">[</span><span class=\"token string\">'seed'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># Print out the data size.</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"\"\"train_data size: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>train_data<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>valid_data size: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>valid_data<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>test_data size: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>test_data<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"\"\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\"># Select features</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>x_train<span class=\"token punctuation\">,</span> x_valid<span class=\"token punctuation\">,</span> x_test<span class=\"token punctuation\">,</span> y_train<span class=\"token punctuation\">,</span> y_valid <span class=\"token operator\">=</span> select_feat<span class=\"token punctuation\">(</span>train_data<span class=\"token punctuation\">,</span> valid_data<span class=\"token punctuation\">,</span> test_data<span class=\"token punctuation\">,</span> config<span class=\"token punctuation\">[</span><span class=\"token string\">'select_all'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\"># Print out the number of features.</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'number of features: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>x_train<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\"># initialize datasets with the data</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>train_dataset<span class=\"token punctuation\">,</span> valid_dataset<span class=\"token punctuation\">,</span> test_dataset <span class=\"token operator\">=</span> COVID19Dataset<span class=\"token punctuation\">(</span>x_train<span class=\"token punctuation\">,</span> y_train<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> \\</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                                            COVID19Dataset<span class=\"token punctuation\">(</span>x_valid<span class=\"token punctuation\">,</span> y_valid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> \\</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                                            COVID19Dataset<span class=\"token punctuation\">(</span>x_test<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\"># Pytorch data loader loads pytorch dataset into batches.</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>train_loader <span class=\"token operator\">=</span> DataLoader<span class=\"token punctuation\">(</span>train_dataset<span class=\"token punctuation\">,</span> batch_size<span class=\"token operator\">=</span>config<span class=\"token punctuation\">[</span><span class=\"token string\">'batch_size'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> shuffle<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> pin_memory<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>valid_loader <span class=\"token operator\">=</span> DataLoader<span class=\"token punctuation\">(</span>valid_dataset<span class=\"token punctuation\">,</span> batch_size<span class=\"token operator\">=</span>config<span class=\"token punctuation\">[</span><span class=\"token string\">'batch_size'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> shuffle<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> pin_memory<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>test_loader <span class=\"token operator\">=</span> DataLoader<span class=\"token punctuation\">(</span>test_dataset<span class=\"token punctuation\">,</span> batch_size<span class=\"token operator\">=</span>config<span class=\"token punctuation\">[</span><span class=\"token string\">'batch_size'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> shuffle<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> pin_memory<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"全局配置\"><a class=\"anchor\" href=\"#全局配置\">#</a> 全局配置</h1>\n<ul>\n<li><code>device</code> ：设置训练使用的硬件，优先 CUDA，如果没有的话就使用 CPU。</li>\n</ul>\n<p><code>config</code>  中的内容比较顾名思义了，稍微有点机器学习基础应该都能看懂。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>device <span class=\"token operator\">=</span> <span class=\"token string\">'cuda'</span> <span class=\"token keyword\">if</span> torch<span class=\"token punctuation\">.</span>cuda<span class=\"token punctuation\">.</span>is_available<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">else</span> <span class=\"token string\">'cpu'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>config <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token string\">'seed'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5201314</span><span class=\"token punctuation\">,</span>      <span class=\"token comment\"># Your seed number, you can pick your lucky number. :)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token string\">'select_all'</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>   <span class=\"token comment\"># Whether to use all features.</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token string\">'valid_ratio'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0.2</span><span class=\"token punctuation\">,</span>   <span class=\"token comment\"># validation_size = train_size * valid_ratio</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token string\">'n_epochs'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">,</span>     <span class=\"token comment\"># Number of epochs.            </span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token string\">'batch_size'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">256</span><span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token string\">'learning_rate'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1e-5</span><span class=\"token punctuation\">,</span>              </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token string\">'early_stop'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">400</span><span class=\"token punctuation\">,</span>    <span class=\"token comment\"># If model has not improved for this many consecutive epochs, stop training.     </span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token string\">'save_path'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'./models/model.ckpt'</span>  <span class=\"token comment\"># Your model will be saved here.</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"关键函数编写\"><a class=\"anchor\" href=\"#关键函数编写\">#</a> 关键函数编写</h1>\n<p>由于关键函数的编写也正是作业的内容，所以将该内容放在了最后，我们需要完成 3 个关键函数的编 / 改写，分别是：</p>\n<ol>\n<li>模型  <code>My_Model()</code></li>\n<li>特征提取算法  <code>select_feat()</code></li>\n<li>训练算法  <code>trainer()</code></li>\n</ol>\n<h2 id=\"my_model\"><a class=\"anchor\" href=\"#my_model\">#</a> My_Model()</h2>\n<p>基础模型如下：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">My_Model</span><span class=\"token punctuation\">(</span>nn<span class=\"token punctuation\">.</span>Module<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> input_dim<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 定义模型初始化方法</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>My_Model<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 调用父类的__init__方法</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token comment\"># TODO: modify model's structure, be aware of dimensions.</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        self<span class=\"token punctuation\">.</span>layers <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>Sequential<span class=\"token punctuation\">(</span> <span class=\"token comment\"># Sequential 中前一层输出大小必须与下一层的输入大小一致</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>Linear<span class=\"token punctuation\">(</span>input_dim<span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\"># 定义一个全连接层</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>ReLU<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\"># 使用 ReLU 作为激活函数</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>Linear<span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\"># 该层输入 tensor 为 16，输出 tensor 为 8</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>ReLU<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>Linear<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">forward</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 定义前向传播算法</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        x <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>layers<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 将 x 传递给 layers 的各层进行运算，默认写法。</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        x <span class=\"token operator\">=</span> x<span class=\"token punctuation\">.</span>squeeze<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># (B, 1) -> (B)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">return</span> x</pre></td></tr></table></figure><p>使用该模型训练出的 loss 为：</p>\n<p><code>Epoch [1869/3000]: Train loss: 41.3380, Valid loss: 37.6867</code></p>\n<p>同时，使用此训练的模型去预测会发现预测出的 <code>tested_positive</code>  都会是同一个值，这显然是不对的，猜测可能是因为模型神经元数目太少，而特征又太多，导致模型无法学习到有效特征，loss 的下降其实也只是类似求一个最佳均值的过程，所以我们尝试通过增加层数的方法来优化他（称为优化 1）：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>self<span class=\"token punctuation\">.</span>layers <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>Sequential<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>Linear<span class=\"token punctuation\">(</span>input_dim<span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>ReLU<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>Linear<span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>ReLU<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>Linear<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>ReLU<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>Linear<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>loss 有显著降低：</p>\n<p><code>Epoch [3000/3000]: Train loss: 1.5405, Valid loss: 1.5447</code></p>\n<p>为了防止过拟合问题，我们跑一下验证集试试，结果为</p>\n<p><code>Loss:  tensor(3.2558, dtype=torch.float64)</code></p>\n<h2 id=\"select_feat\"><a class=\"anchor\" href=\"#select_feat\">#</a> select_feat()</h2>\n<p>默认的特征提取函数默认情况下是使用全部特征（不提取特征）的，代码如下：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">select_feat</span><span class=\"token punctuation\">(</span>train_data<span class=\"token punctuation\">,</span> valid_data<span class=\"token punctuation\">,</span> test_data<span class=\"token punctuation\">,</span> select_all<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"Selects useful features to perform regression\"\"\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    y_train<span class=\"token punctuation\">,</span> y_valid <span class=\"token operator\">=</span> train_data<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> valid_data<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    raw_x_train<span class=\"token punctuation\">,</span> raw_x_valid<span class=\"token punctuation\">,</span> raw_x_test <span class=\"token operator\">=</span> train_data<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> valid_data<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> test_data <span class=\"token comment\"># 分离 tested_positive 列和其他特征列</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">if</span> select_all<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        feat_idx <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>raw_x_train<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        feat_idx <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># TODO: Select suitable feature columns.</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">return</span> raw_x_train<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> feat_idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> raw_x_valid<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> feat_idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> raw_x_test<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> feat_idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> y_train<span class=\"token punctuation\">,</span> y_valid</pre></td></tr></table></figure><p>其中 <code>train_data</code>  和 <code>valid_data</code>  都是多维数组， <code>train_data[:, -1]</code>  是指将列表中的每一个子列表的最后一项提取出来组成一个新的列表：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo stretchy=\"false\">[</mo><mo stretchy=\"false\">[</mo><mn>1</mn><mo separator=\"true\">,</mo><mn>2</mn><mo separator=\"true\">,</mo><mn>3</mn><mo stretchy=\"false\">]</mo><mo separator=\"true\">,</mo><mo stretchy=\"false\">[</mo><mn>4</mn><mo separator=\"true\">,</mo><mn>5</mn><mo separator=\"true\">,</mo><mn>6</mn><mo stretchy=\"false\">]</mo><mo separator=\"true\">,</mo><mo stretchy=\"false\">[</mo><mn>7</mn><mo separator=\"true\">,</mo><mn>8</mn><mo separator=\"true\">,</mo><mn>9</mn><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">]</mo><mo>→</mo><mo stretchy=\"false\">[</mo><mn>3</mn><mo separator=\"true\">,</mo><mn>6</mn><mo separator=\"true\">,</mo><mn>9</mn><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[[1,2,3],[4,5,6],[7,8,9]] \\rightarrow [3,6,9]\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mopen\">[</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">2</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">3</span><span class=\"mclose\">]</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">4</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">5</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">6</span><span class=\"mclose\">]</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">7</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">8</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">9</span><span class=\"mclose\">]</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">3</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">6</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">9</span><span class=\"mclose\">]</span></span></span></span></span></p>\n<p>观察训练集可以发现，最后一列就是 <code>tested_positive</code>  列，即 <code>y_train</code>  为训练集的 <code>tested_positive</code>  列表， <code>y_valid</code>  为验证集的 <code>tested_positive</code>  列表；另外， <code>raw_x_train</code>  就是将 <code>tested_positive</code>  排除的其他数据特征， <code>raw_x_valid</code>  同理。</p>\n<p>若配置 <code>select_all=true</code>  时，会将其他特征全部返回，否则只会返回指定的特征列。考虑到原本数据集中的部分特征可能对我们想要的预测的内容没什么贡献，反倒可能会影响机器的学习，那么我们就可以考虑人为分析一下样本中的不同字段对结果的贡献从而优化机器学习的效果（称为优化 2）。</p>\n<p>先分析一下样本数据：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">样本列</th>\n<th style=\"text-align:center\">含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">AL、AK、AZ、AR、......</td>\n<td style=\"text-align:center\">美国不同州的缩写</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">cli、ili</td>\n<td style=\"text-align:center\">COVID-like illness、influenza-like illness</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">hh_cmnty_cli、nohh_cmnty_cli</td>\n<td style=\"text-align:center\">社区报告病例（包括 / 不包括家庭）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">wearing_mask</td>\n<td style=\"text-align:center\">戴口罩</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">travel_outside_state、work_outside_home</td>\n<td style=\"text-align:center\">外出旅行、非居家办公</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">shop、restaurant</td>\n<td style=\"text-align:center\">商场、餐厅</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">spent_time</td>\n<td style=\"text-align:center\">过去 24 小时内与当前不在身边的人在一起</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">large_event</td>\n<td style=\"text-align:center\">出席 10 人以上的活动</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">public_transit</td>\n<td style=\"text-align:center\">过去 24 小时使用公共交通</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">anxious、depressed、worried_finances</td>\n<td style=\"text-align:center\">焦虑、压力、担心财务状况</td>\n</tr>\n</tbody>\n</table>\n<p>如果纯靠人为经验来分析的话，可能会觉得都有关系，这个时候我们可以借助 Person 相关性分析方法，来分析各个变量与 <code>tested_positive</code>  的相关性，通过具体的数值来找到最相关的列。 <code>pandas</code>  库提供了封装好的 Person 相关性分析算法，直接使用即可：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>df <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>read_csv<span class=\"token punctuation\">(</span><span class=\"token string\">'./data/covid.train.csv'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">.</span>corr<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token string\">'tested_positive'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>sort_values<span class=\"token punctuation\">(</span>ascending<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 降序排列</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># ---- Output ----</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>tested_positive      <span class=\"token number\">1.000000</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>tested_positive<span class=\"token punctuation\">.</span><span class=\"token number\">1</span>    <span class=\"token number\">0.985053</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>tested_positive<span class=\"token punctuation\">.</span><span class=\"token number\">2</span>    <span class=\"token number\">0.969467</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>tested_positive<span class=\"token punctuation\">.</span><span class=\"token number\">3</span>    <span class=\"token number\">0.953463</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>tested_positive<span class=\"token punctuation\">.</span><span class=\"token number\">4</span>    <span class=\"token number\">0.935388</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                       <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>   </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>public_transit      <span class=\"token operator\">-</span><span class=\"token number\">0.411916</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>public_transit<span class=\"token punctuation\">.</span><span class=\"token number\">1</span>    <span class=\"token operator\">-</span><span class=\"token number\">0.415510</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>public_transit<span class=\"token punctuation\">.</span><span class=\"token number\">2</span>    <span class=\"token operator\">-</span><span class=\"token number\">0.418523</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>public_transit<span class=\"token punctuation\">.</span><span class=\"token number\">3</span>    <span class=\"token operator\">-</span><span class=\"token number\">0.421868</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>public_transit<span class=\"token punctuation\">.</span><span class=\"token number\">4</span>    <span class=\"token operator\">-</span><span class=\"token number\">0.424169</span></pre></td></tr></table></figure><p>我们把这些强相关的列作为特征在优化 1 的基础上去优化模型（称为优化 2）。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>feat_idx <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">38</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>            <span class=\"token number\">53</span><span class=\"token punctuation\">,</span> <span class=\"token number\">69</span><span class=\"token punctuation\">,</span> <span class=\"token number\">85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">101</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># tested_positive</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            <span class=\"token number\">49</span><span class=\"token punctuation\">,</span> <span class=\"token number\">65</span><span class=\"token punctuation\">,</span> <span class=\"token number\">81</span><span class=\"token punctuation\">,</span> <span class=\"token number\">97</span><span class=\"token punctuation\">,</span> <span class=\"token number\">113</span><span class=\"token punctuation\">,</span> <span class=\"token comment\"># public_transit</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token number\">40</span><span class=\"token punctuation\">,</span> <span class=\"token number\">41</span><span class=\"token punctuation\">,</span> <span class=\"token number\">56</span><span class=\"token punctuation\">,</span> <span class=\"token number\">57</span><span class=\"token punctuation\">,</span> <span class=\"token number\">72</span><span class=\"token punctuation\">,</span> <span class=\"token number\">73</span><span class=\"token punctuation\">,</span> <span class=\"token number\">88</span><span class=\"token punctuation\">,</span> <span class=\"token number\">89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">104</span><span class=\"token punctuation\">,</span> <span class=\"token number\">105</span><span class=\"token punctuation\">,</span> <span class=\"token comment\"># hh_cmnty_cli &amp; nohh_cmnty_cli</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token number\">38</span><span class=\"token punctuation\">,</span> <span class=\"token number\">39</span><span class=\"token punctuation\">,</span> <span class=\"token number\">54</span><span class=\"token punctuation\">,</span> <span class=\"token number\">55</span><span class=\"token punctuation\">,</span> <span class=\"token number\">70</span><span class=\"token punctuation\">,</span> <span class=\"token number\">71</span><span class=\"token punctuation\">,</span> <span class=\"token number\">86</span><span class=\"token punctuation\">,</span> <span class=\"token number\">87</span><span class=\"token punctuation\">,</span> <span class=\"token number\">102</span><span class=\"token punctuation\">,</span> <span class=\"token number\">103</span><span class=\"token punctuation\">,</span> <span class=\"token comment\"># cli &amp; ili</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">82</span><span class=\"token punctuation\">,</span> <span class=\"token number\">98</span><span class=\"token punctuation\">,</span> <span class=\"token number\">114</span> <span class=\"token comment\"># anxious</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token punctuation\">]</span>  <span class=\"token comment\"># TODO: Select suitable feature columns.</span></pre></td></tr></table></figure><p>此时，模型在训练集上的 loss 有所上升，但是在验证集上有所下降。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># --- 测试集 ---</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Epoch <span class=\"token punctuation\">[</span><span class=\"token number\">2547</span><span class=\"token operator\">/</span><span class=\"token number\">3000</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> Train loss<span class=\"token punctuation\">:</span> <span class=\"token number\">1.8915</span><span class=\"token punctuation\">,</span> Valid loss<span class=\"token punctuation\">:</span> <span class=\"token number\">1.6332</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># --- 验证集 ---</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Loss<span class=\"token punctuation\">:</span>  tensor<span class=\"token punctuation\">(</span><span class=\"token number\">3.1981</span><span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span>torch<span class=\"token punctuation\">.</span>float64<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"trainer\"><a class=\"anchor\" href=\"#trainer\">#</a> trainer()</h2>\n<p>源码中给出基本的 <code>trainer()</code>  函数，注释已经非常清楚了，代码如下：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">trainer</span><span class=\"token punctuation\">(</span>train_loader<span class=\"token punctuation\">,</span> valid_loader<span class=\"token punctuation\">,</span> model<span class=\"token punctuation\">,</span> config<span class=\"token punctuation\">,</span> device<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    criterion <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>MSELoss<span class=\"token punctuation\">(</span>reduction<span class=\"token operator\">=</span><span class=\"token string\">'mean'</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># Define your loss function, do not modify this.</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\"># Define your optimization algorithm.</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\"># TODO: Please check https://pytorch.org/docs/stable/optim.html to get more available algorithms.</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\"># TODO: L2 regularization (optimizer(weight decay...) or implement by your self).</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    optimizer <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>optim<span class=\"token punctuation\">.</span>SGD<span class=\"token punctuation\">(</span>model<span class=\"token punctuation\">.</span>parameters<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> lr<span class=\"token operator\">=</span>config<span class=\"token punctuation\">[</span><span class=\"token string\">'learning_rate'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> momentum<span class=\"token operator\">=</span><span class=\"token number\">0.9</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    writer <span class=\"token operator\">=</span> SummaryWriter<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># Writer of tensoboard.</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>isdir<span class=\"token punctuation\">(</span><span class=\"token string\">'./models'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        os<span class=\"token punctuation\">.</span>mkdir<span class=\"token punctuation\">(</span><span class=\"token string\">'./models'</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># Create directory of saving models.</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    n_epochs<span class=\"token punctuation\">,</span> best_loss<span class=\"token punctuation\">,</span> step<span class=\"token punctuation\">,</span> early_stop_count <span class=\"token operator\">=</span> config<span class=\"token punctuation\">[</span><span class=\"token string\">'n_epochs'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> math<span class=\"token punctuation\">.</span>inf<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token comment\"># initialize some variables</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">for</span> epoch <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n_epochs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        model<span class=\"token punctuation\">.</span>train<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># Set your model to train mode.</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        loss_record <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token comment\"># tqdm is a package to visualize your training progress.</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        train_pbar <span class=\"token operator\">=</span> tqdm<span class=\"token punctuation\">(</span>train_loader<span class=\"token punctuation\">,</span> position<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> leave<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">for</span> x<span class=\"token punctuation\">,</span> y <span class=\"token keyword\">in</span> train_pbar<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            optimizer<span class=\"token punctuation\">.</span>zero_grad<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># Set gradient to zero.</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            x<span class=\"token punctuation\">,</span> y <span class=\"token operator\">=</span> x<span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">(</span>device<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">(</span>device<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># Move your data to device.</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            pred <span class=\"token operator\">=</span> model<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            loss <span class=\"token operator\">=</span> criterion<span class=\"token punctuation\">(</span>pred<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            loss<span class=\"token punctuation\">.</span>backward<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># Compute gradient(backpropagation).</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            optimizer<span class=\"token punctuation\">.</span>step<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># Update parameters.</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            step <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            loss_record<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>loss<span class=\"token punctuation\">.</span>detach<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            <span class=\"token comment\"># Display current epoch number and loss on tqdm progress bar.</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            train_pbar<span class=\"token punctuation\">.</span>set_description<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'Epoch [</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>epoch <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>n_epochs<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">]'</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            train_pbar<span class=\"token punctuation\">.</span>set_postfix<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">'loss'</span><span class=\"token punctuation\">:</span> loss<span class=\"token punctuation\">.</span>detach<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        mean_train_loss <span class=\"token operator\">=</span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>loss_record<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>loss_record<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        writer<span class=\"token punctuation\">.</span>add_scalar<span class=\"token punctuation\">(</span><span class=\"token string\">'Loss/train'</span><span class=\"token punctuation\">,</span> mean_train_loss<span class=\"token punctuation\">,</span> step<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        model<span class=\"token punctuation\">.</span><span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># Set your model to evaluation mode.</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        loss_record <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token keyword\">for</span> x<span class=\"token punctuation\">,</span> y <span class=\"token keyword\">in</span> valid_loader<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>            x<span class=\"token punctuation\">,</span> y <span class=\"token operator\">=</span> x<span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">(</span>device<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">(</span>device<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            <span class=\"token keyword\">with</span> torch<span class=\"token punctuation\">.</span>no_grad<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>                pred <span class=\"token operator\">=</span> model<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>                loss <span class=\"token operator\">=</span> criterion<span class=\"token punctuation\">(</span>pred<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>            loss_record<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>loss<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        mean_valid_loss <span class=\"token operator\">=</span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>loss_record<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>loss_record<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        tqdm<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'Epoch [</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>epoch <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>n_epochs<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">]: Train loss: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>mean_train_loss<span class=\"token punctuation\">:</span><span class=\"token format-spec\">.4f</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">, Valid loss: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>mean_valid_loss<span class=\"token punctuation\">:</span><span class=\"token format-spec\">.4f</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        writer<span class=\"token punctuation\">.</span>add_scalar<span class=\"token punctuation\">(</span><span class=\"token string\">'Loss/valid'</span><span class=\"token punctuation\">,</span> mean_valid_loss<span class=\"token punctuation\">,</span> step<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 向 tensoboard 添加图表</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        <span class=\"token keyword\">if</span> mean_valid_loss <span class=\"token operator\">&lt;</span> best_loss<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>            best_loss <span class=\"token operator\">=</span> mean_valid_loss</pre></td></tr><tr><td data-num=\"56\"></td><td><pre>            torch<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span>model<span class=\"token punctuation\">.</span>state_dict<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> config<span class=\"token punctuation\">[</span><span class=\"token string\">'save_path'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># Save your best model</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>            tqdm<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">'Saving model with loss &#123;:.3f&#125;...'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>best_loss<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>            early_stop_count <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>            early_stop_count <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>        <span class=\"token keyword\">if</span> early_stop_count <span class=\"token operator\">>=</span> config<span class=\"token punctuation\">[</span><span class=\"token string\">'early_stop'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>            tqdm<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">'\\nModel is not improving, so we halt the training session.'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>            <span class=\"token keyword\">return</span></pre></td></tr></table></figure><p>提示中给出了两个优化方向，引入 L2 正则化和寻找更好的 <code>optimizer</code> ，经过实际测试，如果不引入 L2 正则化就直接换用别的 <code>optimizer</code>  会导致过拟合的问题，所以我们先引入 L2 正则化。</p>\n<h3 id=\"l2-regularization-dropout\"><a class=\"anchor\" href=\"#l2-regularization-dropout\">#</a> L2 regularization &amp; Dropout</h3>\n<p>简单来说，L2 正则化可以直观理解为它<strong>对于大数值的权重向量进行严厉惩罚</strong>，倾向于更加分散的权重向量。由于输入和权重之间的乘法操作，这样就有了一个优良的<strong>特性</strong>：<strong>使网络更倾向于使用所有输入特征，而不是严重依赖输入特征中某些小部分特征</strong>。 L2 惩罚倾向于更小更分散的权重向量，这就会鼓励分类器最终将所有维度上的特征都用起来，而不是强烈依赖其中少数几个维度。这样做可以提高模型的泛化能力，<strong>降低过拟合的风险</strong>。</p>\n<p>与 L2 正则化类似的是 L1 正则化，也是引入惩罚措施来降低过拟合的风险，一般情况下，L2 正则化模型效果会更好一些。</p>\n<p>👆理论来说是这样的，但是在实际测试中，引入 L2 正则化之后仍然会有过拟合的问题，效果不是很好，我们可以使用 <code>Dropout</code>  的方法来缓解过拟合问题。</p>\n<p><code>Dropout</code>  的思想是在训练过程中随机让部分神经元 “失活”，通过这种方式丢失部分特征，限制模型的学习能力，通过这种方法，可以使神经网络更加关注于 “通用的” 特征，而不是训练集中的特化特征。使用 <code>Dropout</code>  需要对模型做出变化：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">My_Model</span><span class=\"token punctuation\">(</span>nn<span class=\"token punctuation\">.</span>Module<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> input_dim<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>My_Model<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token comment\"># TODO: modify model's structure, be aware of dimensions.</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        self<span class=\"token punctuation\">.</span>layers <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>Sequential<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>Linear<span class=\"token punctuation\">(</span>input_dim<span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>LeakyReLU<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>Dropout<span class=\"token punctuation\">(</span>p<span class=\"token operator\">=</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># 添加 Dropout，指定丢弃概率</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>Linear<span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>LeakyReLU<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>Linear<span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>LeakyReLU<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>Linear<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>在实际测试中，将激活函数从 <code>ReLU</code>  替换成了 <code>LeakyReLU</code>  并增加模型神经元数，取得了更好的效果（关于激活函数后面单独拿一章讲）。</p>\n<h3 id=\"optimizer\"><a class=\"anchor\" href=\"#optimizer\">#</a> optimizer</h3>\n<p>经过测试，选用 <code>Adam</code>  作为 <code>optimizer</code>  会有更好的效果， <code>Adam</code>  是一个自适应的梯度下降算法，自动的调整 <code>learning-rate</code> ，我们知道，设置合适的超参数 <code>learning-rate</code>  是非常困难的，若 <code>lr</code>  过大，会导致 loss 在最低点出震荡；若 <code>lr</code>  过小，则会导致训练速度过慢。直接使用 <code>Adam</code>  可以帮助我们解决这个烦恼，我们只需要在学习的开始设置一个较大的 <code>lr</code> ， <code>Adam</code>  会自动随着计算调整合适的 <code>lr</code> ，代码如下：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>optimizer <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>optim<span class=\"token punctuation\">.</span>Adam<span class=\"token punctuation\">(</span>model<span class=\"token punctuation\">.</span>parameters<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> lr<span class=\"token operator\">=</span>config<span class=\"token punctuation\">[</span><span class=\"token string\">'learning_rate'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 调整 超参数</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>config <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token string\">'seed'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">194343431</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token string\">'select_all'</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token string\">'valid_ratio'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0.2</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token string\">'n_epochs'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token string\">'batch_size'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">256</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token string\">'learning_rate'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1e-3</span><span class=\"token punctuation\">,</span> <span class=\"token comment\"># 这里从 1e-5 改成了 1e-3</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token string\">'early_stop'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">400</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token string\">'save_path'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'./models/model.ckpt'</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>这样的优化（称为优化 3）的结果为：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># --- 测试集 ---</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Epoch <span class=\"token punctuation\">[</span><span class=\"token number\">498</span><span class=\"token operator\">/</span><span class=\"token number\">15000</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> Train loss<span class=\"token punctuation\">:</span> <span class=\"token number\">1.3171</span><span class=\"token punctuation\">,</span> Valid loss<span class=\"token punctuation\">:</span> <span class=\"token number\">5.3677</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># --- 验证集 ---</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Loss<span class=\"token punctuation\">:</span>  tensor<span class=\"token punctuation\">(</span><span class=\"token number\">2.2407</span><span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span>torch<span class=\"token punctuation\">.</span>float64<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>通过选取合适的特征，loss 可以进一步下降：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 修改 feat 选取</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>feat_idx <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">38</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            <span class=\"token number\">53</span><span class=\"token punctuation\">,</span> <span class=\"token number\">69</span><span class=\"token punctuation\">,</span> <span class=\"token number\">85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">101</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># tested_positive</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token number\">49</span><span class=\"token punctuation\">,</span> <span class=\"token number\">65</span><span class=\"token punctuation\">,</span> <span class=\"token number\">81</span><span class=\"token punctuation\">,</span> <span class=\"token number\">97</span><span class=\"token punctuation\">,</span> <span class=\"token number\">113</span><span class=\"token punctuation\">,</span> <span class=\"token comment\"># public_transit</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token punctuation\">]</span>  <span class=\"token comment\"># TODO: Select suitable feature columns.</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># --- 测试集 ---</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>Epoch <span class=\"token punctuation\">[</span><span class=\"token number\">447</span><span class=\"token operator\">/</span><span class=\"token number\">3000</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> Train loss<span class=\"token punctuation\">:</span> <span class=\"token number\">1.6422</span><span class=\"token punctuation\">,</span> Valid loss<span class=\"token punctuation\">:</span> <span class=\"token number\">2.8130</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># --- 验证集 ---</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>Loss<span class=\"token punctuation\">:</span>  tensor<span class=\"token punctuation\">(</span><span class=\"token number\">1.4970</span><span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span>torch<span class=\"token punctuation\">.</span>float64<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><div class=\"note warning\">\n<p>在实际测试中，如果不加上州的特征（前 38 个）的话，Loss 会比较高，加上之后，在测试集上的 loss 会低一些。理论来说，州的特征与 <code>tested_positive</code>  的相关性并不高，如果只是解释为过拟合的话我觉得不是很合理，所以这里的特征选择就没有什么理论指导了，纯粹是试出来的，如果有大佬能解释为什么求求解释一下 Orz</p>\n</div>\n<h1 id=\"总结\"><a class=\"anchor\" href=\"#总结\">#</a> 总结</h1>\n<p><img data-src=\"http://imgcdn.gality.cn/blog/jvocmh.png\" alt=\"拟合函数\" /></p>\n<p>可以看到随着预测的准确率提升，预测结果和实际结果的拟合是越来越好的。整个项目至此先告一段落了，来来回回测试了不下 100 多种优化的组合，感觉继续胡乱尝试没有什么意义，通过这个作业熟悉 PyTorch、学习神经网络知识的目标也已经达到了，接下来将会继续往后学习，进一步提高能力才是王道。</p>\n<h2 id=\"整体代码\"><a class=\"anchor\" href=\"#整体代码\">#</a> 整体代码</h2>\n<details class=\"primary\"><summary>main.py</summary><div>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># Numerical Operations</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> math</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># Reading/Writing Data</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> os</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> csv</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># For Progress Bar</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">from</span> tqdm <span class=\"token keyword\">import</span> tqdm</pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># Pytorch</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">import</span> torch</pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">import</span> torch<span class=\"token punctuation\">.</span>nn <span class=\"token keyword\">as</span> nn</pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">from</span> torch<span class=\"token punctuation\">.</span>utils<span class=\"token punctuation\">.</span>data <span class=\"token keyword\">import</span> Dataset<span class=\"token punctuation\">,</span> DataLoader<span class=\"token punctuation\">,</span> random_split</pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\"># For plotting learning curve</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">from</span> torch<span class=\"token punctuation\">.</span>utils<span class=\"token punctuation\">.</span>tensorboard <span class=\"token keyword\">import</span> SummaryWriter</pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\"># For plot</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">import</span> matplotlib<span class=\"token punctuation\">.</span>pyplot <span class=\"token keyword\">as</span> plt</pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">import</span> seaborn <span class=\"token keyword\">as</span> sns</pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>device <span class=\"token operator\">=</span> <span class=\"token string\">'cuda'</span> <span class=\"token keyword\">if</span> torch<span class=\"token punctuation\">.</span>cuda<span class=\"token punctuation\">.</span>is_available<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">else</span> <span class=\"token string\">'cpu'</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>config <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token string\">'seed'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">7777777</span><span class=\"token punctuation\">,</span>      <span class=\"token comment\"># Your seed number, you can pick your lucky number. :)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token string\">'select_all'</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span>   <span class=\"token comment\"># Whether to use all features.</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token string\">'valid_ratio'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0.2</span><span class=\"token punctuation\">,</span>   <span class=\"token comment\"># validation_size = train_size * valid_ratio</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token string\">'n_epochs'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">,</span>     <span class=\"token comment\"># Number of epochs.</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token string\">'batch_size'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">256</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token string\">'learning_rate'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1e-3</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token string\">'early_stop'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">400</span><span class=\"token punctuation\">,</span>    <span class=\"token comment\"># If model has not improved for this many consecutive epochs, stop training.</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token string\">'save_path'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'./models/model.ckpt'</span>  <span class=\"token comment\"># Your model will be saved here.</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">same_seed</span><span class=\"token punctuation\">(</span>seed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"Fixes random number generator seeds for reproducibility.\"\"\"</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    torch<span class=\"token punctuation\">.</span>backends<span class=\"token punctuation\">.</span>cudnn<span class=\"token punctuation\">.</span>deterministic <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    torch<span class=\"token punctuation\">.</span>backends<span class=\"token punctuation\">.</span>cudnn<span class=\"token punctuation\">.</span>benchmark <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>seed<span class=\"token punctuation\">(</span>seed<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    torch<span class=\"token punctuation\">.</span>manual_seed<span class=\"token punctuation\">(</span>seed<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token keyword\">if</span> torch<span class=\"token punctuation\">.</span>cuda<span class=\"token punctuation\">.</span>is_available<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        torch<span class=\"token punctuation\">.</span>cuda<span class=\"token punctuation\">.</span>manual_seed_all<span class=\"token punctuation\">(</span>seed<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token comment\"># Set seed for reproducibility</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>same_seed<span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">[</span><span class=\"token string\">'seed'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">train_valid_split</span><span class=\"token punctuation\">(</span>data_set<span class=\"token punctuation\">,</span> valid_ratio<span class=\"token punctuation\">,</span> seed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"Split provided training data into training set and validation set\"\"\"</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    valid_set_size <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>valid_ratio <span class=\"token operator\">*</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>data_set<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    train_set_size <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>data_set<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> valid_set_size</pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    train_set<span class=\"token punctuation\">,</span> valid_set <span class=\"token operator\">=</span> random_split<span class=\"token punctuation\">(</span>data_set<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>train_set_size<span class=\"token punctuation\">,</span> valid_set_size<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>                                        generator<span class=\"token operator\">=</span>torch<span class=\"token punctuation\">.</span>Generator<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>manual_seed<span class=\"token punctuation\">(</span>seed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token keyword\">return</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>train_set<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>valid_set<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">predict</span><span class=\"token punctuation\">(</span>test_loader<span class=\"token punctuation\">,</span> model<span class=\"token punctuation\">,</span> device<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    model<span class=\"token punctuation\">.</span><span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># Set your model to evaluation mode.</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    preds <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> tqdm<span class=\"token punctuation\">(</span>test_loader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>        x <span class=\"token operator\">=</span> x<span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">(</span>device<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>        <span class=\"token keyword\">with</span> torch<span class=\"token punctuation\">.</span>no_grad<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>            pred <span class=\"token operator\">=</span> model<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>            preds<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>pred<span class=\"token punctuation\">.</span>detach<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>cpu<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    preds <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>cat<span class=\"token punctuation\">(</span>preds<span class=\"token punctuation\">,</span> dim<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>numpy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    <span class=\"token keyword\">return</span> preds</pre></td></tr><tr><td data-num=\"71\"></td><td><pre></pre></td></tr><tr><td data-num=\"72\"></td><td><pre></pre></td></tr><tr><td data-num=\"73\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">save_pred</span><span class=\"token punctuation\">(</span>preds<span class=\"token punctuation\">,</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\" Save predictions to specified file \"\"\"</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">file</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'w'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> fp<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>        writer <span class=\"token operator\">=</span> csv<span class=\"token punctuation\">.</span>writer<span class=\"token punctuation\">(</span>fp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>        writer<span class=\"token punctuation\">.</span>writerow<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'tested_positive'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>        <span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span> p <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>preds<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>            writer<span class=\"token punctuation\">.</span>writerow<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre></pre></td></tr><tr><td data-num=\"81\"></td><td><pre></pre></td></tr><tr><td data-num=\"82\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">COVID19Dataset</span><span class=\"token punctuation\">(</span>Dataset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"</pre></td></tr><tr><td data-num=\"84\"></td><td><pre>    x: Features.</pre></td></tr><tr><td data-num=\"85\"></td><td><pre>    y: Targets, if none, do prediction.</pre></td></tr><tr><td data-num=\"86\"></td><td><pre>    \"\"\"</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> y<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>        <span class=\"token keyword\">if</span> y <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>            self<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> y</pre></td></tr><tr><td data-num=\"91\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>            self<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>FloatTensor<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>        self<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>FloatTensor<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__getitem__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>        <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>y <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>            <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>            <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__len__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre></pre></td></tr><tr><td data-num=\"104\"></td><td><pre></pre></td></tr><tr><td data-num=\"105\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">My_Model</span><span class=\"token punctuation\">(</span>nn<span class=\"token punctuation\">.</span>Module<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> input_dim<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>My_Model<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>        <span class=\"token comment\"># TODO: modify model's structure, be aware of dimensions.</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>        self<span class=\"token punctuation\">.</span>layers <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>Sequential<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>Linear<span class=\"token punctuation\">(</span>input_dim<span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>LeakyReLU<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>Dropout<span class=\"token punctuation\">(</span>p<span class=\"token operator\">=</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># 添加 Dropout，指定丢弃概率</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>Linear<span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>LeakyReLU<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>Linear<span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>LeakyReLU<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>Linear<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>        <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">forward</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>        x <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>layers<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>        x <span class=\"token operator\">=</span> x<span class=\"token punctuation\">.</span>squeeze<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># (B, 1) -> (B)</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>        <span class=\"token keyword\">return</span> x</pre></td></tr><tr><td data-num=\"124\"></td><td><pre></pre></td></tr><tr><td data-num=\"125\"></td><td><pre></pre></td></tr><tr><td data-num=\"126\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">select_feat</span><span class=\"token punctuation\">(</span>train_data<span class=\"token punctuation\">,</span> valid_data<span class=\"token punctuation\">,</span> test_data<span class=\"token punctuation\">,</span> select_all<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"Selects useful features to perform regression\"\"\"</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>    y_train<span class=\"token punctuation\">,</span> y_valid <span class=\"token operator\">=</span> train_data<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> valid_data<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>    raw_x_train<span class=\"token punctuation\">,</span> raw_x_valid<span class=\"token punctuation\">,</span> raw_x_test <span class=\"token operator\">=</span> train_data<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> valid_data<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> test_data</pre></td></tr><tr><td data-num=\"130\"></td><td><pre></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>    <span class=\"token keyword\">if</span> select_all<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>        feat_idx <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>raw_x_train<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>        feat_idx <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">38</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>            <span class=\"token number\">53</span><span class=\"token punctuation\">,</span> <span class=\"token number\">69</span><span class=\"token punctuation\">,</span> <span class=\"token number\">85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">101</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># tested_positive</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>            <span class=\"token number\">49</span><span class=\"token punctuation\">,</span> <span class=\"token number\">65</span><span class=\"token punctuation\">,</span> <span class=\"token number\">81</span><span class=\"token punctuation\">,</span> <span class=\"token number\">97</span><span class=\"token punctuation\">,</span> <span class=\"token number\">113</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># public_transit</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>        <span class=\"token punctuation\">]</span>  <span class=\"token comment\"># TODO: Select suitable feature columns.</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>    <span class=\"token keyword\">return</span> raw_x_train<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> feat_idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> raw_x_valid<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> feat_idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> raw_x_test<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> feat_idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> y_train<span class=\"token punctuation\">,</span> y_valid</pre></td></tr><tr><td data-num=\"140\"></td><td><pre></pre></td></tr><tr><td data-num=\"141\"></td><td><pre></pre></td></tr><tr><td data-num=\"142\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">trainer</span><span class=\"token punctuation\">(</span>train_loader<span class=\"token punctuation\">,</span> valid_loader<span class=\"token punctuation\">,</span> model<span class=\"token punctuation\">,</span> config<span class=\"token punctuation\">,</span> device<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>    criterion <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>MSELoss<span class=\"token punctuation\">(</span>reduction<span class=\"token operator\">=</span><span class=\"token string\">'mean'</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># Define your loss function, do not modify this.</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>    <span class=\"token comment\"># Define your optimization algorithm.</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>    <span class=\"token comment\"># TODO: Please check https://pytorch.org/docs/stable/optim.html to get more available algorithms.</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre>    <span class=\"token comment\"># TODO: L2 regularization (optimizer(weight decay...) or implement by your self).</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>    optimizer <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>optim<span class=\"token punctuation\">.</span>Adam<span class=\"token punctuation\">(</span>model<span class=\"token punctuation\">.</span>parameters<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> lr<span class=\"token operator\">=</span>config<span class=\"token punctuation\">[</span><span class=\"token string\">'learning_rate'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre></pre></td></tr><tr><td data-num=\"150\"></td><td><pre>    writer <span class=\"token operator\">=</span> SummaryWriter<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># Writer of tensoboard.</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre></pre></td></tr><tr><td data-num=\"152\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>isdir<span class=\"token punctuation\">(</span><span class=\"token string\">'./models'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre>        os<span class=\"token punctuation\">.</span>mkdir<span class=\"token punctuation\">(</span><span class=\"token string\">'./models'</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># Create directory of saving models.</span></pre></td></tr><tr><td data-num=\"154\"></td><td><pre></pre></td></tr><tr><td data-num=\"155\"></td><td><pre>    n_epochs<span class=\"token punctuation\">,</span> best_loss<span class=\"token punctuation\">,</span> step<span class=\"token punctuation\">,</span> early_stop_count <span class=\"token operator\">=</span> config<span class=\"token punctuation\">[</span><span class=\"token string\">'n_epochs'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> math<span class=\"token punctuation\">.</span>inf<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre></pre></td></tr><tr><td data-num=\"157\"></td><td><pre>    <span class=\"token keyword\">for</span> epoch <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n_epochs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre>        model<span class=\"token punctuation\">.</span>train<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># Set your model to train mode.</span></pre></td></tr><tr><td data-num=\"159\"></td><td><pre>        loss_record <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"160\"></td><td><pre></pre></td></tr><tr><td data-num=\"161\"></td><td><pre>        <span class=\"token comment\"># tqdm is a package to visualize your training progress.</span></pre></td></tr><tr><td data-num=\"162\"></td><td><pre>        train_pbar <span class=\"token operator\">=</span> tqdm<span class=\"token punctuation\">(</span>train_loader<span class=\"token punctuation\">,</span> position<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> leave<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"163\"></td><td><pre></pre></td></tr><tr><td data-num=\"164\"></td><td><pre>        <span class=\"token keyword\">for</span> x<span class=\"token punctuation\">,</span> y <span class=\"token keyword\">in</span> train_pbar<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"165\"></td><td><pre>            optimizer<span class=\"token punctuation\">.</span>zero_grad<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># Set gradient to zero.</span></pre></td></tr><tr><td data-num=\"166\"></td><td><pre>            x<span class=\"token punctuation\">,</span> y <span class=\"token operator\">=</span> x<span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">(</span>device<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">(</span>device<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># Move your data to device.</span></pre></td></tr><tr><td data-num=\"167\"></td><td><pre>            pred <span class=\"token operator\">=</span> model<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"168\"></td><td><pre>            loss <span class=\"token operator\">=</span> criterion<span class=\"token punctuation\">(</span>pred<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"169\"></td><td><pre>            loss<span class=\"token punctuation\">.</span>backward<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># Compute gradient(backpropagation).</span></pre></td></tr><tr><td data-num=\"170\"></td><td><pre>            optimizer<span class=\"token punctuation\">.</span>step<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># Update parameters.</span></pre></td></tr><tr><td data-num=\"171\"></td><td><pre>            step <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"172\"></td><td><pre>            loss_record<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>loss<span class=\"token punctuation\">.</span>detach<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"173\"></td><td><pre></pre></td></tr><tr><td data-num=\"174\"></td><td><pre>            <span class=\"token comment\"># Display current epoch number and loss on tqdm progress bar.</span></pre></td></tr><tr><td data-num=\"175\"></td><td><pre>            train_pbar<span class=\"token punctuation\">.</span>set_description<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'Epoch [</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>epoch <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>n_epochs<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">]'</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"176\"></td><td><pre>            train_pbar<span class=\"token punctuation\">.</span>set_postfix<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">'loss'</span><span class=\"token punctuation\">:</span> loss<span class=\"token punctuation\">.</span>detach<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"177\"></td><td><pre></pre></td></tr><tr><td data-num=\"178\"></td><td><pre>        mean_train_loss <span class=\"token operator\">=</span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>loss_record<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>loss_record<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"179\"></td><td><pre>        writer<span class=\"token punctuation\">.</span>add_scalar<span class=\"token punctuation\">(</span><span class=\"token string\">'Loss/train'</span><span class=\"token punctuation\">,</span> mean_train_loss<span class=\"token punctuation\">,</span> step<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"180\"></td><td><pre></pre></td></tr><tr><td data-num=\"181\"></td><td><pre>        <span class=\"token comment\"># 在验证集上进行模型准确率的分析验证。</span></pre></td></tr><tr><td data-num=\"182\"></td><td><pre>        model<span class=\"token punctuation\">.</span><span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># Set your model to evaluation mode.</span></pre></td></tr><tr><td data-num=\"183\"></td><td><pre>        loss_record <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"184\"></td><td><pre>        <span class=\"token keyword\">for</span> x<span class=\"token punctuation\">,</span> y <span class=\"token keyword\">in</span> valid_loader<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"185\"></td><td><pre>            x<span class=\"token punctuation\">,</span> y <span class=\"token operator\">=</span> x<span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">(</span>device<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">(</span>device<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"186\"></td><td><pre>            <span class=\"token keyword\">with</span> torch<span class=\"token punctuation\">.</span>no_grad<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"187\"></td><td><pre>                pred <span class=\"token operator\">=</span> model<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"188\"></td><td><pre>                loss <span class=\"token operator\">=</span> criterion<span class=\"token punctuation\">(</span>pred<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"189\"></td><td><pre></pre></td></tr><tr><td data-num=\"190\"></td><td><pre>            loss_record<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>loss<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"191\"></td><td><pre></pre></td></tr><tr><td data-num=\"192\"></td><td><pre>        mean_valid_loss <span class=\"token operator\">=</span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>loss_record<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>loss_record<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"193\"></td><td><pre>        tqdm<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'Epoch [</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>epoch <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>n_epochs<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">]: Train loss: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>mean_train_loss<span class=\"token punctuation\">:</span><span class=\"token format-spec\">.4f</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">, '</span></span></pre></td></tr><tr><td data-num=\"194\"></td><td><pre>                   <span class=\"token string-interpolation\"><span class=\"token string\">f'Valid loss: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>mean_valid_loss<span class=\"token punctuation\">:</span><span class=\"token format-spec\">.4f</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"195\"></td><td><pre>        writer<span class=\"token punctuation\">.</span>add_scalar<span class=\"token punctuation\">(</span><span class=\"token string\">'Loss/valid'</span><span class=\"token punctuation\">,</span> mean_valid_loss<span class=\"token punctuation\">,</span> step<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"196\"></td><td><pre></pre></td></tr><tr><td data-num=\"197\"></td><td><pre>        <span class=\"token keyword\">if</span> mean_valid_loss <span class=\"token operator\">&lt;</span> best_loss<span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 如果当前 loss 低于过去最低的 loss，则记录 loss，并保存当前最好的模型。</span></pre></td></tr><tr><td data-num=\"198\"></td><td><pre>            best_loss <span class=\"token operator\">=</span> mean_valid_loss</pre></td></tr><tr><td data-num=\"199\"></td><td><pre>            torch<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span>model<span class=\"token punctuation\">.</span>state_dict<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> config<span class=\"token punctuation\">[</span><span class=\"token string\">'save_path'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># Save your best model</span></pre></td></tr><tr><td data-num=\"200\"></td><td><pre>            tqdm<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">'Saving model with loss &#123;:.3f&#125;...'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>best_loss<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"201\"></td><td><pre>            early_stop_count <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"202\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"203\"></td><td><pre>            early_stop_count <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"204\"></td><td><pre></pre></td></tr><tr><td data-num=\"205\"></td><td><pre>        <span class=\"token keyword\">if</span> early_stop_count <span class=\"token operator\">>=</span> config<span class=\"token punctuation\">[</span><span class=\"token string\">'early_stop'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"206\"></td><td><pre>            tqdm<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">'\\nModel is not improving, so we halt the training session.'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"207\"></td><td><pre>            <span class=\"token keyword\">return</span></pre></td></tr><tr><td data-num=\"208\"></td><td><pre></pre></td></tr><tr><td data-num=\"209\"></td><td><pre></pre></td></tr><tr><td data-num=\"210\"></td><td><pre><span class=\"token comment\"># train_data size: 2699 x 118 (id + 37 states + 16 features x 5 days)</span></pre></td></tr><tr><td data-num=\"211\"></td><td><pre><span class=\"token comment\"># test_data size: 1078 x 117 (without last day's positive rate)</span></pre></td></tr><tr><td data-num=\"212\"></td><td><pre>train_data<span class=\"token punctuation\">,</span> test_data <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>read_csv<span class=\"token punctuation\">(</span><span class=\"token string\">'./data/covid.train.csv'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">,</span> pd<span class=\"token punctuation\">.</span>read_csv<span class=\"token punctuation\">(</span><span class=\"token string\">'./data/covid.test.csv'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>values</pre></td></tr><tr><td data-num=\"213\"></td><td><pre>train_data<span class=\"token punctuation\">,</span> valid_data <span class=\"token operator\">=</span> train_valid_split<span class=\"token punctuation\">(</span>train_data<span class=\"token punctuation\">,</span> config<span class=\"token punctuation\">[</span><span class=\"token string\">'valid_ratio'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> config<span class=\"token punctuation\">[</span><span class=\"token string\">'seed'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"214\"></td><td><pre></pre></td></tr><tr><td data-num=\"215\"></td><td><pre><span class=\"token comment\"># Print out the data size.</span></pre></td></tr><tr><td data-num=\"216\"></td><td><pre>tqdm<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"\"\"</pre></td></tr><tr><td data-num=\"217\"></td><td><pre>train_data size: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>train_data<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> </pre></td></tr><tr><td data-num=\"218\"></td><td><pre>valid_data size: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>valid_data<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> </pre></td></tr><tr><td data-num=\"219\"></td><td><pre>test_data size: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>test_data<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"\"\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"220\"></td><td><pre></pre></td></tr><tr><td data-num=\"221\"></td><td><pre><span class=\"token comment\"># Select features</span></pre></td></tr><tr><td data-num=\"222\"></td><td><pre>x_train<span class=\"token punctuation\">,</span> x_valid<span class=\"token punctuation\">,</span> x_test<span class=\"token punctuation\">,</span> y_train<span class=\"token punctuation\">,</span> y_valid <span class=\"token operator\">=</span> select_feat<span class=\"token punctuation\">(</span>train_data<span class=\"token punctuation\">,</span> valid_data<span class=\"token punctuation\">,</span> test_data<span class=\"token punctuation\">,</span> config<span class=\"token punctuation\">[</span><span class=\"token string\">'select_all'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"223\"></td><td><pre></pre></td></tr><tr><td data-num=\"224\"></td><td><pre><span class=\"token comment\"># Print out the number of features.</span></pre></td></tr><tr><td data-num=\"225\"></td><td><pre>tqdm<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'number of features: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>x_train<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"226\"></td><td><pre></pre></td></tr><tr><td data-num=\"227\"></td><td><pre>train_dataset<span class=\"token punctuation\">,</span> valid_dataset<span class=\"token punctuation\">,</span> test_dataset <span class=\"token operator\">=</span> COVID19Dataset<span class=\"token punctuation\">(</span>x_train<span class=\"token punctuation\">,</span> y_train<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> \\</pre></td></tr><tr><td data-num=\"228\"></td><td><pre>                                            COVID19Dataset<span class=\"token punctuation\">(</span>x_valid<span class=\"token punctuation\">,</span> y_valid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> \\</pre></td></tr><tr><td data-num=\"229\"></td><td><pre>                                            COVID19Dataset<span class=\"token punctuation\">(</span>x_test<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"230\"></td><td><pre></pre></td></tr><tr><td data-num=\"231\"></td><td><pre><span class=\"token comment\"># Pytorch data loader loads pytorch dataset into batches.</span></pre></td></tr><tr><td data-num=\"232\"></td><td><pre>train_loader <span class=\"token operator\">=</span> DataLoader<span class=\"token punctuation\">(</span>train_dataset<span class=\"token punctuation\">,</span> batch_size<span class=\"token operator\">=</span>config<span class=\"token punctuation\">[</span><span class=\"token string\">'batch_size'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> shuffle<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> pin_memory<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"233\"></td><td><pre>valid_loader <span class=\"token operator\">=</span> DataLoader<span class=\"token punctuation\">(</span>valid_dataset<span class=\"token punctuation\">,</span> batch_size<span class=\"token operator\">=</span>config<span class=\"token punctuation\">[</span><span class=\"token string\">'batch_size'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> shuffle<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> pin_memory<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"234\"></td><td><pre>test_loader <span class=\"token operator\">=</span> DataLoader<span class=\"token punctuation\">(</span>test_dataset<span class=\"token punctuation\">,</span> batch_size<span class=\"token operator\">=</span>config<span class=\"token punctuation\">[</span><span class=\"token string\">'batch_size'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> shuffle<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> pin_memory<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"235\"></td><td><pre></pre></td></tr><tr><td data-num=\"236\"></td><td><pre>model <span class=\"token operator\">=</span> My_Model<span class=\"token punctuation\">(</span>input_dim<span class=\"token operator\">=</span>x_train<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">(</span>device<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># put your model and data on the same computation device.</span></pre></td></tr><tr><td data-num=\"237\"></td><td><pre><span class=\"token comment\"># 开始训练模型</span></pre></td></tr><tr><td data-num=\"238\"></td><td><pre>trainer<span class=\"token punctuation\">(</span>train_loader<span class=\"token punctuation\">,</span> valid_loader<span class=\"token punctuation\">,</span> model<span class=\"token punctuation\">,</span> config<span class=\"token punctuation\">,</span> device<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"239\"></td><td><pre></pre></td></tr><tr><td data-num=\"240\"></td><td><pre><span class=\"token comment\"># 使用进行模型预测</span></pre></td></tr><tr><td data-num=\"241\"></td><td><pre><span class=\"token comment\"># model.load_state_dict(torch.load(config['save_path']))</span></pre></td></tr><tr><td data-num=\"242\"></td><td><pre><span class=\"token comment\"># preds = predict(test_loader, model, device)</span></pre></td></tr><tr><td data-num=\"243\"></td><td><pre><span class=\"token comment\"># save_pred(preds, 'pred.csv')</span></pre></td></tr><tr><td data-num=\"244\"></td><td><pre><span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"245\"></td><td><pre><span class=\"token comment\"># predict_data, real_data = pd.read_csv('./pred.csv'), pd.read_csv('./data/covid.test.csv')</span></pre></td></tr><tr><td data-num=\"246\"></td><td><pre><span class=\"token comment\"># # 计算预测值和实际值的 MSE</span></pre></td></tr><tr><td data-num=\"247\"></td><td><pre><span class=\"token comment\"># loss = nn.MSELoss()</span></pre></td></tr><tr><td data-num=\"248\"></td><td><pre><span class=\"token comment\"># out = loss(torch.tensor(predict_data['tested_positive'].values), torch.tensor(real_data['tested_positive'].values))</span></pre></td></tr><tr><td data-num=\"249\"></td><td><pre><span class=\"token comment\"># print('Loss: ', out)</span></pre></td></tr><tr><td data-num=\"250\"></td><td><pre><span class=\"token comment\"># df = pd.concat ([predict_data ['tested_positive'], real_data ['tested_positive']], axis=1)  # 拼接两个 Series</span></pre></td></tr><tr><td data-num=\"251\"></td><td><pre><span class=\"token comment\"># df.columns = ['predicted', 'ground truth']  # 重命名列名</span></pre></td></tr><tr><td data-num=\"252\"></td><td><pre><span class=\"token comment\"># sns.lmplot (x='predicted', y='ground truth', data=df)  # 绘制拟合线性回归图</span></pre></td></tr><tr><td data-num=\"253\"></td><td><pre><span class=\"token comment\"># plt.show()</span></pre></td></tr></table></figure></div></details>\n<h1 id=\"参考\"><a class=\"anchor\" href=\"#参考\">#</a> 参考</h1>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zcGVlY2guZWUubnR1LmVkdS50dy9+aHlsZWUvbWwvbWwyMDIyLWNvdXJzZS1kYXRhL0hXMDEucGRm\">https://speech.ee.ntu.edu.tw/~hylee/ml/ml2022-course-data/HW01.pdf</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMW0zNDExcDd3RD9wPTE=\">https://www.bilibili.com/video/BV1m3411p7wD?p=1</span></li>\n</ul>\n",
            "tags": [
                "学习笔记",
                "神经网络与深度学习",
                "大作业",
                "机器学习",
                "深度学习",
                "神经网络"
            ]
        },
        {
            "id": "https://gality.cn/misc/trail-and-error/conda-mamba/",
            "url": "https://gality.cn/misc/trail-and-error/conda-mamba/",
            "title": "机器学习-环境搭建踩坑-conda&mamba",
            "date_published": "2023-10-16T12:26:41.000Z",
            "content_html": "<h1 id=\"conda\"><a class=\"anchor\" href=\"#conda\">#</a> Conda</h1>\n<p>由于机器学习会依赖大量不同环境，环境之间可能有冲突，所以推荐用 Miniconda 或 Anaconda 这种的 python <code>库+虚拟环境</code> 管理器来对 python 进行统一管理。 <code>conda</code>  其实是 Miniconda 或 Anaconda 中的主程序，用于执行各种命令。</p>\n<h2 id=\"安装\"><a class=\"anchor\" href=\"#安装\">#</a> 安装</h2>\n<p>Miniconda 是 Anaconda 的轻量化版本，只包含 <code>conda</code>  和 <code>python</code> ，而 Anaconda 则默认包含更多的库，所以 Miniconda 只有几十 M 的大小，而 Anaconda 则有几百 M 的大小。二者在使用中几乎没有差别，可以根据空间自行选取。</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYW5hY29uZGEuY29tL2Rvd25sb2Fk\">Anaconda Download</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLmNvbmRhLmlvL3Byb2plY3RzL21pbmljb25kYS9lbi9sYXRlc3QvaW5kZXguaHRtbA==\">Miniconda Download</span></li>\n</ul>\n<p>无论安装 Anaconda 还是 Miniconda，在安装完成后，应该会默认在当前命令行工具的配置文件中写好环境变量，可以直接用 <code>source ~/.zshrc</code> （zsh）来读取一下环境变量。</p>\n<p>推荐在安装完成后，<strong>立刻</strong>对 <code>conda</code>  进行更新，可以减少出现未知问题的概率...</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>conda update <span class=\"token parameter variable\">-n</span> base conda</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>conda update <span class=\"token parameter variable\">--all</span></pre></td></tr></table></figure><h1 id=\"mamba\"><a class=\"anchor\" href=\"#mamba\">#</a> Mamba</h1>\n<p><code>mamba</code>  相比 <code>conda</code>  的优势如下：</p>\n<ul>\n<li>用 C 重新实现了依赖解析器，大幅提高依赖解析速度。</li>\n<li>并行下载所需要的包</li>\n<li>在解析依赖时给出步骤提醒，不像 conda 仅仅是一直 <code>solving</code></li>\n</ul>\n<p>同时， <code>mamba</code>  基本实现了所有 conda 的功能，使用起来仅需把上述所有命令中的 <code>conda</code>  替换成 <code>mamba</code>  即可。 <code>mamba</code>  需要通过 <code>conda</code>  来进行安装：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>conda <span class=\"token function\">install</span> <span class=\"token parameter variable\">-n</span> base <span class=\"token parameter variable\">-c</span> conda-forge mamba</pre></td></tr></table></figure><p>综合来说，可以一定程度解决 <code>conda</code>  过长的 <code>Solving environment</code>  的时间，推荐安装并替换 <code>conda</code>  使用。</p>\n<h1 id=\"bug-解决\"><a class=\"anchor\" href=\"#bug-解决\">#</a> bug 解决</h1>\n<h2 id=\"frozen-solve问题\"><a class=\"anchor\" href=\"#frozen-solve问题\">#</a> frozen solve 问题</h2>\n<p>在用 <code>conda install</code>  包时出现报错：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Solving environment: unsuccessful initial attempt using frozen solve. Retrying with flexible solve.</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Solving environment: unsuccessful attempt using repodata from current_repodata.json, retrying with next repodata source.</pre></td></tr></table></figure><p>请按步骤进行排查：</p>\n<ol>\n<li>\n<p>添加 <code>conda-forge</code>  频道</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 添加频道</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>conda config <span class=\"token parameter variable\">--add</span> channels conda-forge</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 查看已添加的频道</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>conda config --show-sources</pre></td></tr></table></figure></li>\n<li>\n<p>更新 conda 到最新版本</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>conda update <span class=\"token parameter variable\">-n</span> base conda</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>conda update <span class=\"token parameter variable\">--all</span></pre></td></tr></table></figure></li>\n<li>\n<p>重新安装，若解决，到此结束</p>\n</li>\n<li>\n<p>若未解决：新建一个虚拟环境</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 创建虚拟环境</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>conda create <span class=\"token parameter variable\">-n</span> <span class=\"token operator\">&lt;</span>EnvName<span class=\"token operator\">></span> <span class=\"token assign-left variable\">python</span><span class=\"token operator\">=</span><span class=\"token number\">3.11</span></pre></td></tr></table></figure></li>\n<li>\n<p>再次安装即可解决</p>\n</li>\n</ol>\n<h1 id=\"卸载\"><a class=\"anchor\" href=\"#卸载\">#</a> 卸载</h1>\n<p>如果在安装过程中莫名问题（正常操作却出现各种 error），然后通过各种教程仍无法修复，建议卸载重装，可能可以解决问题（博主就是这么解决的）</p>\n<ol>\n<li>\n<p>清除环境变量：清除 <code>~/.zshrc</code>  或 <code>~/.bashrc</code>  中的类似下列的内容：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># >>> conda initialize >>></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># !! Contents within this block are managed by 'conda init' !!</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token assign-left variable\">__conda_setup</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span>'/Your/Conda/Path/bin/conda<span class=\"token string\">' '</span>shell.zsh<span class=\"token string\">' '</span>hook' <span class=\"token operator\"><span class=\"token file-descriptor important\">2</span>></span> /dev/null<span class=\"token variable\">)</span></span>\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$?</span> <span class=\"token parameter variable\">-eq</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token builtin class-name\">eval</span> <span class=\"token string\">\"<span class=\"token variable\">$__conda_setup</span>\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token parameter variable\">-f</span> <span class=\"token string\">\"Your/Conda/Path/etc/profile.d/conda.sh\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token builtin class-name\">.</span> <span class=\"token string\">\"Your/Conda/Path/etc/profile.d/conda.sh\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">PATH</span></span><span class=\"token operator\">=</span><span class=\"token string\">\"/Your/Conda/Path/miniconda3/bin:<span class=\"token environment constant\">$PATH</span>\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token builtin class-name\">unset</span> __conda_setup</pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\"># &lt;&lt;&lt; conda initialize &lt;&lt;&lt;</span></pre></td></tr></table></figure></li>\n<li>\n<p>删除文件夹： <code>rm -rf &lt;Your/Conda/Path&gt;</code></p>\n</li>\n</ol>\n<h1 id=\"conda-常用命令\"><a class=\"anchor\" href=\"#conda-常用命令\">#</a> Conda 常用命令</h1>\n<h2 id=\"环境\"><a class=\"anchor\" href=\"#环境\">#</a> 环境</h2>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 新建虚拟环境</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>conda create <span class=\"token parameter variable\">-n</span> <span class=\"token operator\">&lt;</span>EnvName<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>conda create <span class=\"token parameter variable\">-n</span> <span class=\"token operator\">&lt;</span>EnvName<span class=\"token operator\">></span> <span class=\"token assign-left variable\">python</span><span class=\"token operator\">=</span><span class=\"token number\">3.9</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 列出所有虚拟环境</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>conda info <span class=\"token parameter variable\">-e</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 进入虚拟环境</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>conda activate <span class=\"token operator\">&lt;</span>EnvName<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"># 退出虚拟环境</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>conda deactivate</pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\"># 删除虚拟环境</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>conda remove <span class=\"token parameter variable\">-n</span> <span class=\"token operator\">&lt;</span>EnvName<span class=\"token operator\">></span> <span class=\"token parameter variable\">--all</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\"># 复制虚拟环境</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>conda create <span class=\"token parameter variable\">--name</span> <span class=\"token operator\">&lt;</span>NewEnvName<span class=\"token operator\">></span> <span class=\"token parameter variable\">--clone</span> <span class=\"token operator\">&lt;</span>OldEnvName<span class=\"token operator\">></span></pre></td></tr></table></figure><h2 id=\"更新\"><a class=\"anchor\" href=\"#更新\">#</a> 更新</h2>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 查看版本</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>conda <span class=\"token parameter variable\">-V</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 更新 conda 环境</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>conda update <span class=\"token parameter variable\">-n</span> base conda</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 更新 conda 的所有包</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>conda update <span class=\"token parameter variable\">--all</span></pre></td></tr></table></figure><h2 id=\"频道\"><a class=\"anchor\" href=\"#频道\">#</a> 频道</h2>\n<p>conda 频道是存储 <code>包</code> 的位置，安装包时 conda 会搜索现有的频道集合，并选取其中一个频道来安装包，一般用 <code>conda-forge</code>  这个免费频道</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 添加新频道</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>conda config <span class=\"token parameter variable\">--add</span> channels <span class=\"token operator\">&lt;</span>channel-name<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 查看所有频道</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>conda config --show-sources</pre></td></tr></table></figure><h1 id=\"\"><a class=\"anchor\" href=\"#\">#</a> </h1>\n",
            "tags": [
                "杂项",
                "踩坑",
                "杂项",
                "踩坑",
                "机器学习",
                "conda",
                "mamba"
            ]
        },
        {
            "id": "https://gality.cn/misc/Monte-Carlo-method/",
            "url": "https://gality.cn/misc/Monte-Carlo-method/",
            "title": "数理统计大作业 ｜ Monte Carlo方法",
            "date_published": "2023-10-11T09:23:31.000Z",
            "content_html": "<div class=\"note info no-icon\">\n<p>菜狗完成数理统计第一次大作业的记录，记录了在完成的过程中对已学习的数理统计知识进行的回顾和总结，其实就是怕忘了 QwQ，有问题的话及时喷我，谢谢各位大佬 Orz</p>\n</div>\n<h1 id=\"大作业内容\"><a class=\"anchor\" href=\"#大作业内容\">#</a> 大作业内容</h1>\n<p><strong>用 Monte Carlo 方法进行统计量分布和分位数计算</strong></p>\n<h2 id=\"题目\"><a class=\"anchor\" href=\"#题目\">#</a> 题目</h2>\n<p>已知统计量 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi><mrow><mo stretchy=\"false\">(</mo><msub><mi mathvariant=\"normal\">z</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi mathvariant=\"normal\">z</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi mathvariant=\"normal\">z</mi><mi mathvariant=\"normal\">n</mi></msub><mo stretchy=\"false\">)</mo></mrow><mo>=</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mroot><mrow><mfrac><mn>1</mn><mi>n</mi></mfrac><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><mo stretchy=\"false\">(</mo><msub><mi>z</mi><mi>i</mi></msub><mo>−</mo><mover accent=\"true\"><mi>z</mi><mo>ˉ</mo></mover><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow><mrow></mrow></mroot><mrow><mover accent=\"true\"><mi>z</mi><mo>ˉ</mo></mover><mo>−</mo><msub><mi>z</mi><mrow><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></msub></mrow></mfrac></mstyle></mrow><annotation encoding=\"application/x-tex\">T \\mathrm{(z_1,z_2,...,z_n)}=\\dfrac{\\sqrt[]{ {1\\over n } \\sum\\nolimits_{i=1}^{n}(z_i-\\bar{z})^2 } }{\\bar z -{z_{(1)} } }</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathrm\">.</span><span class=\"mord mathrm\">.</span><span class=\"mord mathrm\">.</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.2712em;vertical-align:-1.0412em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.23em;\"><span style=\"top:-2.549054em;\"><span class=\"pstrut\" style=\"height:3.235054em;\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.56778em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.19444em;\"><span class=\"mord\">ˉ</span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34480000000000005em;\"><span style=\"top:-2.5198em;margin-left:-0.04398em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3551999999999999em;\"><span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.465054em;\"><span class=\"pstrut\" style=\"height:3.235054em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-4.23em;\"><span class=\"pstrut\" style=\"height:3.235054em;\"></span><span class=\"mord\"><span class=\"mord sqrt\"><span class=\"root\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.37806480000000003em;\"><span style=\"top:-2.3780648em;\"><span class=\"pstrut\" style=\"height:2em;\"></span><span class=\"sizing reset-size6 size1 mtight\"><span class=\"mord mtight\"></span></span></span></span></span></span></span><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.235054em;\"><span class=\"svg-align\" style=\"top:-3.8em;\"><span class=\"pstrut\" style=\"height:3.8em;\"></span><span class=\"mord\" style=\"padding-left:1em;\"><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.845108em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.804292em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29971000000000003em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.56778em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.19444em;\"><span class=\"mord\">ˉ</span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.195054em;\"><span class=\"pstrut\" style=\"height:3.8em;\"></span><span class=\"hide-tail\" style=\"min-width:1.02em;height:1.8800000000000001em;\"><svg width='400em' height='1.8800000000000001em' viewBox='0 0 400000 1944' preserveAspectRatio='xMinYMin slice'><path d='M983 90\nl0 -0\nc4,-6.7,10,-10,18,-10 H400000v40\nH1013.1s-83.4,268,-264.1,840c-180.7,572,-277,876.3,-289,913c-4.7,4.7,-12.7,7,-24,7\ns-12,0,-12,0c-1.3,-3.3,-3.7,-11.7,-7,-25c-35.3,-125.3,-106.7,-373.3,-214,-744\nc-10,12,-21,25,-33,39s-32,39,-32,39c-6,-5.3,-15,-14,-27,-26s25,-30,25,-30\nc26.7,-32.7,52,-63,76,-91s52,-60,52,-60s208,722,208,722\nc56,-175.3,126.3,-397.3,211,-666c84.7,-268.7,153.8,-488.2,207.5,-658.5\nc53.7,-170.3,84.5,-266.8,92.5,-289.5z\nM1001 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.604946em;\"><span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0412em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span>，其中<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi mathvariant=\"normal\">z</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi mathvariant=\"normal\">z</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi mathvariant=\"normal\">z</mi><mi mathvariant=\"normal\">n</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\mathrm{z_1,z_2,...,z_n}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathrm\">.</span><span class=\"mord mathrm\">.</span><span class=\"mord mathrm\">.</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></span> 独立同分布，均服从<br />\n（a）标准正态分布<br />\n（b）参数为 1 的指数分布</p>\n<p>请在 (a)，(b) 两种条件下分别计算：</p>\n<ol>\n<li>画出概率分布 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi><mo stretchy=\"false\">{</mo><mi>T</mi><mrow><mo stretchy=\"false\">(</mo><msub><mi mathvariant=\"normal\">z</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi mathvariant=\"normal\">z</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi mathvariant=\"normal\">z</mi><mi mathvariant=\"normal\">n</mi></msub><mo stretchy=\"false\">)</mo></mrow><mo>&lt;</mo><mi>t</mi><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">P\\{T\\mathrm{(z_1,z_2,...,z_n)} &lt; t\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">{</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathrm\">.</span><span class=\"mord mathrm\">.</span><span class=\"mord mathrm\">.</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">}</span></span></span></span> 的近似分布曲线</li>\n<li>对给定的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>α</mi><mo>=</mo><mn>0.01</mn><mo separator=\"true\">,</mo><mn>0.05</mn><mo separator=\"true\">,</mo><mn>0.1</mn></mrow><annotation encoding=\"application/x-tex\">\\alpha=0.01, 0.05, 0.1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8388800000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord\">0</span><span class=\"mord\">.</span><span class=\"mord\">0</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">0</span><span class=\"mord\">.</span><span class=\"mord\">0</span><span class=\"mord\">5</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">0</span><span class=\"mord\">.</span><span class=\"mord\">1</span></span></span></span>，计算满足 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi><mo stretchy=\"false\">{</mo><mi>T</mi><mrow><mo stretchy=\"false\">(</mo><msub><mi mathvariant=\"normal\">z</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi mathvariant=\"normal\">z</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi mathvariant=\"normal\">z</mi><mi mathvariant=\"normal\">n</mi></msub><mo stretchy=\"false\">)</mo></mrow><mo>&lt;</mo><msub><mi>t</mi><mi>α</mi></msub><mo stretchy=\"false\">}</mo><mo>=</mo><mi>α</mi></mrow><annotation encoding=\"application/x-tex\">P\\{T\\mathrm{(z_1,z_2,...,z_n)} &lt; t_\\alpha\\}=\\alpha</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">{</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathrm\">.</span><span class=\"mord mathrm\">.</span><span class=\"mord mathrm\">.</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.0037em;\">α</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">}</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span></span></span></span> 的分位数 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>t</mi><mi>α</mi></msub></mrow><annotation encoding=\"application/x-tex\">t_\\alpha</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76508em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.0037em;\">α</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>。</li>\n</ol>\n<h2 id=\"目的\"><a class=\"anchor\" href=\"#目的\">#</a> 目的</h2>\n<p>提升统计软件的使用能力（本题目可以使用任意软件），熟练使用 Monte Carlo 方法进行概率计算，并能把其用于科学研究。</p>\n<h2 id=\"基本要求\"><a class=\"anchor\" href=\"#基本要求\">#</a> 基本要求</h2>\n<ol>\n<li>用 Monte Carlo 方法给出计算方法过程，输出计算结果。</li>\n<li>讨论 Monte Carlo 方法计算结果随着样本容量变化时计算误差的变化，并进行总结。</li>\n<li>作业书写图文并茂，具有较强的可读性与可视性。</li>\n</ol>\n<p>注：除完成基本要求外，可以增加自己感兴趣的研究内容。</p>\n<hr />\n<h1 id=\"算法引入\"><a class=\"anchor\" href=\"#算法引入\">#</a> 算法引入</h1>\n<p>考虑这么一种情况：我们在一张纸上画了一个圆圈，此时我们想求圆圈的面积。如果圆圈时正圆形的话，面试非常好求，但如果不是一个正圆，该怎么求面积呢？</p>\n<p><img data-src=\"http://imgcdn.gality.cn/blog/5a84t1.png\" alt=\"Mentor Carlo问题引入\" height=\"176\" width=\"406\" /></p>\n<p>此时我们可以考虑这么一种情况：抓一把绿豆，随机的撒在整个纸上，然后去计算 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mfrac><msub><mi>N</mi><mrow><mi>c</mi><mi>i</mi><mi>r</mi><mi>c</mi><mi>l</mi><mi>e</mi></mrow></msub><msub><mi>N</mi><mrow><mi>p</mi><mi>a</mi><mi>p</mi><mi>e</mi><mi>r</mi></mrow></msub></mfrac><mo>×</mo><msub><mi>S</mi><mrow><mi>p</mi><mi>a</mi><mi>p</mi><mi>e</mi><mi>r</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">\\frac{N_{circle} }{N_{paper} } \\times S_{paper}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.4365109999999999em;vertical-align:-0.5423199999999999em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.894191em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.16454285714285716em;\"><span style=\"top:-2.357em;margin-left:-0.10903em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">p</span><span class=\"mord mathnormal mtight\">a</span><span class=\"mord mathnormal mtight\">p</span><span class=\"mord mathnormal mtight\">e</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2818857142857143em;\"><span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.41586em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3487714285714287em;margin-left:-0.10903em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">c</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal mtight\">c</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal mtight\">e</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15122857142857138em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5423199999999999em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.969438em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15139200000000003em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">p</span><span class=\"mord mathnormal mtight\">a</span><span class=\"mord mathnormal mtight\">p</span><span class=\"mord mathnormal mtight\">e</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> 即可计算出圆的面积。显然的是，绿豆的个数越多，算出的圆的面积就会越接近实际答案，这其实就是 <strong>蒙特卡洛（Mento Carlo）</strong> 算法的基本思想。</p>\n<p>从上述可以看出，Monte-Carlo 算法区别于确定性算法，它的解不一定是准确或正确的，其准确性或正确性依赖于概率和统计，但在某些问题上，当重复实验次数足够大时，可以从很大概率上（这个概率是可以在数学上证明的，但依赖于具体问题）确保解的准确或正确性，所以，我们可以根据具体的概率分析，设定实验的次数，从而将误差或错误率降到一个可容忍的程度。</p>\n<p>下面给出严格的证明：</p>\n<details class=\"primary\"><summary>证明</summary><div>\n<p>为不失一般性，可以设纸的面积为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">S</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span></span></span>，不规则图形面积为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>S</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">S&#x27;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.751892em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span> ，设事件 A：随机投掷一粒绿豆，绿豆落在圆内。</p>\n<p>显然，投掷落点符合二维均匀分布，所以 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mo stretchy=\"false\">(</mo><mi>A</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><msup><mi>S</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mi>S</mi></mfrac></mrow><annotation encoding=\"application/x-tex\">p(A)=\\frac{S&#x27;}{S}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">A</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.31848em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.97348em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05764em;\">S</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8278285714285715em;\"><span style=\"top:-2.931em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span>。</p>\n<p>设 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span> 是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 次投掷中，都在不规则圆形的次数，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ε</mi><mo>&gt;</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">\\varepsilon&gt;0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">ε</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span></span></span></span> 为任意正数，根据伯努利大数定律：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><munder><mo><mi>lim</mi><mo>⁡</mo></mo><mrow><mi>n</mi><mo>→</mo><mi mathvariant=\"normal\">∞</mi></mrow></munder><mi>P</mi><mrow><mo fence=\"true\">{</mo><mrow><mo fence=\"true\">∣</mo><mfrac><mi>k</mi><mi>n</mi></mfrac><mo>−</mo><mi>p</mi><mo stretchy=\"false\">(</mo><mi>A</mi><mo stretchy=\"false\">)</mo><mo fence=\"true\">∣</mo></mrow><mo>&lt;</mo><mi>ε</mi><mo fence=\"true\">}</mo></mrow><mo>=</mo><munder><mo><mi>lim</mi><mo>⁡</mo></mo><mrow><mi>n</mi><mo>→</mo><mi mathvariant=\"normal\">∞</mi></mrow></munder><mi>P</mi><mrow><mo fence=\"true\">{</mo><mrow><mo fence=\"true\">∣</mo><mfrac><mi>k</mi><mi>n</mi></mfrac><mo>−</mo><mfrac><msup><mi>S</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mi>S</mi></mfrac><mo>&lt;</mo><mi>ε</mi><mo fence=\"true\">∣</mo></mrow><mo fence=\"true\">}</mo></mrow><mo>=</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">\\lim_{n \\to \\infty} P\\left \\{  \\left | \\frac{k}{n} - p(A) \\right |&lt;  \\varepsilon \\right \\} = \\lim_{n \\to \\infty} P \\left \\{ \\left | \\frac{k}{n} - \\frac{S&#x27;}{S} &lt; \\varepsilon \\right | \\right \\} = 1\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.43em;vertical-align:-0.95003em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.69444em;\"><span style=\"top:-2.4em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mrel mtight\">→</span><span class=\"mord mtight\">∞</span></span></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span><span class=\"mop\">lim</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">{</span></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4799700000000002em;\"><span style=\"top:-1.65598em;\"><span class=\"pstrut\" style=\"height:2.606em;\"></span><span class=\"delimsizinginner delim-size1\"><span>∣</span></span></span><span style=\"top:-2.25698em;\"><span class=\"pstrut\" style=\"height:2.606em;\"></span><span class=\"delimsizinginner delim-size1\"><span>∣</span></span></span><span style=\"top:-2.85798em;\"><span class=\"pstrut\" style=\"height:2.606em;\"></span><span class=\"delimsizinginner delim-size1\"><span>∣</span></span></span><span style=\"top:-2.87897em;\"><span class=\"pstrut\" style=\"height:2.606em;\"></span><span class=\"delimsizinginner delim-size1\"><span>∣</span></span></span><span style=\"top:-3.47997em;\"><span class=\"pstrut\" style=\"height:2.606em;\"></span><span class=\"delimsizinginner delim-size1\"><span>∣</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9500199999999999em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.37144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">A</span><span class=\"mclose\">)</span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4799700000000002em;\"><span style=\"top:-1.65598em;\"><span class=\"pstrut\" style=\"height:2.606em;\"></span><span class=\"delimsizinginner delim-size1\"><span>∣</span></span></span><span style=\"top:-2.25698em;\"><span class=\"pstrut\" style=\"height:2.606em;\"></span><span class=\"delimsizinginner delim-size1\"><span>∣</span></span></span><span style=\"top:-2.85798em;\"><span class=\"pstrut\" style=\"height:2.606em;\"></span><span class=\"delimsizinginner delim-size1\"><span>∣</span></span></span><span style=\"top:-2.87897em;\"><span class=\"pstrut\" style=\"height:2.606em;\"></span><span class=\"delimsizinginner delim-size1\"><span>∣</span></span></span><span style=\"top:-3.47997em;\"><span class=\"pstrut\" style=\"height:2.606em;\"></span><span class=\"delimsizinginner delim-size1\"><span>∣</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9500199999999999em;\"><span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\">ε</span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">}</span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.43em;vertical-align:-0.95003em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.69444em;\"><span style=\"top:-2.4em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mrel mtight\">→</span><span class=\"mord mtight\">∞</span></span></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span><span class=\"mop\">lim</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">{</span></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4799700000000002em;\"><span style=\"top:-1.65598em;\"><span class=\"pstrut\" style=\"height:2.606em;\"></span><span class=\"delimsizinginner delim-size1\"><span>∣</span></span></span><span style=\"top:-2.25698em;\"><span class=\"pstrut\" style=\"height:2.606em;\"></span><span class=\"delimsizinginner delim-size1\"><span>∣</span></span></span><span style=\"top:-2.85798em;\"><span class=\"pstrut\" style=\"height:2.606em;\"></span><span class=\"delimsizinginner delim-size1\"><span>∣</span></span></span><span style=\"top:-2.87897em;\"><span class=\"pstrut\" style=\"height:2.606em;\"></span><span class=\"delimsizinginner delim-size1\"><span>∣</span></span></span><span style=\"top:-3.47997em;\"><span class=\"pstrut\" style=\"height:2.606em;\"></span><span class=\"delimsizinginner delim-size1\"><span>∣</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9500199999999999em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.37144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.428892em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\">ε</span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4799700000000002em;\"><span style=\"top:-1.65598em;\"><span class=\"pstrut\" style=\"height:2.606em;\"></span><span class=\"delimsizinginner delim-size1\"><span>∣</span></span></span><span style=\"top:-2.25698em;\"><span class=\"pstrut\" style=\"height:2.606em;\"></span><span class=\"delimsizinginner delim-size1\"><span>∣</span></span></span><span style=\"top:-2.85798em;\"><span class=\"pstrut\" style=\"height:2.606em;\"></span><span class=\"delimsizinginner delim-size1\"><span>∣</span></span></span><span style=\"top:-2.87897em;\"><span class=\"pstrut\" style=\"height:2.606em;\"></span><span class=\"delimsizinginner delim-size1\"><span>∣</span></span></span><span style=\"top:-3.47997em;\"><span class=\"pstrut\" style=\"height:2.606em;\"></span><span class=\"delimsizinginner delim-size1\"><span>∣</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9500199999999999em;\"><span></span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">}</span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span></span></p>\n<p>这就证明了，当 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi><mo>→</mo><mi mathvariant=\"normal\">∞</mi></mrow><annotation encoding=\"application/x-tex\">n \\rightarrow \\infty</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord\">∞</span></span></span></span> 时，频率 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mfrac><mi>k</mi><mi>n</mi></mfrac></mrow><annotation encoding=\"application/x-tex\">k\\over n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.2251079999999999em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8801079999999999em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span> 依概率收敛于 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mfrac><msup><mi>S</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mi>S</mi></mfrac></mrow><annotation encoding=\"application/x-tex\">S&#x27;\\over S</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.31848em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.97348em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05764em;\">S</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8278285714285715em;\"><span style=\"top:-2.931em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span>, 由于纸的面积是很好算的，也就可以轻松算出不规则圆的面积了。</p>\n</div></details>\n<p>上述证明从数学上说明用频率估计不规则图形面积的合理性，进一步可以给出误差分析，从而选择合适的实验次数 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span>，来将误差控制在可以容忍的范围内，Monte-Carlo 算法虽然不能保证解一定是准确和正确，但并不是 “撞大运”，其正确性和准确性依赖概率论，有严格的数学基础，也因此 Mento Carlo 算法也称统计模拟法、统计实验法。</p>\n<h1 id=\"解题流程\"><a class=\"anchor\" href=\"#解题流程\">#</a> 解题流程</h1>\n<h2 id=\"画出概率分布近似分布曲线\"><a class=\"anchor\" href=\"#画出概率分布近似分布曲线\">#</a> 画出概率分布近似分布曲线</h2>\n<p>由于是使用 Monte Carlo 算法来近似的求解问题，那么我们首先需要生成足够多的满足题目要求的随机数据，这里以 “标准正态分布” 数据为例进行说明：</p>\n<p>首先我们要生成足够多的数据去 “撒绿豆”，先随机生成一组样本容量为 2000 的标准正态分布样本数据，并画出他的概率密度曲线：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> matplotlib<span class=\"token punctuation\">.</span>pyplot <span class=\"token keyword\">as</span> plt</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> seaborn <span class=\"token keyword\">as</span> sns</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>num_arr <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>normal<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2000</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>sns<span class=\"token punctuation\">.</span>histplot<span class=\"token punctuation\">(</span>num_arr<span class=\"token punctuation\">,</span> kde<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>plt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"http://imgcdn.gality.cn/blog/nwslof.png\" alt=\"标准正态分布图\" /></p>\n<p>根据 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi><mrow><mo stretchy=\"false\">(</mo><msub><mi mathvariant=\"normal\">z</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi mathvariant=\"normal\">z</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi mathvariant=\"normal\">z</mi><mi mathvariant=\"normal\">n</mi></msub><mo stretchy=\"false\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">T \\mathrm{(z_1,z_2,...,z_n)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathrm\">.</span><span class=\"mord mathrm\">.</span><span class=\"mord mathrm\">.</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span> 的公式算出一个 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">t</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.61508em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">t</span></span></span></span>，并将其加入到：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>t_arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>z_a <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">(</span>num_arr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>z_1 <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span><span class=\"token builtin\">min</span><span class=\"token punctuation\">(</span>num_arr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>n <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>num_arr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>tmp <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  tmp <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span>num_arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>z_a<span class=\"token punctuation\">)</span><span class=\"token operator\">**</span><span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>t <span class=\"token operator\">=</span> math<span class=\"token punctuation\">.</span>sqrt<span class=\"token punctuation\">(</span>tmp<span class=\"token operator\">/</span>n<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span>z_a <span class=\"token operator\">-</span> z_1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>t_arr<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>此时，只需要重复这个算法，算出多个 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">t</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.61508em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">t</span></span></span></span> 值去估计概率分布即可。但是还有一个需要注意的点，由于 <code>seaborn</code>  库函数的原因，如果想画出概率密度的话，必须将生成的数组格式，使用 <code>pandas</code>  库转换成 <code>DataFrame</code>  格式才可以正确处理。</p>\n<p>最终代码如下：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> math</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> matplotlib<span class=\"token punctuation\">.</span>pyplot <span class=\"token keyword\">as</span> plt</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> seaborn <span class=\"token keyword\">as</span> sns</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>sns<span class=\"token punctuation\">.</span>set_style<span class=\"token punctuation\">(</span><span class=\"token string\">\"whitegrid\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>t_arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>loop <span class=\"token operator\">=</span> <span class=\"token number\">1000</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>loop<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    num_arr <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>normal<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    z_a <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">(</span>num_arr<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 样本平均值</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    z_1 <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span><span class=\"token builtin\">min</span><span class=\"token punctuation\">(</span>num_arr<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 样本最小值</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    n <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>num_arr<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 样本容量</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    tmp <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        tmp <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span>num_arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>z_a<span class=\"token punctuation\">)</span><span class=\"token operator\">**</span><span class=\"token number\">2</span> <span class=\"token comment\"># 中心二阶距</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    t <span class=\"token operator\">=</span> math<span class=\"token punctuation\">.</span>sqrt<span class=\"token punctuation\">(</span>tmp<span class=\"token operator\">/</span>n<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span>z_a <span class=\"token operator\">-</span> z_1<span class=\"token punctuation\">)</span> <span class=\"token comment\"># t 值</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    t_arr<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>t_arr<span class=\"token punctuation\">.</span>sort<span class=\"token punctuation\">(</span>reverse<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 对 t 进行排序，方便计算概率分布</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>t_arr_final <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">for</span> k <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>loop<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 格式化列表， 为生成 DataFrame 做准备</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> k <span class=\"token operator\">&lt;</span> <span class=\"token punctuation\">(</span>loop <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> t_arr<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> t_arr<span class=\"token punctuation\">[</span>k<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        t_arr_final<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>t_arr<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>loop<span class=\"token operator\">-</span>k<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span>loop<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">elif</span> <span class=\"token punctuation\">(</span> k <span class=\"token operator\">==</span> loop <span class=\"token operator\">-</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        t_arr_final<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>t_arr<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token keyword\">elif</span> <span class=\"token punctuation\">(</span>t_arr<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> t_arr<span class=\"token punctuation\">[</span>k<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>data <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span>data<span class=\"token operator\">=</span>t_arr_final<span class=\"token punctuation\">,</span> columns<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'value'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'probability'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>sns<span class=\"token punctuation\">.</span>scatterplot<span class=\"token punctuation\">(</span>x<span class=\"token operator\">=</span><span class=\"token string\">'value'</span><span class=\"token punctuation\">,</span> y<span class=\"token operator\">=</span><span class=\"token string\">'probability'</span><span class=\"token punctuation\">,</span> data<span class=\"token operator\">=</span>data<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 绘制散点图</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>sns<span class=\"token punctuation\">.</span>lineplot<span class=\"token punctuation\">(</span>data<span class=\"token operator\">=</span>data<span class=\"token punctuation\">,</span> x<span class=\"token operator\">=</span><span class=\"token string\">'value'</span><span class=\"token punctuation\">,</span> y<span class=\"token operator\">=</span><span class=\"token string\">'probability'</span><span class=\"token punctuation\">,</span>estimator<span class=\"token operator\">=</span><span class=\"token string\">'max'</span><span class=\"token punctuation\">,</span> color<span class=\"token operator\">=</span><span class=\"token string\">'red'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 绘制分布曲线</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>plt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 展示</span></pre></td></tr></table></figure><p><img data-src=\"http://imgcdn.gality.cn/blog/hcs6xb.png\" alt=\"函数概率分布\" /></p>\n<p>当 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>z</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>z</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>z</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">z_1, z_2, ..., z_n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 服从参数为 1 的指数分布时，整体代码不变，只需要将随机值生成时用到的函数改变一下，使生成的随机值满足指数分布即可，代码只需要变动一行：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> math</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> matplotlib<span class=\"token punctuation\">.</span>pyplot <span class=\"token keyword\">as</span> plt</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> seaborn <span class=\"token keyword\">as</span> sns</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>sns<span class=\"token punctuation\">.</span>set_style<span class=\"token punctuation\">(</span><span class=\"token string\">\"whitegrid\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>t_arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>loop <span class=\"token operator\">=</span> <span class=\"token number\">1000</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>loop<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token comment\"># num_arr = np.random.normal(0,1,1000)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    num_arr <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>exponential<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 使随机值服从指数分布</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    z_a <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">(</span>num_arr<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 样本平均值</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    z_1 <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span><span class=\"token builtin\">min</span><span class=\"token punctuation\">(</span>num_arr<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 样本最小值</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    n <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>num_arr<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 样本容量</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    tmp <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        tmp <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span>num_arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>z_a<span class=\"token punctuation\">)</span><span class=\"token operator\">**</span><span class=\"token number\">2</span> <span class=\"token comment\"># 中心二阶距</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    t <span class=\"token operator\">=</span> math<span class=\"token punctuation\">.</span>sqrt<span class=\"token punctuation\">(</span>tmp<span class=\"token operator\">/</span>n<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span>z_a <span class=\"token operator\">-</span> z_1<span class=\"token punctuation\">)</span> <span class=\"token comment\"># t 值</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    t_arr<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>t_arr<span class=\"token punctuation\">.</span>sort<span class=\"token punctuation\">(</span>reverse<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 对 t 进行排序，方便计算概率分布</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>t_arr_final <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token keyword\">for</span> k <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>loop<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 格式化列表， 为生成 DataFrame 做准备</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> k <span class=\"token operator\">&lt;</span> <span class=\"token punctuation\">(</span>loop <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> t_arr<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> t_arr<span class=\"token punctuation\">[</span>k<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        t_arr_final<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>t_arr<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>loop<span class=\"token operator\">-</span>k<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span>loop<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">elif</span> <span class=\"token punctuation\">(</span> k <span class=\"token operator\">==</span> loop <span class=\"token operator\">-</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        t_arr_final<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>t_arr<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">elif</span> <span class=\"token punctuation\">(</span>t_arr<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> t_arr<span class=\"token punctuation\">[</span>k<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>data <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span>data<span class=\"token operator\">=</span>t_arr_final<span class=\"token punctuation\">,</span> columns<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'value'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'probability'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>sns<span class=\"token punctuation\">.</span>scatterplot<span class=\"token punctuation\">(</span>x<span class=\"token operator\">=</span><span class=\"token string\">'value'</span><span class=\"token punctuation\">,</span> y<span class=\"token operator\">=</span><span class=\"token string\">'probability'</span><span class=\"token punctuation\">,</span> data<span class=\"token operator\">=</span>data<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 绘制散点图</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>sns<span class=\"token punctuation\">.</span>lineplot<span class=\"token punctuation\">(</span>data<span class=\"token operator\">=</span>data<span class=\"token punctuation\">,</span> x<span class=\"token operator\">=</span><span class=\"token string\">'value'</span><span class=\"token punctuation\">,</span> y<span class=\"token operator\">=</span><span class=\"token string\">'probability'</span><span class=\"token punctuation\">,</span>estimator<span class=\"token operator\">=</span><span class=\"token string\">'max'</span><span class=\"token punctuation\">,</span> color<span class=\"token operator\">=</span><span class=\"token string\">'red'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 绘制分布曲线</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>plt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 展示</span></pre></td></tr></table></figure><p>其概率分布如下：</p>\n<p><img data-src=\"http://imgcdn.gality.cn/blog/af4s0h.png\" alt=\"指数分布的概率分布\" /></p>\n<h2 id=\"求分位数\"><a class=\"anchor\" href=\"#求分位数\">#</a> 求分位数</h2>\n<p>根据分位数的定义：</p>\n<details class=\"primary\"><summary>分位数定义</summary><div>\n<p>设随机变量 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> 的分布函数为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">F(x)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span></span>，对任意给定的实数 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mo stretchy=\"false\">(</mo><mn>0</mn><mo>&lt;</mo><mi>p</mi><mo>&lt;</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">p(0&lt;p&lt;1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7335400000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span>，若存在 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>x</mi><mi>p</mi></msub></mrow><annotation encoding=\"application/x-tex\">x_p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.716668em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15139200000000003em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> 使得</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo>⩽</mo><msub><mi>x</mi><mi>p</mi></msub><mo stretchy=\"false\">)</mo><mo>=</mo><mi>F</mi><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mi>p</mi></msub><mo stretchy=\"false\">)</mo><mo>=</mo><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">P(X \\leqslant x_p ) = F(x_p) = p\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel amsrm\">⩽</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15139200000000003em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15139200000000003em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">p</span></span></span></span></span></p>\n<p>则称 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>x</mi><mi>p</mi></msub></mrow><annotation encoding=\"application/x-tex\">x_p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.716668em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15139200000000003em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> 为此概率分布的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">p</span></span></span></span> 分位数。</p>\n</div></details>\n<p>所以其实本质上就是在分布函数上求某一个 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">t</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.61508em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">t</span></span></span></span>，使得 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msub><mi>t</mi><mi>α</mi></msub></mrow><annotation encoding=\"application/x-tex\">F(t)=t_\\alpha</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.76508em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.0037em;\">α</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，而这一步我们在完成列表向 <code>DataFrame</code>  转化的时候就已经完成了，我们只需要把他找出来就可以了。</p>\n<p>代码如下：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 计算分位数</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>a_1 <span class=\"token operator\">=</span>  data<span class=\"token punctuation\">[</span>data<span class=\"token punctuation\">[</span><span class=\"token string\">'probability'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>isin<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'value'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>a_2 <span class=\"token operator\">=</span>  data<span class=\"token punctuation\">[</span>data<span class=\"token punctuation\">[</span><span class=\"token string\">'probability'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>isin<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">0.05</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'value'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>a_3 <span class=\"token operator\">=</span>  data<span class=\"token punctuation\">[</span>data<span class=\"token punctuation\">[</span><span class=\"token string\">'probability'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>isin<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">0.01</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'value'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a = 0.1 的分位数为：'</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>a_1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a = 0.05 的分位数为：'</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>a_2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a = 0.01 的分位数为：'</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>a_3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"http://imgcdn.gality.cn/blog/9vm1ew.png\" alt=\"样本为标准正态分布时的分位数\" /></p>\n<p>同样的代码，也可以求出样本服从指数分布时的分位数：</p>\n<p><img data-src=\"http://imgcdn.gality.cn/blog/4gd3s5.png\" alt=\"样本为指数分布时的分位数\" /></p>\n<h1 id=\"思考题\"><a class=\"anchor\" href=\"#思考题\">#</a> 思考题</h1>\n<p>Monte Carlo 方法计算结果随着样本容量变化时计算误差的变化</p>\n<p>我们分别给出模拟次数为 100、200、1000、10000 次时的概率分布函数曲线：</p>\n<p><img data-src=\"http://imgcdn.gality.cn/blog/e197si.png\" alt=\"不同次数的蒙特卡洛对比图\" /></p>\n<p>我们可以明显看到随着模拟次数的增多，概率分布曲线越来越光滑，意味着其准确度和正确性都有较大提升，这一点也是非常直观的，我们可以考虑更极端一点的，如果只有 10 次模拟次数呢？</p>\n<p><img data-src=\"http://imgcdn.gality.cn/blog/ndkfo2.png\" alt=\"10模拟次数情况下的概率分布曲线\" /></p>\n<p>可以看到，每次的近似概率分布曲线差别非常大，这是符合我们的预期的，当模拟次数较少时，得到的结果的准确度和正确性都有较大误差，无法真实反应统计情况。</p>\n<h1 id=\"总结\"><a class=\"anchor\" href=\"#总结\">#</a> 总结</h1>\n<p>在深入了解 Monte Carlo 算法后，我有种深深的感触：Monte Carlo 算法简直就是为计算机而生的。计算机解决问题时具有天然的计算优势，对于人类来说，解决问题的过程是拆解问题的过程。通过将复杂问题拆解成一个一个的简单问题，将不能 “计算” 的问题转化成能 “计算” 的问题，也因此，在这种过程中，人类会尽量寻找简单的模型去描述事物，哪怕与实际有些 “失真”，也是可以接受的。计算机则恰恰相反，计算机强在计算能力，强在运算速度，这时，如果还用人类解决问题的方法来让计算机解决问题，那其实就无法发挥出计算机的优势。</p>\n<p>Monte Carlo 算法就从根本上改变了这个问题，就以求面积问题来说，我们无需输入复杂的公式，构造复杂的循环、判断逻辑来计算面积的确切值，只需要使用足够多次的模拟值，就可以以极大把握接受算出的结果，就从这次大作业来看，模拟 1 万次操作也只需 2 秒左右的时间，可谓是找到了计算机解决问题的正确逻辑。</p>\n<p>在学习 “机器学习” 的内容时，了解到机器学习的底层逻辑是基于概率的，那时我还非常不理解为什么依赖是 “概率”，现在想来，统计与概率才是计算机的底层 “基因”，这才是计算机最擅长的东西，感谢这次大作业，感谢 Monte Carlo 算法。</p>\n<h1 id=\"参考\"><a class=\"anchor\" href=\"#参考\">#</a> 参考</h1>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20veHVtYW9qdW4vcC84NTQxNjM3Lmh0bWw=\">https://www.cnblogs.com/xumaojun/p/8541637.html</span></li>\n<li>孙海燕，周梦等 著，应用数理统计。北京航空航天大学出版社，2008.8</li>\n</ul>\n<h1 id=\"附录\"><a class=\"anchor\" href=\"#附录\">#</a> 附录</h1>\n<p>大作业整体代码如下：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> math</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> matplotlib<span class=\"token punctuation\">.</span>pyplot <span class=\"token keyword\">as</span> plt</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> seaborn <span class=\"token keyword\">as</span> sns</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>sns<span class=\"token punctuation\">.</span>set_style<span class=\"token punctuation\">(</span><span class=\"token string\">\"whitegrid\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>t_arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>loop <span class=\"token operator\">=</span> <span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>loop<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    num_arr <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>normal<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token comment\"># num_arr = np.random.exponential (1, 1000) # 使随机值服从指数分布</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    z_a <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">(</span>num_arr<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 样本平均值</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    z_1 <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span><span class=\"token builtin\">min</span><span class=\"token punctuation\">(</span>num_arr<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 样本最小值</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    n <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>num_arr<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 样本容量</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    tmp <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        tmp <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span>num_arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>z_a<span class=\"token punctuation\">)</span><span class=\"token operator\">**</span><span class=\"token number\">2</span> <span class=\"token comment\"># 中心二阶距</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    t <span class=\"token operator\">=</span> math<span class=\"token punctuation\">.</span>sqrt<span class=\"token punctuation\">(</span>tmp<span class=\"token operator\">/</span>n<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span>z_a <span class=\"token operator\">-</span> z_1<span class=\"token punctuation\">)</span> <span class=\"token comment\"># t 值</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    t_arr<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>t_arr<span class=\"token punctuation\">.</span>sort<span class=\"token punctuation\">(</span>reverse<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 对 t 进行排序，方便计算概率分布</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>t_arr_final <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token keyword\">for</span> k <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>loop<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 格式化列表， 为生成 DataFrame 做准备</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> k <span class=\"token operator\">&lt;</span> <span class=\"token punctuation\">(</span>loop <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> t_arr<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> t_arr<span class=\"token punctuation\">[</span>k<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        t_arr_final<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>t_arr<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>loop<span class=\"token operator\">-</span>k<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span>loop<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">elif</span> <span class=\"token punctuation\">(</span> k <span class=\"token operator\">==</span> loop <span class=\"token operator\">-</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        t_arr_final<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>t_arr<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">elif</span> <span class=\"token punctuation\">(</span>t_arr<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> t_arr<span class=\"token punctuation\">[</span>k<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>data <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span>data<span class=\"token operator\">=</span>t_arr_final<span class=\"token punctuation\">,</span> columns<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'value'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'probability'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>sns<span class=\"token punctuation\">.</span>scatterplot<span class=\"token punctuation\">(</span>x<span class=\"token operator\">=</span><span class=\"token string\">'value'</span><span class=\"token punctuation\">,</span> y<span class=\"token operator\">=</span><span class=\"token string\">'probability'</span><span class=\"token punctuation\">,</span> data<span class=\"token operator\">=</span>data<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 绘制散点图</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>sns<span class=\"token punctuation\">.</span>lineplot<span class=\"token punctuation\">(</span>data<span class=\"token operator\">=</span>data<span class=\"token punctuation\">,</span> x<span class=\"token operator\">=</span><span class=\"token string\">'value'</span><span class=\"token punctuation\">,</span> y<span class=\"token operator\">=</span><span class=\"token string\">'probability'</span><span class=\"token punctuation\">,</span>estimator<span class=\"token operator\">=</span><span class=\"token string\">'max'</span><span class=\"token punctuation\">,</span> color<span class=\"token operator\">=</span><span class=\"token string\">'red'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 绘制分布曲线</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>plt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 展示</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token comment\"># 计算分位数</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>a_1 <span class=\"token operator\">=</span>  data<span class=\"token punctuation\">[</span>data<span class=\"token punctuation\">[</span><span class=\"token string\">'probability'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>isin<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'value'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>a_2 <span class=\"token operator\">=</span>  data<span class=\"token punctuation\">[</span>data<span class=\"token punctuation\">[</span><span class=\"token string\">'probability'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>isin<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">0.05</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'value'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>a_3 <span class=\"token operator\">=</span>  data<span class=\"token punctuation\">[</span>data<span class=\"token punctuation\">[</span><span class=\"token string\">'probability'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>isin<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">0.01</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'value'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a = 0.1 的分位数为：'</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>a_1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a = 0.05 的分位数为：'</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>a_2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a = 0.01 的分位数为：'</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>a_3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "杂项",
                "数理统计",
                "蒙特卡洛法",
                "大作业"
            ]
        },
        {
            "id": "https://gality.cn/misc/Polar-code-&-channel-polarization%20copy/",
            "url": "https://gality.cn/misc/Polar-code-&-channel-polarization%20copy/",
            "title": "Polar code & channel polarization",
            "date_published": "2023-10-01T07:59:21.000Z",
            "content_html": "<div class=\"note info no-icon\">\n<p><strong>极化码</strong>（Polar code）是一种前向错误更正编码方式，用于讯号传输。</p>\n<p>构造的核心是通过信道极化（channel polarization）处理，在编码侧采用方法使各个子信道呈现出不同的可靠性，当码长持续增加时，部分信道将趋向于容量近于 1 的完美信道（无误码），另一部分信道趋向于容量接近于 0 的纯噪声信道，选择在容量接近于 1 的信道上直接传输信息以逼近信道容量，是首个被证明能够达到香农极限的方法。</p>\n<p>在解码侧，极化后的信道可用简单的逐次干扰抵消解码的方法，以较低的复杂度获得与最大似然解码相近的性能。</p>\n<p>如果你没有信息论基础，请先看 Information Theory Primer 章节。</p>\n</div>\n<h1 id=\"introduction\"><a class=\"anchor\" href=\"#introduction\">#</a> Introduction</h1>\n<p>Polar codes were introduced by Erdal Arıkan in 2009 and they provide the first deterministic construction of capacity-achieving codes for binary memoryless symmetric (BMS) channels.</p>\n<p>Notice that there is only one channel to transmission data, in order to facilitate the understanding, we logically separate one channel to two channel.</p>\n<p><img data-src=\"http://imgcdn.gality.cn/blog/c0vryg.png\" alt=\"Figure 1\" /></p>\n<p>In particular, consider a setup where <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><msub><mi>U</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>U</mi><mn>2</mn></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(U_1, U_2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> are two equiprobable bits that are encoded into <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><msub><mi>X</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>X</mi><mn>2</mn></msub><mo stretchy=\"false\">)</mo><mo>=</mo><mo stretchy=\"false\">(</mo><msub><mi>U</mi><mn>1</mn></msub><mo>⊕</mo><msub><mi>U</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><msub><mi>U</mi><mn>2</mn></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(X_1, X_2) = (U_1 ⊕ U_2, U_2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⊕</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>. Then, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><msub><mi>X</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>X</mi><mn>2</mn></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(X_1, X_2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> are mapped to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><msub><mi>Y</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>Y</mi><mn>2</mn></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(Y_1, Y_2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> by two independent BMS channels with transition probabilities <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><msub><mi>Y</mi><mn>1</mn></msub><mo>=</mo><mi>y</mi><mi mathvariant=\"normal\">∣</mi><msub><mi>X</mi><mn>1</mn></msub><mo>=</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>P</mi><mo stretchy=\"false\">(</mo><msub><mi>Y</mi><mn>2</mn></msub><mo>=</mo><mi>y</mi><mi mathvariant=\"normal\">∣</mi><msub><mi>X</mi><mn>2</mn></msub><mo>=</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>W</mi><mo stretchy=\"false\">(</mo><mi>y</mi><mi mathvariant=\"normal\">∣</mi><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">P(Y_1 = y | X_1 = x) = P(Y_2 = y | X_2 = x) = W(y|x)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mord\">∣</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span></span>.  Since the mapping from <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><msub><mi>U</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>U</mi><mn>2</mn></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(U_1, U_2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><msub><mi>X</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>X</mi><mn>2</mn></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(X_1, X_2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> is invertible, one finds that</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>I</mi><mo stretchy=\"false\">(</mo><msub><mi>U</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>U</mi><mn>2</mn></msub><mo separator=\"true\">;</mo><msub><mi>Y</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>Y</mi><mn>2</mn></msub><mo stretchy=\"false\">)</mo><mo>=</mo><mi>I</mi><mo stretchy=\"false\">(</mo><msub><mi>X</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>X</mi><mn>2</mn></msub><mo separator=\"true\">;</mo><msub><mi>Y</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>Y</mi><mn>2</mn></msub><mo stretchy=\"false\">)</mo><mo>=</mo><mi>I</mi><mo stretchy=\"false\">(</mo><msub><mi>X</mi><mn>1</mn></msub><mo separator=\"true\">;</mo><msub><mi>Y</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo><mo>+</mo><mi>I</mi><mo stretchy=\"false\">(</mo><msub><mi>X</mi><mn>2</mn></msub><mo separator=\"true\">;</mo><msub><mi>Y</mi><mn>2</mn></msub><mo stretchy=\"false\">)</mo><mo>=</mo><mn>2</mn><mi>I</mi><mo stretchy=\"false\">(</mo><mi>W</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">I(U_1,U_2;Y_1,Y_2) = I(X_1,X_2;Y_1,Y_2) = I(X_1; Y_1) + I(X_2;Y_2) = 2I(W)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">2</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mclose\">)</span></span></span></span></span></p>\n<p>where <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi><mo>=</mo><mi>I</mi><mo stretchy=\"false\">(</mo><msub><mi>X</mi><mn>1</mn></msub><mo separator=\"true\">;</mo><msub><mi>Y</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo><mo>=</mo><mi>I</mi><mo stretchy=\"false\">(</mo><mi>W</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">C = I(X_1; Y_1) = I(W)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mclose\">)</span></span></span></span> is the capacity of symmetric BMS channel because <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>X</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">X_1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> is equiprobable and</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>I</mi><mo stretchy=\"false\">(</mo><mi>W</mi><mo stretchy=\"false\">)</mo><mo>≜</mo><mstyle scriptlevel=\"0\" displaystyle=\"true\"><munder><mo>∑</mo><mi>y</mi></munder><mi>W</mi><mo stretchy=\"false\">(</mo><mi>y</mi><mi mathvariant=\"normal\">∣</mi><mn>0</mn><mo stretchy=\"false\">)</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mo stretchy=\"false\">[</mo><mrow><mi>W</mi><mo stretchy=\"false\">(</mo><mi>y</mi><mi mathvariant=\"normal\">∣</mi><mn>0</mn><mo stretchy=\"false\">)</mo><mi mathvariant=\"normal\">/</mi><mo stretchy=\"false\">(</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mi>W</mi><mo stretchy=\"false\">(</mo><mi>y</mi><mi mathvariant=\"normal\">∣</mi><mn>0</mn><mo stretchy=\"false\">)</mo><mo>+</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mi>W</mi><mo stretchy=\"false\">(</mo><mi>y</mi><mi mathvariant=\"normal\">∣</mi><mn>1</mn><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mrow><mo stretchy=\"false\">]</mo><mo>=</mo><mi>I</mi><mo stretchy=\"false\">(</mo><msub><mi>X</mi><mn>1</mn></msub><mo separator=\"true\">;</mo><msub><mi>Y</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo></mstyle></mrow><annotation encoding=\"application/x-tex\">I(W) \\triangleq \\displaystyle\\sum_y W(y|0)log_{2}[{W(y|0)/({\\frac{1}{2}}W(y|0) + \\frac{1}{2}W(y|1))}] = I(X_1;Y_1)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1666699999999999em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel amsrm\">≜</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.707553em;vertical-align:-1.386113em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0500050000000003em;\"><span style=\"top:-1.8999949999999999em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">y</span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.386113em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mord\">∣</span><span class=\"mord\">0</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mord\">∣</span><span class=\"mord\">0</span><span class=\"mclose\">)</span><span class=\"mord\">/</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mord\">∣</span><span class=\"mord\">0</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mord\">∣</span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mclose\">)</span></span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></p>\n<p>Thus, the transformation <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><msub><mi>X</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>X</mi><mn>2</mn></msub><mo stretchy=\"false\">)</mo><mo>=</mo><mo stretchy=\"false\">(</mo><msub><mi>U</mi><mn>1</mn></msub><mo>⊕</mo><msub><mi>U</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><msub><mi>U</mi><mn>2</mn></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(X_1, X_2) = (U_1 ⊕ U_2, U_2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⊕</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> preserves the sum capacity of the system.</p>\n<p>Also, the chain rule decomposition</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>I</mi><mo stretchy=\"false\">(</mo><msub><mi>U</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>U</mi><mn>2</mn></msub><mo separator=\"true\">;</mo><msub><mi>Y</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>Y</mi><mn>2</mn></msub><mo stretchy=\"false\">)</mo><mo>=</mo><mi>I</mi><mo stretchy=\"false\">(</mo><msub><mi>U</mi><mn>1</mn></msub><mo separator=\"true\">;</mo><msub><mi>Y</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>Y</mi><mn>2</mn></msub><mo stretchy=\"false\">)</mo><mo>+</mo><mi>I</mi><mo stretchy=\"false\">(</mo><msub><mi>U</mi><mn>2</mn></msub><mo separator=\"true\">;</mo><msub><mi>Y</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>Y</mi><mn>2</mn></msub><mi mathvariant=\"normal\">∣</mi><msub><mi>U</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo><mo>=</mo><mn>2</mn><mi>I</mi><mo stretchy=\"false\">(</mo><mi>W</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">I(U_1, U_2; Y_1, Y_2) = I(U_1; Y_1, Y_2) + I(U_2; Y_1, Y_2|U_1) = 2I(W)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">2</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mclose\">)</span></span></span></span></span></p>\n<p>implies that one can also achieve the rate <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn><mi>I</mi><mo stretchy=\"false\">(</mo><mi>W</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">2I(W)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">2</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mclose\">)</span></span></span></span> using two steps. First, information is transmitted through the first virtual channel <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>W</mi><mo>−</mo></msup><mo>:</mo><msub><mi>U</mi><mn>1</mn></msub><mo>→</mo><mo stretchy=\"false\">(</mo><msub><mi>Y</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>Y</mi><mn>2</mn></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">W^- : U_1 → (Y_1, Y_2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.771331em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.771331em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">−</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>. By coding over multiple channel uses, one can achieve any rate up to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>I</mi><mo stretchy=\"false\">(</mo><msub><mi>U</mi><mn>1</mn></msub><mo separator=\"true\">;</mo><msub><mi>Y</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>Y</mi><mn>2</mn></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">I(U_1; Y_1, Y_2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>. If all the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>U</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">U_1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>’s are known from the first stage, then one can decode the information transmitted through the second virtual channel <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>W</mi><mo>+</mo></msup><mo>:</mo><msub><mi>U</mi><mn>2</mn></msub><mo>→</mo><mo stretchy=\"false\">(</mo><msub><mi>Y</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>Y</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><msub><mi>U</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">W^+ : U_2 → (Y_1, Y_2, U_1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.771331em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.771331em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">+</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>. Again, coding allows one to achieve any rate up to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>I</mi><mo stretchy=\"false\">(</mo><msub><mi>U</mi><mn>2</mn></msub><mo separator=\"true\">;</mo><msub><mi>Y</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>Y</mi><mn>2</mn></msub><mi mathvariant=\"normal\">∣</mi><msub><mi>U</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">I(U_2; Y_1, Y_2|U_1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>.</p>\n<p>If one chooses convolutional codes with sequential decoding, however, the expected decoding-complexity per bit becomes unbounded for rates above the computational cutoff rate</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>R</mi><mn>0</mn></msub><mo stretchy=\"false\">(</mo><mi>W</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mn>1</mn><mo>−</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mrow><mo stretchy=\"false\">(</mo><mn>1</mn><mo>+</mo><mi>Z</mi><mo stretchy=\"false\">(</mo><mi>W</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">R_0(W) = 1 - log_{2}{(1 + Z(W))}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mclose\">)</span><span class=\"mclose\">)</span></span></span></span></span></span></p>\n<p>where</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>Z</mi><mo stretchy=\"false\">(</mo><mi>W</mi><mo stretchy=\"false\">)</mo><mo>≜</mo><mstyle scriptlevel=\"0\" displaystyle=\"true\"><munder><mo>∑</mo><mi>y</mi></munder><msqrt><mrow><mi>W</mi><mo stretchy=\"false\">(</mo><mi>y</mi><mi mathvariant=\"normal\">∣</mi><mn>0</mn><mo stretchy=\"false\">)</mo><mi>W</mi><mo stretchy=\"false\">(</mo><mi>y</mi><mi mathvariant=\"normal\">∣</mi><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></msqrt></mstyle></mrow><annotation encoding=\"application/x-tex\">Z(W) \\triangleq \\displaystyle\\sum_y \\sqrt{W(y|0)W(y|1) }\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1666699999999999em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel amsrm\">≜</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.4361180000000004em;vertical-align:-1.386113em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0500050000000003em;\"><span style=\"top:-1.8999949999999999em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">y</span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.386113em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.983875em;\"><span class=\"svg-align\" style=\"top:-3.2em;\"><span class=\"pstrut\" style=\"height:3.2em;\"></span><span class=\"mord\" style=\"padding-left:1em;\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mord\">∣</span><span class=\"mord\">0</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mord\">∣</span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span><span style=\"top:-2.9438750000000002em;\"><span class=\"pstrut\" style=\"height:3.2em;\"></span><span class=\"hide-tail\" style=\"min-width:1.02em;height:1.28em;\"><svg width='400em' height='1.28em' viewBox='0 0 400000 1296' preserveAspectRatio='xMinYMin slice'><path d='M263,681c0.7,0,18,39.7,52,119\nc34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120\nc340,-704.7,510.7,-1060.3,512,-1067\nl0 -0\nc4.7,-7.3,11,-11,19,-11\nH40000v40H1012.3\ns-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232\nc-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1\ns-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26\nc-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60z\nM1001 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.25612499999999994em;\"><span></span></span></span></span></span></span></span></span></span></p>\n<p>is the Bhattacharyya parameter of the channel . Arıkan’s key observation was that, while the sum capacity of the two virtual channels is preserved, the sum cutoff rate satisfies</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>R</mi><mn>0</mn></msub><mo stretchy=\"false\">(</mo><msup><mi>W</mi><mo>+</mo></msup><mo stretchy=\"false\">)</mo><mo>+</mo><msub><mi>R</mi><mn>0</mn></msub><mo stretchy=\"false\">(</mo><msup><mi>W</mi><mo>−</mo></msup><mo stretchy=\"false\">)</mo><mo>≥</mo><mn>2</mn><msub><mi>R</mi><mn>0</mn></msub><mo stretchy=\"false\">(</mo><mi>W</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">R_0(W^+) + R_0(W^-) ≥ 2R_0(W)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.071331em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.821331em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">+</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.071331em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.821331em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">−</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">2</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mclose\">)</span></span></span></span></span></p>\n<p>with equality <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>R</mi><mn>0</mn></msub><mo stretchy=\"false\">(</mo><mi>W</mi><mo stretchy=\"false\">)</mo><mo>∈</mo><mrow><mn>0</mn><mo separator=\"true\">,</mo><mn>1</mn></mrow></mrow><annotation encoding=\"application/x-tex\">R_0(W) ∈ {0, 1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8388800000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">1</span></span></span></span></span>. Thus, repeated transformations of this type cause the implied virtual channels to polarize into extremal channels whose capacities approach 0 or 1. But, for these extremal channels, coding is trivial and one either sends an information bit or a dummy bit. From a theoretical point of view, polar codes are beautifully simple. Practically, they approach capacity rather slowly as their blocklength increases. Still, based on recent advances, they have been chosen as the short-block codes for the 5G standard.</p>\n<h1 id=\"information-theory-primer\"><a class=\"anchor\" href=\"#information-theory-primer\">#</a> Information Theory Primer</h1>\n<h2 id=\"discrete-random-variables\"><a class=\"anchor\" href=\"#discrete-random-variables\">#</a> Discrete Random variables</h2>\n<p>A discrete random variable <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> is completely defined by the set of values it can take, $\\mathcal{X} $ , which we assume to be a finite set, and its probability distribution <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mrow><mo fence=\"true\">{</mo><mi>p</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo fence=\"true\">}</mo></mrow><mrow><mi>x</mi><mo>∈</mo><mi mathvariant=\"script\">X</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">\\left \\{p(x) \\right \\}_{x \\in \\mathcal{X} }</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.07707em;vertical-align:-0.32706999999999997em;\"></span><span class=\"minner\"><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">{</span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mclose delimcenter\" style=\"top:0em;\">}</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.17863099999999998em;\"><span style=\"top:-2.4003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">x</span><span class=\"mrel mtight\">∈</span><span class=\"mord mtight\"><span class=\"mord mathcal mtight\" style=\"margin-right:0.14643em;\">X</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32706999999999997em;\"><span></span></span></span></span></span></span></span></span></span> .</p>\n<p><strong>Definition.</strong> The value <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">p(x)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span></span> is the probability that the random variable <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> takes the value <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span>. The probability distribution p : <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">X</mi><mo>→</mo><mo stretchy=\"false\">[</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>1</mn><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">\\mathcal{X}  → [0, 1]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathcal\" style=\"margin-right:0.14643em;\">X</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span></span></span></span> must satisfy the normalization condition:</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mstyle scriptlevel=\"0\" displaystyle=\"true\"><munder><mo>∑</mo><mrow><mi>x</mi><mo>∈</mo><mi>χ</mi></mrow></munder><mi>p</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mn>1</mn></mstyle></mrow><annotation encoding=\"application/x-tex\">\\displaystyle\\sum_{x \\in \\chi} p(x) = 1\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.4361180000000004em;vertical-align:-1.386113em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0500050000000003em;\"><span style=\"top:-1.8999949999999999em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">x</span><span class=\"mrel mtight\">∈</span><span class=\"mord mathnormal mtight\">χ</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.386113em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span></span></p>\n<p>We shall denote by <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">P</mi><mo stretchy=\"false\">(</mo><mi>A</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbb{P}(A)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">P</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">A</span><span class=\"mclose\">)</span></span></span></span> the probability of an event $A \\subseteq \\mathcal{X} $, so that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi mathvariant=\"double-struck\">P</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo>=</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">p(x) = \\mathbb{P}(X=x)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">P</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span></span></p>\n<h2 id=\"self-information\"><a class=\"anchor\" href=\"#self-information\">#</a> Self-information</h2>\n<p>Claude Shannon's definition of self-information was chosen to meet several axioms:</p>\n<ol>\n<li>An event with probability 100% is perfectly unsurprising and yields no information.</li>\n<li>The less probable an event is, the more surprising it is and the more information it yields.</li>\n<li>If two independent events are measured separately, the total amount of information is the sum of the self-informations of the individual events.</li>\n</ol>\n<p>The units of information in follow formula is 'bit':</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>I</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msub><mo><mi>log</mi><mo>⁡</mo></mo><mn>2</mn></msub><mo stretchy=\"false\">(</mo><mfrac><mn>1</mn><mrow><mi>p</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow></mfrac><mo stretchy=\"false\">)</mo><mo>=</mo><mo>−</mo><msub><mo><mi>log</mi><mo>⁡</mo></mo><mn>2</mn></msub><mo stretchy=\"false\">(</mo><mrow><mi>p</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">I(x) = \\log_{2}({1 \\over p(x)}) = -\\log_{2}({p(x)})\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.25744em;vertical-align:-0.936em;\"></span><span class=\"mop\"><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.20696799999999996em;\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.24414em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">−</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\"><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.20696799999999996em;\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.24414em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span><span class=\"mclose\">)</span></span></span></span></span></p>\n<p>The concept of self-information is associated with variable values based on the observation of an information source. Consequently, multiple different values will be used to describe the same <span class=\"exturl\" data-url=\"aHR0cDovL3NvdXJjZS5Jbg==\">source.In</span> order to avoid this situation, we introduce the concept of entropy.</p>\n<h2 id=\"entropy\"><a class=\"anchor\" href=\"#entropy\">#</a> Entropy</h2>\n<p><img data-src=\"http://imgcdn.gality.cn/blog/k95c3u.png\" alt=\"entropy\" height=\"261\" width=\"378\" /></p>\n<p><strong>Definition .</strong> The entropy (unit: bit/sig) of a discrete random variable <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> with probability distribution <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">p(x)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span></span> is denoted</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>H</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo stretchy=\"false\">)</mo><mo>≜</mo><mstyle scriptlevel=\"0\" displaystyle=\"true\"><munder><mo>∑</mo><mrow><mi>x</mi><mo>∈</mo><mi>χ</mi></mrow></munder><mi>p</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><msub><mo><mi>log</mi><mo>⁡</mo></mo><mn>2</mn></msub><mfrac><mn>1</mn><mrow><mi>p</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow></mfrac><mo>=</mo><mi mathvariant=\"double-struck\">E</mi><mo stretchy=\"false\">[</mo><msub><mo><mi>log</mi><mo>⁡</mo></mo><mn>2</mn></msub><mfrac><mn>1</mn><mrow><mi>p</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow></mfrac><mo stretchy=\"false\">]</mo></mstyle></mrow><annotation encoding=\"application/x-tex\">H(X) \\triangleq \\displaystyle\\sum_{x \\in \\chi} p(x) \\log_{2}{1\\over p(x)} = \\mathbb{E} [\\log_{2}{1\\over p(x)}]\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1666699999999999em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel amsrm\">≜</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.707553em;vertical-align:-1.386113em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0500050000000003em;\"><span style=\"top:-1.8999949999999999em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">x</span><span class=\"mrel mtight\">∈</span><span class=\"mord mathnormal mtight\">χ</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.386113em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\"><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.20696799999999996em;\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.24414em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.25744em;vertical-align:-0.936em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">E</span></span><span class=\"mopen\">[</span><span class=\"mop\"><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.20696799999999996em;\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.24414em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span><span class=\"mclose\">]</span></span></span></span></span></p>\n<p>The unit of entropy is determined by the base of the logarithm with base-2 resulting in “bits” and the natural log (i.e., base-e) resulting in “nats”.</p>\n<p>The <strong>understanding</strong> of entropy：</p>\n<ol>\n<li>Refers to the <strong>mathematical expectation</strong> of the self-information of various messages output by the information source, which is the average self-information of the source.</li>\n<li>Describe the <strong>average uncertainty</strong> of the information source <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span></li>\n<li>Describe the average amount of information <strong>carried by</strong> each source symbol</li>\n</ol>\n<h3 id=\"joint-entropy\"><a class=\"anchor\" href=\"#joint-entropy\">#</a> joint entropy</h3>\n<p><strong>Definition .</strong> The <strong>joint entropy</strong> (in bits) of a pair of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>X</mi><mo separator=\"true\">,</mo><mi>Y</mi><mo stretchy=\"false\">)</mo><mo>∽</mo><msub><mi>p</mi><mrow><mi>X</mi><mo separator=\"true\">,</mo><mi>Y</mi></mrow></msub><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(X, Y) \\backsim p_{X, Y}(x, y)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel amsrm\">∽</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.328331em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07847em;\">X</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.22222em;\">Y</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span></span></span></span> is denoted</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>H</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo separator=\"true\">,</mo><mi>Y</mi><mo stretchy=\"false\">)</mo><mo>≜</mo><mstyle scriptlevel=\"0\" displaystyle=\"true\"><munder><mo>∑</mo><mrow><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo stretchy=\"false\">)</mo><mo>∈</mo><mrow><mi mathvariant=\"script\">X</mi><mo>×</mo><mi mathvariant=\"script\">Y</mi></mrow></mrow></munder><msub><mi>p</mi><mrow><mi>X</mi><mi>Y</mi></mrow></msub><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo stretchy=\"false\">)</mo><msub><mo><mi>log</mi><mo>⁡</mo></mo><mn>2</mn></msub><mfrac><mn>1</mn><mrow><msub><mi>p</mi><mrow><mi>X</mi><mi>Y</mi></mrow></msub><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo stretchy=\"false\">)</mo></mrow></mfrac><mo>=</mo><mi mathvariant=\"double-struck\">E</mi><mo stretchy=\"false\">[</mo><msub><mo><mi>log</mi><mo>⁡</mo></mo><mn>2</mn></msub><mfrac><mn>1</mn><mrow><msub><mi>p</mi><mrow><mi>X</mi><mi>Y</mi></mrow></msub><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo stretchy=\"false\">)</mo></mrow></mfrac><mo stretchy=\"false\">]</mo></mstyle></mrow><annotation encoding=\"application/x-tex\">H(X, Y) \\triangleq \\displaystyle\\sum_{(x, y) \\in \\mathcal{X\\times Y}  } p_{XY}(x, y) \\log_{2}{1\\over p_{XY}(x, y)} = \\mathbb{E} [\\log_{2}{1\\over p_{XY}(x, y)}]\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1666699999999999em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel amsrm\">≜</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.8374449999999998em;vertical-align:-1.516005em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.050005em;\"><span style=\"top:-1.808995em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">x</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose mtight\">)</span><span class=\"mrel mtight\">∈</span><span class=\"mord mtight\"><span class=\"mord mathcal mtight\" style=\"margin-right:0.14643em;\">X</span><span class=\"mbin mtight\">×</span><span class=\"mord mathcal mtight\" style=\"margin-right:0.08222em;\">Y</span></span></span></span></span><span style=\"top:-3.0500049999999996em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.516005em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07847em;\">X</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.22222em;\">Y</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\"><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.20696799999999996em;\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.24414em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07847em;\">X</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.22222em;\">Y</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.25744em;vertical-align:-0.936em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">E</span></span><span class=\"mopen\">[</span><span class=\"mop\"><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.20696799999999996em;\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.24414em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07847em;\">X</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.22222em;\">Y</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span><span class=\"mclose\">]</span></span></span></span></span></p>\n<p>Notice that this is identical to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>H</mi><mo stretchy=\"false\">(</mo><mi>Z</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">H (Z)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span><span class=\"mclose\">)</span></span></span></span> with <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Z</mi><mo>=</mo><mo stretchy=\"false\">(</mo><mi>X</mi><mo separator=\"true\">,</mo><mi>Y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">Z = (X, Y)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span></span></span></span>.</p>\n<h3 id=\"conditional-entropy\"><a class=\"anchor\" href=\"#conditional-entropy\">#</a> conditional entropy</h3>\n<p>For a pair of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>X</mi><mo separator=\"true\">,</mo><mi>Y</mi><mo stretchy=\"false\">)</mo><mo>∽</mo><msub><mi>p</mi><mrow><mi>X</mi><mo separator=\"true\">,</mo><mi>Y</mi></mrow></msub><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(X, Y ) \\backsim p_{X,Y} (x, y)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel amsrm\">∽</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.328331em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07847em;\">X</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.22222em;\">Y</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span></span></span></span>, the <strong>conditional entropy</strong> (in bits) of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span> given <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> is denoted</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>H</mi><mo stretchy=\"false\">(</mo><mi>Y</mi><mi mathvariant=\"normal\">∣</mi><mi>X</mi><mo stretchy=\"false\">)</mo><mo>≜</mo><msub><mi>p</mi><mrow><mi>X</mi><mo separator=\"true\">,</mo><mi>Y</mi></mrow></msub><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo stretchy=\"false\">)</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mfrac><mn>1</mn><mrow><msub><mi>p</mi><mrow><mi>Y</mi><mi mathvariant=\"normal\">∣</mi><mi>X</mi></mrow></msub><mo stretchy=\"false\">(</mo><mi>y</mi><mi mathvariant=\"normal\">∣</mi><mi>x</mi><mo stretchy=\"false\">)</mo></mrow></mfrac><mo>=</mo><mi mathvariant=\"double-struck\">E</mi><mo stretchy=\"false\">[</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mfrac><mn>1</mn><mrow><msub><mi>p</mi><mrow><mi>Y</mi><mi mathvariant=\"normal\">∣</mi><mi>X</mi></mrow></msub><mo stretchy=\"false\">(</mo><mi>y</mi><mi mathvariant=\"normal\">∣</mi><mi>x</mi><mo stretchy=\"false\">)</mo></mrow></mfrac><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">H(Y|X) \\triangleq p_{X,Y}(x,y)log_{2}{1 \\over p_{Y|X}(y|x)} = \\mathbb{E}[log_{2}{1 \\over p_{Y|X}(y|x)}]\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1666699999999999em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel amsrm\">≜</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.36264em;vertical-align:-1.0412em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.328331em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07847em;\">X</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.22222em;\">Y</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34480000000000005em;\"><span style=\"top:-2.5198em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mord mtight\">∣</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07847em;\">X</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3551999999999999em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mord\">∣</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0412em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.36264em;vertical-align:-1.0412em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">E</span></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34480000000000005em;\"><span style=\"top:-2.5198em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mord mtight\">∣</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07847em;\">X</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3551999999999999em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mord\">∣</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0412em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span><span class=\"mclose\">]</span></span></span></span></span></p>\n<p>conditional entropy <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>H</mi><mo stretchy=\"false\">(</mo><mi>Y</mi><mi mathvariant=\"normal\">∣</mi><mi>X</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">H(Y|X)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span></span></span></span> means the uncertainty of the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span> when the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> is known.</p>\n<h3 id=\"mutual-information\"><a class=\"anchor\" href=\"#mutual-information\">#</a> mutual information</h3>\n<p><strong>Definition .</strong> For a pair of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>X</mi><mo separator=\"true\">,</mo><mi>Y</mi><mo stretchy=\"false\">)</mo><mo>∽</mo><msub><mi>p</mi><mrow><mi>X</mi><mo separator=\"true\">,</mo><mi>Y</mi></mrow></msub><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(X, Y ) \\backsim p_{X,Y} (x, y)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel amsrm\">∽</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.328331em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07847em;\">X</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.22222em;\">Y</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span></span></span></span>, the <strong>mutual information</strong> (in bits) between <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span> is denoted</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>I</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo separator=\"true\">;</mo><mi>Y</mi><mo stretchy=\"false\">)</mo><mo>≜</mo><mstyle scriptlevel=\"0\" displaystyle=\"true\"><munder><mo>∑</mo><mrow><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo stretchy=\"false\">)</mo><mo>∈</mo><mrow><mi mathvariant=\"script\">X</mi><mo>×</mo><mi mathvariant=\"script\">Y</mi></mrow></mrow></munder><msub><mi>p</mi><mrow><mi>X</mi><mo separator=\"true\">,</mo><mi>Y</mi></mrow></msub><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo stretchy=\"false\">)</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mfrac><mrow><msub><mi>p</mi><mrow><mi>X</mi><mo separator=\"true\">,</mo><mi>Y</mi></mrow></msub><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo stretchy=\"false\">)</mo></mrow><mrow><msub><mi>P</mi><mi>X</mi></msub><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><msub><mi>p</mi><mi>Y</mi></msub><mo stretchy=\"false\">(</mo><mi>y</mi><mo stretchy=\"false\">)</mo></mrow></mfrac><mo>=</mo><mi mathvariant=\"double-struck\">E</mi><mo stretchy=\"false\">[</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mfrac><mrow><msub><mi>p</mi><mrow><mi>X</mi><mo separator=\"true\">,</mo><mi>Y</mi></mrow></msub><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo stretchy=\"false\">)</mo></mrow><mrow><msub><mi>P</mi><mi>X</mi></msub><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><msub><mi>p</mi><mi>Y</mi></msub><mo stretchy=\"false\">(</mo><mi>y</mi><mo stretchy=\"false\">)</mo></mrow></mfrac><mo stretchy=\"false\">]</mo></mstyle></mrow><annotation encoding=\"application/x-tex\">I(X;Y) \\triangleq \\displaystyle\\sum_{(x,y) \\in \\mathcal{X\\times Y}}p_{X,Y}(x,y)log_{2}{p_{X,Y}(x,y) \\over P_X(x)p_Y(y)} = \\mathbb{E}[log_{2}{p_{X,Y}(x,y) \\over P_X(x)p_Y(y)}]\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1666699999999999em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel amsrm\">≜</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.9430050000000003em;vertical-align:-1.516005em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.050005em;\"><span style=\"top:-1.808995em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">x</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose mtight\">)</span><span class=\"mrel mtight\">∈</span><span class=\"mord mtight\"><span class=\"mord mathcal mtight\" style=\"margin-right:0.14643em;\">X</span><span class=\"mbin mtight\">×</span><span class=\"mord mathcal mtight\" style=\"margin-right:0.08222em;\">Y</span></span></span></span></span><span style=\"top:-3.0500049999999996em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.516005em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.328331em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07847em;\">X</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.22222em;\">Y</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07847em;\">X</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.22222em;\">Y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.328331em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07847em;\">X</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.22222em;\">Y</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.363em;vertical-align:-0.936em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">E</span></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07847em;\">X</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.22222em;\">Y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.328331em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07847em;\">X</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.22222em;\">Y</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span><span class=\"mclose\">]</span></span></span></span></span></p>\n<h3 id=\"lemma\"><a class=\"anchor\" href=\"#lemma\">#</a> Lemma</h3>\n<p><strong>Lemma .</strong> Basic properties of joint entropy and mutual information:</p>\n<ol>\n<li>(<em>chain rule of entropy</em>) <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>H</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo separator=\"true\">,</mo><mi>Y</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>H</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mi>H</mi><mo stretchy=\"false\">(</mo><mi>Y</mi><mi mathvariant=\"normal\">∣</mi><mi>X</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">H (X, Y) = H (X) + H (Y|X)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span></span></span></span>. If <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span> are independent, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>H</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo separator=\"true\">,</mo><mi>Y</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>H</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mi>H</mi><mo stretchy=\"false\">(</mo><mi>Y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">H(X, Y) = H(X) + H(Y)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span></span></span></span>.</li>\n<li>The mutual information satisfies <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>I</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo separator=\"true\">;</mo><mi>Y</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>I</mi><mo stretchy=\"false\">(</mo><mi>Y</mi><mo separator=\"true\">;</mo><mi>X</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">I(X; Y) = I(Y ; X)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span></span></span></span> and</li>\n</ol>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>I</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo separator=\"true\">;</mo><mi>Y</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>H</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mi>H</mi><mo stretchy=\"false\">(</mo><mi>Y</mi><mo stretchy=\"false\">)</mo><mo>−</mo><mi>H</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo separator=\"true\">,</mo><mi>Y</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>H</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo stretchy=\"false\">)</mo><mo>−</mo><mi>H</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mi mathvariant=\"normal\">∣</mi><mi>Y</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>H</mi><mo stretchy=\"false\">(</mo><mi>Y</mi><mo stretchy=\"false\">)</mo><mo>−</mo><mi>H</mi><mo stretchy=\"false\">(</mo><mi>Y</mi><mi mathvariant=\"normal\">∣</mi><mi>X</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">I(X;Y) = H(X) + H(Y) - H(X,Y) = H(X) -H(X|Y) = H(Y) - H(Y|X)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span></span></span></span></span></p>\n<h1 id=\"references\"><a class=\"anchor\" href=\"#references\">#</a> References</h1>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvJUU2JUE1JUI1JUU1JThDJTk2JUU3JUEyJUJD\">https://zh.wikipedia.org/wiki/ 極化碼</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3BmaXN0ZXIuZWUuZHVrZS5lZHUvY291cnNlcy9lY2VuNjU1L3BvbGFyLnBkZg==\">http://pfister.ee.duke.edu/courses/ecen655/polar.pdf</span></li>\n</ul>\n",
            "tags": [
                "杂项",
                "极化码",
                "信道极化",
                "信道编码",
                "通信"
            ]
        },
        {
            "id": "https://gality.cn/note/PNT/timing/",
            "url": "https://gality.cn/note/PNT/timing/",
            "title": "授时过程详述",
            "date_published": "2023-09-29T08:17:34.000Z",
            "content_html": "<h1 id=\"时间的产生\"><a class=\"anchor\" href=\"#时间的产生\">#</a> 时间的产生</h1>\n<h2 id=\"时间的历史\"><a class=\"anchor\" href=\"#时间的历史\">#</a> 时间的历史</h2>\n<p>时间其实有两个内涵：一个是时刻，一个是时间间隔。比如我们通知会议 “明天上午 8 点开会，会期半天”，会议开始时间就是时刻，会期就是时间间隔。</p>\n<h3 id=\"世界时ut\"><a class=\"anchor\" href=\"#世界时ut\">#</a> 世界时（UT）</h3>\n<p><strong>原理</strong>：地球每天都在自转，相对稳定的自转特性使地球成为一个天然的时钟。天空的恒星好比钟面上的刻度，天文学家使用的望远镜或者其他观星仪器好比钟面上的指针，当望远镜对准某颗恒星时，我们就知道了它指示的准确时刻（看上去 “指针” 不动，“钟面” 在转动），这种方法测定的时间叫做 “世界时”。</p>\n<p><strong>定义</strong>：世界时的一天就是太阳两次过头顶的时间间隔，而一秒则是一天的 1/86400。（24 小时乘以 60 分乘以 60 秒）</p>\n<p><strong>问题</strong>：地球自转速率受月球等天体摄动的影响（存在着潮汐现象），以及天文观测的技术能力限制，世界时的测量只能达到毫秒量级，远不能满足人类发展航天技术、精密测地等需求。</p>\n<h3 id=\"原子时at\"><a class=\"anchor\" href=\"#原子时at\">#</a> 原子时（AT）</h3>\n<p><strong>原理</strong>：随着量子力学的发展，实验发现一些分子和原子内部的量子跃迁能够产生周期非常稳定的信号，非常适合时间测量，于是人们就开始研制原子钟，原子钟也成了人类最早应用量子力学研制的测量仪器；</p>\n<p><strong>定义</strong>：使用原子能级跃迁时释放的精确微波讯号来计时。秒长定义为铯 -133 原子基态的两个超精细能级间在零磁场下跃迁辐射 9192631770 周所持续的时间。</p>\n<p><strong>分类</strong>：</p>\n<ul>\n<li>守时型原子钟：守时型原子钟环境适应性强，能够常年连续可靠运行，用于连续产生和记录时间信号。</li>\n<li>基准型原子钟：基准型原子钟则更为精准，通过调整和控制外界电磁场振荡频率，使原子能级跃迁概率始终保持最大，使得外加电磁场振荡频率和原子辐射或吸收电磁波频率一样，从而获得更加精准的时间频率。<br />\n<strong>铯原子喷泉钟</strong>是目前世界上最好的基准型原子钟。</li>\n<li>用于北斗卫星导航的星载钟、仪器中使用的芯片大小的微型原子钟、光钟等等</li>\n</ul>\n<p><strong>问题</strong>：原子钟提供原子时，十分稳定，用于测量时间间隔，但是它没有确切的时刻含义。</p>\n<h3 id=\"协调世界时utc\"><a class=\"anchor\" href=\"#协调世界时utc\">#</a> 协调世界时（UTC）</h3>\n<p>世界时秒长不够稳定，但是它的时刻对应着太阳在天空中的特定位置，反映着地球在空间自转角度的变化，与地极坐标等一起构成地球定向参数，与人们日常生活密切相关。我们熟知的大地测量、天文观测、飞行器跟踪定位，以及战略武器试验等都需要世界时。</p>\n<p>世界时具有重要应用价值，而一些精密物理测量研究则需要稳定的原子时。在应用需求上，这形成了一对矛盾。</p>\n<p>1958 年 1 月 1 日 0 时，科学家把 “原子时” 和 “世界时” 对准，同时开始运行。但随着时间的推移，受潮汐作用等的影响，两者差异越来越大，地球自转速率长期变慢。为了解决这一问题，人们引入另外一种非常重要的时间尺度，叫 “协调世界时”，它利用原子时的均匀性，采用原子时的 “秒长”，而在 “时刻” 上尽量靠近世界时。当它与世界时的偏差接近 0.9 秒时，全世界在同一时间，统一对协调世界时进行加 1 秒或减 1 秒的调整，这就是我们所说的 “闰秒”。</p>\n<p>1972 年，协调世界时正式成为国际标准时间。</p>\n<p>PS：1972 年之前，格林威治时间（GMT）一直是世界时间的标准，在不需要精确到秒的情况下，二者可以视为等同。每年格林尼治天文台会发调时信息，基于 UTC。</p>\n<h2 id=\"全球校准\"><a class=\"anchor\" href=\"#全球校准\">#</a> 全球校准</h2>\n<ol>\n<li>全球不同国家和地区的 90 个守时实验室，有 500 多台守时型原子钟，每天通过卫星进行时间比对。</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlwbS5vcmcvZW4v\">国际权度局</span>根据每个原子钟的性能，利用专门的算法计算得到一个稳定的自由原子时</li>\n<li>通过运行在部分守时实验室的十几台基准型原子钟，其中主要是铯原子喷泉钟，对这个自由原子时进行校准，形成既稳定又准确的国际原子时（TAI）数据。</li>\n<li>根据国际地球自转服务组织提供的世界时测量数据，对国际原子时进行闰秒调整，形成了国际标准时间，即协调世界时。</li>\n<li>正常情况下，国际权度局一个月给出一个结果「例如：Final Report: CCTF-K001.UTC (2023-08)」，用于各国的标准时间与国际进行比对，各国会使用该时间对自身时间进行校准。</li>\n</ol>\n<h2 id=\"北京时间\"><a class=\"anchor\" href=\"#北京时间\">#</a> 北京时间</h2>\n<div class=\"note primary no-icon\">\n<p><strong>即然已经有了国际标准时间，我们为什么还要产生我们自己的北京时间？</strong></p>\n<p>因为国际标准时间不是一个实际的物理信号，是滞后一个月发布的一个纸面数据。而我们需要的是真正能实时应用的实际物理信号。所以北京时间应该是国际标准时间在中国的一个具体实现，是中国版的协调世界时。</p>\n</div>\n<h3 id=\"定义\"><a class=\"anchor\" href=\"#定义\">#</a> 定义</h3>\n<ul>\n<li>\n<p>全世界的时间采用<strong>区时制</strong>，我们按照地理经度把全球划分为<strong> 24 个时区</strong>，每个时区以其<strong>中央经线</strong>所在的地方时作为该时区的标准时间。</p>\n</li>\n<li>\n<p>1949 年 9 月，在中国人民政治协商会议第一届全体会议上，确定了新中国的标准时间是首都北京所在的<strong>东八区区时</strong>，即东经 120 度经线所在的地方。</p>\n</li>\n<li>\n<p>北京市当地时间，与北京时间有一定的差异，因为北京的地理经度为东经 116°21′，并不是东经 120 度；西安的地方时比 “北京时间” 晚了大约 44 分钟。</p>\n</li>\n</ul>\n<h3 id=\"生成\"><a class=\"anchor\" href=\"#生成\">#</a> 生成</h3>\n<ul>\n<li>” 北京时间 “在西安临潼的国家授时中心产生，使用了 40 多台不同性能的守时型原子钟，综合产生连续稳定的原子时，利用铯原子喷泉基准钟对其进行校准。按照国际统一部署对其进行闰秒，与世界时进行协调，形成我国的标准时间。</li>\n<li>我们的原子钟每天参与国际比对，正常情况下，我们应用滞后 1 个月的反馈数据进行校准，这样实现了北京时间与国际标准时间的一致性，专业上称 “时间溯源”。其实，各国标准时间都是这样产生的。</li>\n</ul>\n<h1 id=\"时间的分发\"><a class=\"anchor\" href=\"#时间的分发\">#</a> 时间的分发</h1>\n<h2 id=\"时间换算\"><a class=\"anchor\" href=\"#时间换算\">#</a> 时间换算</h2>\n<ul>\n<li>1 秒 (s) ＝ 1000 毫秒 (ms)</li>\n<li>1 毫秒 (ms) ＝ 1000 微秒 (us)</li>\n<li>1 微秒 (us) ＝ 1000 纳秒 (ns)</li>\n<li>1 纳秒 (ns) ＝ 1000 皮秒 (ps)</li>\n<li>1 皮秒 (ps) = 1000 飞秒 (fs)</li>\n<li>1 飞秒 (fs) = 1000 阿秒 (zs)</li>\n</ul>\n<p>阿秒 (AttoSecond) 是目前实验上能测量的最小时间尺度。</p>\n<h2 id=\"授时方式\"><a class=\"anchor\" href=\"#授时方式\">#</a> 授时方式</h2>\n<p>按授时精度从低到高排序：</p>\n<ol>\n<li>地基短波授时（波长 20-120 米）主要依靠电离层反射来传播时间信号，毫秒量级</li>\n<li>地基长波授时（波长 3 公里），百纳秒量级</li>\n<li>电话 / 网络授时，依靠网络中的时间服务器以及 NTP/PTP 协议授时，百纳秒量级</li>\n<li>北斗卫星系统，10 纳秒量级</li>\n<li>地基光纤授时，百皮秒量级</li>\n<li>空间站时间频率实验系统，10 皮秒量级</li>\n</ol>\n<h2 id=\"高精度授时时间同步技术\"><a class=\"anchor\" href=\"#高精度授时时间同步技术\">#</a> 高精度授时时间同步技术</h2>\n<h3 id=\"卫星授时技术\"><a class=\"anchor\" href=\"#卫星授时技术\">#</a> 卫星授时技术</h3>\n<ul>\n<li>卫星校准：星载原子钟 + 地面站校准</li>\n<li>卫星授时：导航电文中提供了当前时刻所在的 “周数”，这个周数是从北斗或者 GPS 系统的起始时间开始计数的，另外通过计算调制在载波上的伪随机码的信息可以知道当前的周内秒，有了这些信息就可以计算出卫星播报的绝对时间了，利用这个绝对时间来授时。</li>\n</ul>\n<h4 id=\"卫星单向法\"><a class=\"anchor\" href=\"#卫星单向法\">#</a> 卫星单向法</h4>\n<p><img data-src=\"http://imgcdn.gality.cn/blog/6pt7rj.jpg\" alt=\"卫星单向法\" /></p>\n<p>人们平时使用的手机 GPS 授时导航定位、车载 GPS 授时导航定位，以及能接收军码的军用设施授时定位就是卫星单向法的典型应用。这种方法能够满足大多数中低同步精度要求的用户，应用最为广泛。</p>\n<p>GNSS 接收设备能够单向接收导航卫星所播发的<strong>导航电文</strong>。导航电文之中包含<strong>时间基准信息</strong>、<strong>导航卫星星历</strong>和<strong>电文发播时刻</strong>等信息。用户至少需要接收来自<strong>四颗导航卫星</strong>的信号，综合解析这些卫星的报文信息，以此求解三维位置和接收机本地时间四个变量，计算并修正自身时标体系，最终完成本地时定时。如果能收到多于四颗卫星的信号，会提高授时定位精度，并加快计算响应时间。</p>\n<p>假设卫星在<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>t</mi><mi>s</mi></msub></mrow><annotation encoding=\"application/x-tex\">t_s</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76508em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">s</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> (星载原子钟时间) 时刻播发导航电文，用户在<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>t</mi><mi>u</mi></msub></mrow><annotation encoding=\"application/x-tex\">t_u</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76508em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">u</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> (终端设备时间) 时刻接收到该报文，则卫星和设备之间的伪时延为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>δ</mi><msub><mi>t</mi><mrow><mi>s</mi><mi>u</mi></mrow></msub><mo>=</mo><msub><mi>t</mi><mi>u</mi></msub><mo>−</mo><msub><mi>t</mi><mi>s</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\delta t_{su} = t_u-t_s</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03785em;\">δ</span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">s</span><span class=\"mord mathnormal mtight\">u</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.76508em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">u</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.76508em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">s</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，这时接收设备和卫星的时间差值为：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.15999999999999992em\" columnalign=\"center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>Δ</mi><msub><mi>t</mi><mrow><mi>s</mi><mi>u</mi></mrow></msub><mo>=</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><msub><mi>d</mi><mrow><mi>s</mi><mi>u</mi></mrow></msub><mi>c</mi></mfrac></mstyle><mo>−</mo><mi>δ</mi><msub><mi>t</mi><mrow><mi>s</mi><mi>u</mi></mrow></msub><mo>−</mo><msub><mi>ε</mi><mrow><mi>s</mi><mi>u</mi></mrow></msub></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin {array}{c}\n\n\\varDelta t_{su} = \\dfrac{d_{su}}{c} - \\delta t_{su} - \\varepsilon_{su}\n\n\\end {array}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.05744em;vertical-align:-0.77872em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2787200000000003em;\"><span style=\"top:-3.27872em;\"><span class=\"pstrut\" style=\"height:3.3714399999999998em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">Δ</span></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">s</span><span class=\"mord mathnormal mtight\">u</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.37144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">d</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">s</span><span class=\"mord mathnormal mtight\">u</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03785em;\">δ</span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">s</span><span class=\"mord mathnormal mtight\">u</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">ε</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">s</span><span class=\"mord mathnormal mtight\">u</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.77872em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span></span></span></span></span></span></span></p>\n<p>其中<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>d</mi><mrow><mi>s</mi><mi>u</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">d_{su}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">d</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">s</span><span class=\"mord mathnormal mtight\">u</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 是卫星和接收设备之间的距离，由卫星星历可知卫星所在的位置，由四颗卫星的报文可解算得到接收位置的坐标，由两者可以得到<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>d</mi><mrow><mi>s</mi><mi>u</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">d_{su}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">d</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">s</span><span class=\"mord mathnormal mtight\">u</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，c 是光速，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>ε</mi><mrow><mi>s</mi><mi>u</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">\\varepsilon_{su}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">ε</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">s</span><span class=\"mord mathnormal mtight\">u</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 是传输过程中的误差。单向法的误差来源是卫星位置与星历的偏差、电离层层扰动以及接收设备误差等。能接收到多颗卫星信号，并进行长时间平均的十分理想的情况下，该方法可以达到接近 1ns 左右的时标同步精度。</p>\n<h4 id=\"卫星共视法\"><a class=\"anchor\" href=\"#卫星共视法\">#</a> 卫星共视法</h4>\n<p><img data-src=\"http://imgcdn.gality.cn/blog/iq0ctd.png\" alt=\"卫星共视法\" /></p>\n<p>两个地面站 A 和 B 同时观测一枚 GNSS 卫星，卫星在<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>t</mi><mi>s</mi></msub></mrow><annotation encoding=\"application/x-tex\">t_s</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76508em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">s</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 时刻广播发出报文。如果两个地面站分别距离卫星<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>d</mi><mi>A</mi></msub></mrow><annotation encoding=\"application/x-tex\">d_A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">d</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">A</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 和<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>d</mi><mi>B</mi></msub></mrow><annotation encoding=\"application/x-tex\">d_B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">d</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05017em;\">B</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，则传输时间延迟分别是<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>τ</mi><mi>A</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\tau_A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.1132em;\">τ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.1132em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">A</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 和<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>τ</mi><mi>B</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\tau_B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.1132em;\">τ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.1132em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05017em;\">B</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>。A 和 B 两地的电子计数器分别在<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>t</mi><mi>A</mi></msub></mrow><annotation encoding=\"application/x-tex\">t_A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76508em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">A</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 和<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>t</mi><mi>B</mi></msub></mrow><annotation encoding=\"application/x-tex\">t_B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76508em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05017em;\">B</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 接收本地产生的时标信号作为开门信号，接收到来自导航卫星的信号时关门，计数器的测量值如下式所示：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.15999999999999992em\" columnalign=\"center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>T</mi><mi>I</mi><msub><mi>C</mi><mi>A</mi></msub><mo>=</mo><msub><mi>t</mi><mi>A</mi></msub><mo>−</mo><mo stretchy=\"false\">(</mo><msub><mi>t</mi><mi>s</mi></msub><mo>+</mo><msub><mi>τ</mi><mi>A</mi></msub><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>T</mi><mi>I</mi><msub><mi>C</mi><mi>B</mi></msub><mo>=</mo><msub><mi>t</mi><mi>B</mi></msub><mo>−</mo><mo stretchy=\"false\">(</mo><msub><mi>t</mi><mi>s</mi></msub><mo>+</mo><msub><mi>τ</mi><mi>B</mi></msub><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin {array}{c}\n\nTIC_A = t_A - (t_s + \\tau_A) \\\\\n\nTIC_B = t_B - (t_s + \\tau_B)\n\n\\end {array}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.4000000000000004em;vertical-align:-0.9500000000000004em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.45em;\"><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">A</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">A</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">s</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.1132em;\">τ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.1132em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">A</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span><span style=\"top:-2.4099999999999997em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05017em;\">B</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05017em;\">B</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">s</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.1132em;\">τ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.1132em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05017em;\">B</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9500000000000004em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span></span></span></span></span></span></span></p>\n<p>之后可以求得 A 地和 B 地的钟差为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Δ</mi><mi>t</mi><mo>=</mo><msub><mi>t</mi><mi>A</mi></msub><mo>−</mo><msub><mi>t</mi><mi>B</mi></msub><mo>=</mo><mi>T</mi><mi>I</mi><msub><mi>C</mi><mi>A</mi></msub><mo>−</mo><mi>T</mi><mi>I</mi><msub><mi>C</mi><mi>B</mi></msub><mo>+</mo><mo stretchy=\"false\">(</mo><msub><mi>τ</mi><mi>A</mi></msub><mo>−</mo><msub><mi>τ</mi><mi>B</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\varDelta t = t_A - t_B = TIC_A - TIC_B + (\\tau_A - \\tau_B)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathit\">Δ</span></span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.76508em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">A</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.76508em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05017em;\">B</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">A</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05017em;\">B</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.1132em;\">τ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.1132em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">A</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.1132em;\">τ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.1132em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05017em;\">B</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>，上式中消去了卫星星载钟时间参考系内的时刻值 ts，这样卫星星载钟的误差就不会对共视法的同步精度造成影响。</p>\n<h4 id=\"卫星双向时频传递法twstft\"><a class=\"anchor\" href=\"#卫星双向时频传递法twstft\">#</a> 卫星双向时频传递法（TWSTFT）</h4>\n<p><img data-src=\"http://imgcdn.gality.cn/blog/bnsp9s.png\" alt=\"卫星双向时频传递法\" /></p>\n<p>目前较为成熟的卫星时频同步方法，精度较高，应用也最为广泛。BIPM 推荐利用该方法同步协调散布于世界各地的原子钟，各地的原子钟信号经过分析调整之后合成国际原子时 (TAI) 和世界协调时 (UTC)。卫星双向时间频率传递的优点是两地面站间信号的传播路径是近似对称的，这样一来，电离层扰动、对流层扰动、几何路径不对称等<strong>误差的影响大部分将被抵消</strong>。</p>\n<p>以两站点时间同步过程为例：</p>\n<p>两站把时标脉冲信号调制到载波上再向卫星发送，卫星分别将信号转发到目标站。每个站均利用时间间隔计数器测量接收到的对方传来的时间脉冲信号和本站产生的时间脉冲信号之间的差值。如下式所示，A 站和 B 站的计数器测量值分别为：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.15999999999999992em\" columnalign=\"center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>T</mi><mi>I</mi><msub><mi>C</mi><mi>A</mi></msub><mo>=</mo><msub><mi>T</mi><mi>A</mi></msub><mo>−</mo><msub><mi>T</mi><mi>B</mi></msub><mo>+</mo><msub><mi>t</mi><mrow><mi>B</mi><mi>T</mi><mi>X</mi></mrow></msub><mo>+</mo><msub><mi>t</mi><mrow><mi>B</mi><mi>U</mi><mi>P</mi></mrow></msub><mo>+</mo><msub><mi>t</mi><mrow><mi>S</mi><mi>B</mi><mi>A</mi></mrow></msub><mo>+</mo><msub><mi>t</mi><mrow><mi>A</mi><mi>D</mi><mi>o</mi></mrow></msub><mo>+</mo><msub><mi>t</mi><mrow><mi>A</mi><mi>R</mi><mi>X</mi></mrow></msub><mo>+</mo><msub><mi>S</mi><mi>B</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>T</mi><mi>I</mi><msub><mi>C</mi><mi>B</mi></msub><mo>=</mo><msub><mi>T</mi><mi>B</mi></msub><mo>−</mo><msub><mi>T</mi><mi>A</mi></msub><mo>+</mo><msub><mi>t</mi><mrow><mi>A</mi><mi>T</mi><mi>X</mi></mrow></msub><mo>+</mo><msub><mi>t</mi><mrow><mi>A</mi><mi>U</mi><mi>P</mi></mrow></msub><mo>+</mo><msub><mi>t</mi><mrow><mi>S</mi><mi>A</mi><mi>B</mi></mrow></msub><mo>+</mo><msub><mi>t</mi><mrow><mi>B</mi><mi>D</mi><mi>o</mi></mrow></msub><mo>+</mo><msub><mi>t</mi><mrow><mi>B</mi><mi>R</mi><mi>X</mi></mrow></msub><mo>+</mo><msub><mi>S</mi><mi>A</mi></msub></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin {array}{c}\n\nTIC_A = T_A - T_B + t_{BTX} + t_{BUP} + t_{SBA} + t_{ADo} + t_{ARX} + S_B \\\\\n\nTIC_B = T_B - T_A + t_{ATX} + t_{AUP} + t_{SAB} + t_{BDo} + t_{BRX} + S_A\n\n\\end {array}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.4000000000000004em;vertical-align:-0.9500000000000004em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.45em;\"><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">A</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">A</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05017em;\">B</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07847em;\">X</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">U</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">P</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord mathnormal mtight\">A</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">A</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">D</span><span class=\"mord mathnormal mtight\">o</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">A</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07847em;\">X</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05017em;\">B</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-2.4099999999999997em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05017em;\">B</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05017em;\">B</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">A</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">A</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07847em;\">X</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">A</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">U</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">P</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal mtight\">A</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05017em;\">B</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">D</span><span class=\"mord mathnormal mtight\">o</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07847em;\">X</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">A</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9500000000000004em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span></span></span></span></span></span></span></p>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi><mi>I</mi><msub><mi>C</mi><mi>A</mi></msub></mrow><annotation encoding=\"application/x-tex\">TIC_A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">A</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 和<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi><mi>I</mi><msub><mi>C</mi><mi>B</mi></msub></mrow><annotation encoding=\"application/x-tex\">TIC_B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05017em;\">B</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 分别是 A 站和 B 站的时间间隔计数器测量值</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>T</mi><mi>A</mi></msub></mrow><annotation encoding=\"application/x-tex\">T_A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">A</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 和<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>T</mi><mi>B</mi></msub></mrow><annotation encoding=\"application/x-tex\">T_B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05017em;\">B</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 分别是 A 站和 B 站的主钟时间值</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>t</mi><mrow><mi>A</mi><mi>T</mi><mi>X</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">t_{ATX}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76508em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">A</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07847em;\">X</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 和<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>t</mi><mrow><mi>B</mi><mi>T</mi><mi>X</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">t_{BTX}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76508em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07847em;\">X</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 分别是 A 站和 B 站内部的发射时延值；</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>t</mi><mrow><mi>A</mi><mi>U</mi><mi>P</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">t_{AUP}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76508em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">A</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">U</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">P</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 和<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>t</mi><mrow><mi>B</mi><mi>U</mi><mi>P</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">t_{BUP}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76508em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">U</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">P</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 分别是 A 站和 B 站的信号上行传输时延值；</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>t</mi><mrow><mi>S</mi><mi>B</mi><mi>A</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">t_{SBA}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76508em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord mathnormal mtight\">A</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 和<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>t</mi><mrow><mi>S</mi><mi>A</mi><mi>B</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">t_{SAB}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76508em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal mtight\">A</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05017em;\">B</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 分别是 GNSS 卫星将信号由 B 站转到 A 站和由 A 站转到 B 站的转发时延值；</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>t</mi><mrow><mi>A</mi><mi>D</mi><mi>o</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">t_{ADo}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76508em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">A</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">D</span><span class=\"mord mathnormal mtight\">o</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 和<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>t</mi><mrow><mi>B</mi><mi>D</mi><mi>o</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">t_{BDo}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76508em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">D</span><span class=\"mord mathnormal mtight\">o</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 分别是 A 站和 B 站接收卫星信号下行的传输时延值；</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>t</mi><mrow><mi>A</mi><mi>R</mi><mi>X</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">t_{ARX}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76508em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">A</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07847em;\">X</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 和<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>t</mi><mrow><mi>B</mi><mi>R</mi><mi>X</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">t_{BRX}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76508em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07847em;\">X</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 分别是 A 站和 B 站内部的接收时延值；</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>S</mi><mi>A</mi></msub></mrow><annotation encoding=\"application/x-tex\">S_A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">A</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 和<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>S</mi><mi>B</mi></msub></mrow><annotation encoding=\"application/x-tex\">S_B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05017em;\">B</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 分别是 A 站和 B 站的 Sagnac 效应修正量，两者大小严格相等，正负相反。</li>\n</ul>\n<p>A 站和 B 站进行通信，交换两地测得的时间间隔计数器读数值，TICA 和 TICB 两值相减可以求得 A 站和 B 站两地的主钟钟差，如下式所示：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.15999999999999992em\" columnalign=\"center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><msub><mi>T</mi><mi>A</mi></msub><mo>−</mo><msub><mi>T</mi><mi>B</mi></msub><mo>=</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mrow><mi>T</mi><mi>I</mi><msub><mi>C</mi><mi>A</mi></msub><mo>−</mo><mi>T</mi><mi>I</mi><msub><mi>C</mi><mi>B</mi></msub></mrow><mn>2</mn></mfrac></mstyle><mo>+</mo><msub><mi>t</mi><mrow><mi>s</mi><mi>i</mi><mi>t</mi><mi>e</mi></mrow></msub><mo>+</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mrow><msub><mi>t</mi><mrow><mi>S</mi><mi>A</mi><mi>B</mi></mrow></msub><mo>−</mo><msub><mi>t</mi><mrow><mi>S</mi><mi>B</mi><mi>A</mi></mrow></msub></mrow><mn>2</mn></mfrac></mstyle><mo>+</mo><msub><mi>S</mi><mi>A</mi></msub><mo>+</mo><msub><mi>t</mi><mrow><mi>t</mi><mi>r</mi><mi>a</mi><mi>n</mi><mi>s</mi></mrow></msub></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin {array}{c}\n\nT_A - T_B =  \\dfrac{TIC_A - TIC_B}{2} + t_{site} + \\dfrac{t_{SAB} - t_{SBA}}{2} + S_A + t_{trans}\n\n\\end {array}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.04633em;vertical-align:-0.773165em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.273165em;\"><span style=\"top:-3.273165em;\"><span class=\"pstrut\" style=\"height:3.3603300000000003em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">A</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05017em;\">B</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.36033em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">A</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05017em;\">B</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">s</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mord mathnormal mtight\">e</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.29208em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal mtight\">A</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05017em;\">B</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord mathnormal mtight\">A</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">A</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal mtight\">a</span><span class=\"mord mathnormal mtight\">n</span><span class=\"mord mathnormal mtight\">s</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.773165em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span></span></span></span></span></span></span></p>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>t</mi><mrow><mi>s</mi><mi>i</mi><mi>t</mi><mi>e</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">t_{site}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76508em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">s</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mord mathnormal mtight\">e</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 是指两站内部仪器电路引入的发送和接收时延值差，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>t</mi><mrow><mi>s</mi><mi>i</mi><mi>t</mi><mi>e</mi></mrow></msub><mo>=</mo><mfrac><mrow><msub><mi>t</mi><mrow><mi>A</mi><mi>T</mi><mi>X</mi></mrow></msub><mo>−</mo><msub><mi>t</mi><mrow><mi>A</mi><mi>R</mi><mi>X</mi></mrow></msub></mrow><mn>2</mn></mfrac><mo>−</mo><mfrac><mrow><msub><mi>t</mi><mrow><mi>B</mi><mi>T</mi><mi>X</mi></mrow></msub><mo>−</mo><msub><mi>t</mi><mrow><mi>B</mi><mi>R</mi><mi>X</mi></mrow></msub></mrow><mn>2</mn></mfrac></mrow><annotation encoding=\"application/x-tex\">t_{site}={t_{ATX}-t_{ARX} \\over 2} - {t_{BTX}-t_{BRX} \\over 2}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76508em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">s</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mord mathnormal mtight\">e</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1858609999999998em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8408609999999999em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.410305em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3567071428571427em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">A</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07847em;\">X</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.14329285714285717em;\"><span></span></span></span></span></span></span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3567071428571427em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">A</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07847em;\">X</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.14329285714285717em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1858609999999998em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8408609999999999em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.410305em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3567071428571427em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07847em;\">X</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.14329285714285717em;\"><span></span></span></span></span></span></span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3567071428571427em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07847em;\">X</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.14329285714285717em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>t</mi><mrow><mi>t</mi><mi>r</mi><mi>a</mi><mi>n</mi><mi>s</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">t_{trans}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76508em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal mtight\">a</span><span class=\"mord mathnormal mtight\">n</span><span class=\"mord mathnormal mtight\">s</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 是指 A 站和 B 站信号上行下行的时延值差，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>t</mi><mrow><mi>t</mi><mi>r</mi><mi>a</mi><mi>n</mi><mi>s</mi></mrow></msub><mo>=</mo><mfrac><mrow><msub><mi>t</mi><mrow><mi>A</mi><mi>U</mi><mi>P</mi></mrow></msub><mo>−</mo><msub><mi>t</mi><mrow><mi>A</mi><mi>D</mi><mi>o</mi></mrow></msub></mrow><mn>2</mn></mfrac><mo>−</mo><mfrac><mrow><msub><mi>t</mi><mrow><mi>B</mi><mi>U</mi><mi>P</mi></mrow></msub><mo>−</mo><msub><mi>t</mi><mrow><mi>B</mi><mi>D</mi><mi>o</mi></mrow></msub></mrow><mn>2</mn></mfrac></mrow><annotation encoding=\"application/x-tex\">t_{trans}={t_{AUP}-t_{ADo} \\over 2} - {t_{BUP}-t_{BDo} \\over 2}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76508em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal mtight\">a</span><span class=\"mord mathnormal mtight\">n</span><span class=\"mord mathnormal mtight\">s</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1858609999999998em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8408609999999999em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.410305em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3567071428571427em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">A</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">U</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">P</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.14329285714285717em;\"><span></span></span></span></span></span></span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3567071428571427em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">A</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">D</span><span class=\"mord mathnormal mtight\">o</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.14329285714285717em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1858609999999998em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8408609999999999em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.410305em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3567071428571427em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">U</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">P</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.14329285714285717em;\"><span></span></span></span></span></span></span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3567071428571427em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">D</span><span class=\"mord mathnormal mtight\">o</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.14329285714285717em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></li>\n<li>上式中的<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mfrac><mrow><mi>T</mi><mi>I</mi><msub><mi>C</mi><mi>A</mi></msub><mo>−</mo><mi>T</mi><mi>I</mi><msub><mi>C</mi><mi>B</mi></msub></mrow><mn>2</mn></mfrac></mrow><annotation encoding=\"application/x-tex\">{TIC_A -TIC_B \\over 2}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.2336359999999997em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8886359999999999em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.410305em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07847em;\">I</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3567071428571427em;margin-left:-0.07153em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">A</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.14329285714285717em;\"><span></span></span></span></span></span></span><span class=\"mbin mtight\">−</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07847em;\">I</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3567071428571427em;margin-left:-0.07153em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05017em;\">B</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.14329285714285717em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span> 是指两站的时间间隔计数器测量结果的差值</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mfrac><mrow><msub><mi>t</mi><mrow><mi>S</mi><mi>A</mi><mi>B</mi></mrow></msub><mo>−</mo><msub><mi>t</mi><mrow><mi>S</mi><mi>B</mi><mi>A</mi></mrow></msub></mrow><mn>2</mn></mfrac></mrow><annotation encoding=\"application/x-tex\">{t_{SAB} - t_{SBA} \\over 2}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1858609999999998em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8408609999999999em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.410305em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3567071428571427em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal mtight\">A</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05017em;\">B</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.14329285714285717em;\"><span></span></span></span></span></span></span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3567071428571427em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord mathnormal mtight\">A</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.14329285714285717em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span> 是由于卫星转发引起的时延差</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>S</mi><mi>A</mi></msub></mrow><annotation encoding=\"application/x-tex\">S_A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">A</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 表征由于<span class=\"exturl\" data-url=\"aHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvU2FnbmFjX2VmZmVjdA==\"> Sagnac 效应</span>引入的时延差值</li>\n</ul>\n<p>在中继 GNSS 卫星位置对于两地面站比较理想，传输路径比较对称，大气状况较好，并且地面站和卫星相关仪器设施经过了很好的标定时，卫星双向时间频率传递法可以获得亚纳秒量级的精度，相较于单向法有很大的提高。但是该方法要求租用卫星使用时间，且设备操作复杂造价高昂，目前主要应用在科研计量部门。</p>\n<h3 id=\"互联网授时\"><a class=\"anchor\" href=\"#互联网授时\">#</a> 互联网授时</h3>\n<p>主要采用 NTP (Network Time Protocol) 或 PTP (Precision Time Protocol) 协议进行时间同步，其中 NTP 是目前应用最广泛的时间同步协议。</p>\n<h4 id=\"ntp\"><a class=\"anchor\" href=\"#ntp\">#</a> NTP</h4>\n<p>NTP 工作在应用层，协议中时间服务器 A 和客户端 B 之间进行时间同步是利用了梯形时间戳算法，如下图所示：</p>\n<p><img data-src=\"http://imgcdn.gality.cn/blog/hqez23.png\" alt=\"NTP协议梯形时间戳同步算法\" /></p>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>T</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">T_1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 是客户端 B 发送时间查询请求信息的时间 (以客户端 B 自身时间为参照)</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>T</mi><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">T_2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 是时间服务器 A 收到客户端的查询请求信息的时间 (以时间服务器 A 自身时间为参照)</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>T</mi><mn>3</mn></msub></mrow><annotation encoding=\"application/x-tex\">T_3</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 是时间服务器 A 发送回复信息的时间 (以时间服务器 A 自身时间为参照)</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>T</mi><mn>4</mn></msub></mrow><annotation encoding=\"application/x-tex\">T_4</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">4</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 是客户端 B 收到时间服务器 A 回复信息的时间 (以客户端 B 自身时间为参照)。</li>\n</ul>\n<p>而图中的<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>γ</mi></mrow><annotation encoding=\"application/x-tex\">\\gamma</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05556em;\">γ</span></span></span></span> 是请求信息在网络中传输消耗的时间；<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>b</mi><mi>e</mi><mi>t</mi><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">beta</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">a</span></span></span></span> 是回复信息在网络中传输消耗的时间；<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>θ</mi></mrow><annotation encoding=\"application/x-tex\">\\theta</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span></span></span></span> 是时间服务器 A 和客户端 B 之间的时间差。根据图中关系可以得到：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.15999999999999992em\" columnalign=\"center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><msub><mi>T</mi><mn>2</mn></msub><mo>=</mo><msub><mi>T</mi><mn>1</mn></msub><mo>+</mo><mi>θ</mi><mo>+</mo><mi>γ</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><msub><mi>T</mi><mn>4</mn></msub><mo>=</mo><msub><mi>T</mi><mn>3</mn></msub><mo>−</mo><mi>θ</mi><mo>+</mo><mi>β</mi></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin {array}{c}\n\nT_2 = T_1 + \\theta + \\gamma \\\\\n\nT_4 = T_3 - \\theta + \\beta\n\n\\end {array}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.4000000000000004em;vertical-align:-0.9500000000000004em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.45em;\"><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05556em;\">γ</span></span></span><span style=\"top:-2.4099999999999997em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">4</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05278em;\">β</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9500000000000004em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span></span></span></span></span></span></span></p>\n<p>如果假设请求信息和回复信息的网上传播时延相等，即<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>γ</mi><mo>=</mo><mi>β</mi></mrow><annotation encoding=\"application/x-tex\">\\gamma = \\beta</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05556em;\">γ</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05278em;\">β</span></span></span></span>。那么就可以利用<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>θ</mi><mo>=</mo><mo stretchy=\"false\">[</mo><mo stretchy=\"false\">(</mo><msub><mi>T</mi><mn>2</mn></msub><mo>=</mo><msub><mi>T</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo><mo>+</mo><mo stretchy=\"false\">(</mo><msub><mi>T</mi><mn>3</mn></msub><mo>−</mo><msub><mi>T</mi><mn>4</mn></msub><mo stretchy=\"false\">)</mo><mo>+</mo><mo stretchy=\"false\">(</mo><mi>β</mi><mo>−</mo><mi>γ</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">]</mo><mi mathvariant=\"normal\">/</mi><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">\\theta = [(T_2 = T_1) + (T_3 - T_4)+(\\beta - \\gamma)]/2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">4</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05278em;\">β</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05556em;\">γ</span><span class=\"mclose\">)</span><span class=\"mclose\">]</span><span class=\"mord\">/</span><span class=\"mord\">2</span></span></span></span> 算出时间服务器 A 和客户端 B 之间的时间差值。</p>\n<h4 id=\"ptp\"><a class=\"anchor\" href=\"#ptp\">#</a> PTP</h4>\n<p>为满足部分网络中高精度时间同步需求，PTP 在 NTP 协议的基础之上进行了改进，与 NTP 协议纯软件的实现方式相比，PTP 采用软硬件结合的方式，在时间服务器端和客户端的通信接口处加装外围电路模块，用以在物理层打时间戳，精确的标记出报文离开和到达的时刻。该协议将精度提高到了 ns 量级，但由于在应用时需要额外购买加装外围硬件接口电路，成本较高，使用也较复杂，目前只能应用于工业自动化、精密测控、电力系统、通信基站等特定领域，而不能在广域网中直接应用</p>\n<p>PTP 协议在时间同步精度上存在上限瓶颈，对于千兆以太网，串行数据收发器的参考时钟频率为 125 MHz，也就是说即使不考虑任何其它误差因素的影响，PTP 协议的时间同步精度上限是 8ns。</p>\n<p>所以又引入了数字双混频时差法 (DDMTD method,Digital Dual Mixer Time Diﬀerence method) 来对时标脉冲的相位差值进行精细测量，形成了 PTP 协议负责粗测解模糊，数字双混频法负责细测的分工模式，突破了 8ns 的时间同步精度瓶颈。</p>\n<p><img data-src=\"http://imgcdn.gality.cn/blog/9bpmae.png\" alt=\"数字双混频时差法\" /></p>\n<p>通过双混频操作，将高频信号之间的相位差<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">Δ</mi><mi>θ</mi></mrow><annotation encoding=\"application/x-tex\">\\Delta \\theta</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\">Δ</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span></span></span></span> 测量转变成低频信号之间的同样大小角弧度的相位差测量。都换算成相位时间以后，这一相位差就按照高低频信号的频率比例放大了，这样就降低了对测量设备的要求，提高了测量的精度。</p>\n<h3 id=\"光纤时间传输同步技术\"><a class=\"anchor\" href=\"#光纤时间传输同步技术\">#</a> 光纤时间传输同步技术</h3>\n<p>现阶段光频原子钟的不准确度已经达到了<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><msup><mn>0</mn><mrow><mo>−</mo><mn>18</mn></mrow></msup></mrow><annotation encoding=\"application/x-tex\">10^{-18}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\"><span class=\"mord\">0</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">1</span><span class=\"mord mtight\">8</span></span></span></span></span></span></span></span></span></span></span></span> 量级，而基于卫星的频率同步手段最多能达到<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><msup><mn>0</mn><mrow><mo>−</mo><mn>15</mn></mrow></msup></mrow><annotation encoding=\"application/x-tex\">10^{-15}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\"><span class=\"mord\">0</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">1</span><span class=\"mord mtight\">5</span></span></span></span></span></span></span></span></span></span></span></span> 的量级。考虑到光纤链路这一信息传输通道具有抗电磁干扰、传输损耗小等优点，比卫星通信利用的自由空间电磁波通道更加理想。</p>\n<h4 id=\"仿卫星twstft双向传输方案\"><a class=\"anchor\" href=\"#仿卫星twstft双向传输方案\">#</a> 仿卫星 TWSTFT 双向传输方案</h4>\n<p><img data-src=\"http://imgcdn.gality.cn/blog/zo08qd.png\" alt=\"TWSTFT光纤链路时间传输与同步方案\" /></p>\n<p>与卫星上的 TWSTFT 方法相比，光纤上的时间双向传递比对不用考虑卫星转发、多径效应、几何路径不对称、电离层对流层扰动等因素的影响，但也要面对一些光纤链路中出现的新问题。比如两站所使用的激光器波长和偏振的不同会造成传输路径不对称；加入光学器件后，系统的标定难度也会比纯电子微波器件的标定难度更大；光学器件在面对温度波动、磁场变化等外界扰动时也可能更易受影响；卫星传输中的 Sagnac 效应在光纤传输时依然存在等。</p>\n<h4 id=\"光纤链路波动补偿传输方案\"><a class=\"anchor\" href=\"#光纤链路波动补偿传输方案\">#</a> 光纤链路波动补偿传输方案</h4>\n<p>利用补偿模块对光纤链路时延波动进行补偿，以便让复现的时标信号处于稳定状态，再通过标定修正实现接收端时标信号与发射端的钟源信号精准对齐，这就是光纤链路补偿传输方案的基本原理。</p>\n<p><img data-src=\"http://imgcdn.gality.cn/blog/3dhj8h.jpg\" alt=\"光纤链路波动补偿传输方案\" /></p>\n<p>将输入发射端 (Local module) 的标准秒脉冲信号 (PPS) 嵌入 10 MHz 频率信号之后，受到了可变延迟线的延迟调控，延迟后的信号经电 - 光 (E-O) 转换过程后通过环形器被发射到光纤链路中。光信号在接收端 (Remotemodule)，又经过了光 - 电 (O-E) 和电 - 光转换过程，部分接收的信号被解除嵌入状态分离为频率信号和秒脉冲信号输出，另一部分被原路环回发射端。在发射端收到的回传信号经光 - 电转换过程和可变延迟线延迟后，也被重新分离为频率信号和秒脉冲信号。频率信号和发射前的 10 MHz 频率信号被输入鉴相器 (Phase Detector)，鉴相器的输出用作误差信号，经过环路滤波器后反馈控制两条可变延迟线，最终使回传频率信号的相位稳定。</p>\n<p>以上就是常见的授时技术的说明了。</p>\n<h1 id=\"参考\"><a class=\"anchor\" href=\"#参考\">#</a> 参考</h1>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY2FzLmNuL2t4L2twd3ovMjAyMjAzL3QyMDIyMDMyMV80ODI4ODYwLnNodG1s\">https://www.cas.cn/kx/kpwz/202203/t20220321_4828860.shtml</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3poLWhhbnMvJUU1JThFJTlGJUU1JUFEJTkwJUU5JTkwJTk4\">https://zh.wikipedia.org/zh-hans/ 原子鐘</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ueHBpeWFvLm54bmV3cy5uZXQvcW1weS8yMDIzMDMvdDIwMjMwMzI3Xzc4OTk4MjEuaHRtbA==\">https://nxpiyao.nxnews.net/qmpy/202303/t20230327_7899821.html</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC80NTgyOTM0Nzk=\">https://zhuanlan.zhihu.com/p/458293479</span></li>\n</ul>\n",
            "tags": [
                "学习笔记",
                "PNT",
                "授时",
                "学习笔记",
                "PNT"
            ]
        },
        {
            "id": "https://gality.cn/note/nndl/nndl-1/",
            "url": "https://gality.cn/note/nndl/nndl-1/",
            "title": "《神经网络与深度学习》笔记（1）",
            "date_published": "2023-09-28T00:26:21.000Z",
            "content_html": "<div class=\"note info\">\n<p>本系列文章是博主跟着<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ubmRsLmdpdGh1Yi5pby9ubmRsLWJvb2sucGRm\"> github 项目</span>：《神经网络与深度学习》学习的笔记，目标是理解机器学习的原理，了解不同的深度学习模型并最终可以运用到科研生活中。</p>\n<p>本文内容主要是机器学习的绪论部分，包括：人工智能历史、流派，机器学习介绍，表示学习，深度学习，神经网络，常用框架，推荐阅读。</p>\n</div>\n<h1 id=\"绪论\"><a class=\"anchor\" href=\"#绪论\">#</a> 绪论</h1>\n<blockquote>\n<p>一个人在不接触对方的情况下，通过一种特殊的方式，和对方进行一系列的问答。如果在相当长时间内，他无法根据这些问题判断对方是人还是计算机，那么就可以认为这个计算机是智能的。</p>\n<p>—— 阿兰・图灵（Alan Turing）《Computing Machinery and Intelligence 》</p>\n</blockquote>\n<p>人工智能、机器学习、深度学习、神经网络概念辨析：</p>\n<ul>\n<li>人工智能：为机器赋予人的智能，是最广泛的概念。</li>\n<li>机器学习：一种实现人工智能的方法，通过使用算法来解析有限数据、从中学习，然后对真实世界中的未知事件做出决策和预测。</li>\n<li>深度学习：一种机器学习模型，利用深度（3 层以上）的神经网络，将模型处理得更为复杂，从而使模型对数据的理解更加深入。</li>\n<li>神经网络：一种机器学习模型，深度学习可以采用神经网络模型，也可以采用其他模型（例如深度信念网络）；神经网络是深度学习中主要采用的模型。</li>\n</ul>\n<p><img data-src=\"http://imgcdn.gality.cn/blog/vvtz40.png\" alt=\"人工智能概念辨析\" height=\"221\" width=\"578\" /></p>\n<p>如上图所示，深度学习是机器学习的一个子领域，近年来发展十分迅速，从根源讲，深度学习是指一类问题以及解决这类问题的方法。深度学习一般采用的模型比较<strong>复杂</strong>「指样本的原始输入到输出目标之间的数据流经多个线性或非线性组件」，所以会出现<strong>贡献度分配问题</strong>「指不清楚每个组件的贡献度」。而贡献度分配问题在深度学习中是一个很关键的问题，关系到如何学习每个组件中的参数。</p>\n<p><strong>人工神经网络</strong>（Artificial Neural Network，ANN）是一种比较好解决贡献度分配问题的模型，简称为<strong>神经网络</strong>，是一种受人脑神经系统的工作方式启发而构造的数学模型。可以把神经网络看作是由一组参数控制的用于处理信息的复杂函数，其参数可以通过机器学习的方式从数据中自动学习。由于神经网络一般都比较复杂，所以复杂神经网络可以看成一种深度的机器学习，即深度学习。由于神经网络模型可以较容易地解决贡献度分配问题，因此神经网络模型成为深度学习中<strong>主要采用</strong>的模型。</p>\n<h2 id=\"人工智能\"><a class=\"anchor\" href=\"#人工智能\">#</a> 人工智能</h2>\n<p>在 1956 年的达特茅斯会议上，“人工智能” 被正式确定为本研究领域的名称，John McCarthy 提出了人工智能的定义：<strong>人工智能就是要让机器的行为看起来就像是人所表现出的智能行为一样</strong>。</p>\n<p>根据<strong>图灵测试</strong>的理论，如果计算机想通过图灵测试，就必须具有理解语言、学习、记忆、推理、决策等能力，目前人工智能研究的主要领域大体可分为：</p>\n<ul>\n<li><strong>感知</strong>：模拟人的感知能力，对外部刺激（视觉和语音等）进行感知和加工，主要研究领域包括：语音信息处理和计算机视觉等</li>\n<li><strong>学习</strong>：模拟人的学习能力，主要研究如何从样例或从与环境的交互中进行学习，主要研究领域包括监督学习、无监督学习和强化学习等</li>\n<li><strong>认知</strong>：模拟人的认知能力，主要研究领域包括知识表示、自然语言理解、推理、规划、决策等</li>\n</ul>\n<h3 id=\"人工智能发展历史\"><a class=\"anchor\" href=\"#人工智能发展历史\">#</a> 人工智能发展历史</h3>\n<p>人工智能从诞生至今，经历了一次又一次繁荣与低谷，大体上可分为 “推理期”、“知识期”、“学习期”。</p>\n<p><img data-src=\"http://imgcdn.gality.cn/blog/7kkweu.png\" alt=\"人工智能发展史\" /></p>\n<h4 id=\"推理期\"><a class=\"anchor\" href=\"#推理期\">#</a> 推理期</h4>\n<p>早期研究者都通过人类的经验，基于逻辑或者事实归纳出来一些规则，然后通过编写程序来让计算机完成一个任务。这个时期中，研究者开发了一系列的智能系统，例如：几何定理证明器、语言翻译器等。但随着研究的深入，研究者意识到这些推理规则过于简单，对项目难度评估不足，原来的乐观预期受到严重打击，人工智能开始陷入第一次大低谷。</p>\n<h4 id=\"知识期\"><a class=\"anchor\" href=\"#知识期\">#</a> 知识期</h4>\n<p>到了 20 世纪 70 年代，研究者意识到知识对于人工智能系统的重要性。特别是对于一些复杂的任务，需要专家来构建知识库。在这一时期，出现了各种各样的专家系统（Expert System），并在特定的专业领域取得了很多成果。专家系统可以简单的理解为 “知识库 + 推理机”，是一类具有专门知识和经验的计算机智能程序系统。一个专家系统必须具备三要素：</p>\n<ol>\n<li>领域专家级知识</li>\n<li>模拟专家思维</li>\n<li>达到专家水平</li>\n</ol>\n<p>在这一时期，Prolog（Programming in Logic）语言是主要的开发工具，用来建造专家系统、智能知识库以及处理自然语言理解等。</p>\n<h4 id=\"学习期\"><a class=\"anchor\" href=\"#学习期\">#</a> 学习期</h4>\n<p>人类的很多智能行为（比如语言理解、图像理解等），我们很难知道其中的原理，也无法描述这些智能行为背后的 “知识”。因此，我们也很难通过知识和推理的方式来实现这些行为的智能系统。为了解决这类问题，研究者开始将研究重点转向让计算机从数据中自己学习。事实上，“学习” 本身也是一种智能行为。</p>\n<p>从人工智能的萌芽时期开始，就有一些研究者尝试让机器来自动学习，即机器学习（Machine Learning，ML），但是由于各种其他交叉学科还不完善，一直没有很受重视。直到 1980 年后，机器学习在很多领域有出色表现，逐渐成为热门学科。</p>\n<h3 id=\"人工智能流派\"><a class=\"anchor\" href=\"#人工智能流派\">#</a> 人工智能流派</h3>\n<p>由于人们对人类智能的机理依然知之甚少，没有一个通用的理论来指导如何构建一个人工智能系统，因此在研究过程中产生了很多流派，例如有些研究者认为人工智能应该通过研究人类的智能机理来实现一个仿生模拟器，而另外一些学者则认为可以使用其他方法来实现人类的某种智能行为（想想我们制造的飞机不需要想鸟一样扇动翅膀也可以飞起来）。</p>\n<p>各种流派总的来说可以归结为一下两种：</p>\n<ul>\n<li><strong>符号主义</strong>（Symbolism）：又称逻辑主义、心理学派或计算机学派，是指通过分析人类智能的功能，然后用计算机来实现这些功能的一类方法。符号主义有两个基本假设：1）信息可以用符号表示；2）符号可以通过显式的规则（比如逻辑运算）来操作。人类认知的过程可以看做符号操作的过程。在推理期和知识期，符号主义比较盛行，并取得了大量成果。</li>\n<li><strong>连接主义</strong>（Connectionism）：又称仿生学派或生理学派，是认知科学领域中的一类信息处理的方法和理论。在认知科学领域，人类的认知过程可以看作一种信息处理过程。连接主义认为人类的认知过程是由大量简单神经元构成的神经网络中的信息处理过程，而不是符号运算。因此，连接主义模型的主要结构是由大量简单的信息处理单元组成的互联网络，具有非线性、分布式、并行化、局部性计算以及自适应性等特性。</li>\n</ul>\n<p>符号主义方法的一个优点是可解释性，而这也正是连接主义方法的弊端。深度学习的主要模型神经网络就是一种连接主义模型。随着深度学习的发展，越来越多的研究者开始关注如何融合符号主义和连接主义，建立一种高效并且具有可解释性的模型。</p>\n<h2 id=\"机器学习\"><a class=\"anchor\" href=\"#机器学习\">#</a> 机器学习</h2>\n<p><strong>机器学习</strong>（Machine Learning，ML）是指从有限的观测数据中学习（或 “猜测”）出具有一般性的规律，并用这些规律对未知数据进行预测的方法。</p>\n<p>传统机器学习主要关注如何学习一个<strong>预测模型</strong>，一般需要首先将数据表示为一组<strong>特征</strong>（Feature），特征可以是连续的数值、离散符号或其他形式，然后将这些特征输入到预测模型，并输出预测结果。这类学习可以看作是<strong>浅层学习</strong>（Shallow Learning）。浅层学习的一个重要特点是不涉及特征学习，其特征主要靠人工经验或特征转换方法来抽取。</p>\n<p>但实际情况下，不同类型的数据（声音、图像、文本等）的特征构造方式差异很大，很难找到合适的特征表示方式，因此在实际任务中使用机器学习模型一般会包含以下几个步骤：</p>\n<ol>\n<li><strong>数据预处理</strong>：对数据的原始形式进行初步的数据清理（比如去掉一些有缺失特征的样本，或去掉一些冗余的数据特征等）和加工（对数值特征进行缩放和归一化等），并构建成可用于训练机器学习模型的数据集。</li>\n<li><strong>特征提取</strong>：从数据的原始特征中提取一些对特定机器学习任务有用的高质量特征。比如在图像分类中提取边缘、尺度不变特征变换（Scale Invariant Feature Transform，SIFT）特征，在文本分类中去除停用词等。</li>\n<li><strong>特征转换</strong>：对特征进行进一步的加工，比如降维和升维。降维包括特征抽取（Feature Extraction）和特征选择（Feature Selection）两种途径。常用的特征转换方法有主成分分析（Principal Components Analysis，PCA）、 线性判别分析（Linear Discriminant Analysis，LDA）等</li>\n<li><strong>预测</strong>：机器学习的核心部分，学习一个函数并进行预测。</li>\n</ol>\n<p><img data-src=\"http://imgcdn.gality.cn/blog/0gsavr.png\" alt=\"传统机器学习数据处理流程\" /></p>\n<p>上述流程的每一步都是分开处理的，在实际操作中，不同预测模型的准确性相差不大，而前三步中的特征处理对最终结果却有着十分关键的作用。由于特征处理一般都需要人工干预完成，利用人类的经验来选取好的特征，最终提高机器学习系统的性能。因此，很多的机器学习问题变成了<strong>特征工程</strong>（Feature Engineering）问题。开发一个机器学习系统的主要工作量都消耗在了预处理、特征提取以及特征转换上。</p>\n<h2 id=\"表示学习\"><a class=\"anchor\" href=\"#表示学习\">#</a> 表示学习</h2>\n<p>为了提高机器学习系统的准确率，我们就需要将输入信息转换为有效的<strong>特征</strong>，或者更一般性地称为<strong>表示</strong>（Representation）。如果有一种算法可以自动地学习出有效的特征，并提高最终机器学习模型的性能，那么这种学习就可以叫作<strong>表示学习</strong>（Representation Learning）。</p>\n<p>表示学习的关键是解决<strong>语义鸿沟</strong>（Semantic Gap）问题；<strong>语义鸿沟</strong>问题是指输入数据的底层特征和高层语义信息之间的不一致性和差异性。比如给一些关于 “车” 的照片，其高层含义（车）与底层特征（照片中的各个像素点）之间有极大的差异。我们对于这些图片的理解是站在比较抽象的高层语义概念上的。如果模型直接建立在底层特征上，会导致对预测模型的能力要求过高，这时，如果我们有一个好的表示，可以在某种程度上反映出数据的高层语义特征，那么我们就能相对容易的构建后续的机器学习模型。</p>\n<p>在表示学习中，有两个<strong>核心问题</strong>：</p>\n<ol>\n<li>什么是一个好的表示</li>\n<li>如何学习到好的表示</li>\n</ol>\n<h3 id=\"局部表示与分布式表示\"><a class=\"anchor\" href=\"#局部表示与分布式表示\">#</a> 局部表示与分布式表示</h3>\n<p>「<strong>好的表示</strong>」是一个非常主观的概念，没有一个明确的标准。但一般而言，一个好的表示具有以下几个优点：</p>\n<ol>\n<li>一个好的表示应该具有很强的表示能力，即同样大小的向量可以表示更多信息。</li>\n<li>一个好的表示应该使后续的学习任务变得简单，即需要包含更高层的语义信息。</li>\n<li>一个好的表示应该具有一般性，是任务或领域独立的。虽然目前的大部分表示学习方法还是基于某个任务来学习，但我们期望其学到的表示可以比较容易地迁移到其他任务上。</li>\n</ol>\n<p>在机器学习中，我们常有两种方式来表示特征：</p>\n<ul>\n<li><strong>局部表示</strong>（Local Rep-resentation）</li>\n<li><strong>分布式表示</strong>（Distributed Representation）</li>\n</ul>\n<p>以颜色为例，在语言中，我们可以通过不同的词来形容颜色：“红”、“中国红”、“正红” 等等。在计算机中，颜色主要有两种表示方式</p>\n<h4 id=\"局部表示\"><a class=\"anchor\" href=\"#局部表示\">#</a> 局部表示</h4>\n<p>又称为<strong>离散表示</strong>或<strong>符号表示</strong>，经常可以表示为<strong> one-hot</strong> 向量「有且只有一个元素为 1，其余元素都为 0 的向量」的形式。逻辑上是以不同的名字来命名不同的颜色，假设所有颜色的名字构成一个词表 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>v</mi></mrow><annotation encoding=\"application/x-tex\">v</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span></span></span></span>，词表大小为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∣</mi><mi>v</mi><mi mathvariant=\"normal\">∣</mi></mrow><annotation encoding=\"application/x-tex\">|v|</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord\">∣</span></span></span></span>，我们可以用一个 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∣</mi><mi>v</mi><mi mathvariant=\"normal\">∣</mi></mrow><annotation encoding=\"application/x-tex\">|v|</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord\">∣</span></span></span></span> 维的 one-hot 向量来表示每一种颜色，第 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 种颜色对应的 one-hot 向量中，第 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 维的值为 1，其他都为 0。</p>\n<p><strong>优点</strong>：</p>\n<ol>\n<li>这种离散的表示方式具有很好的解释性，有利于人工归纳和总结特征，并通过特征组合进行高效的特征工程</li>\n<li>通过多种特征组合得到的表示向量通常是稀疏的二值向量，当用于线性模型时计算效率非常高</li>\n</ol>\n<p><strong>缺点</strong>：</p>\n<ol>\n<li>one-hot 向量的维数很高，且不能扩展。如果有一种新的颜色，我们就需要增加一维来表示</li>\n<li>不同颜色之间的相似度都为 0，即我们无法知道 “红色” 和 “中国红” 的相似度要高于 “红色” 和 “黑色” 的相似度</li>\n</ol>\n<h4 id=\"分布式表示\"><a class=\"anchor\" href=\"#分布式表示\">#</a> 分布式表示</h4>\n<p>其实就是 “分散式表示”，将一种颜色的语义分散到语义空间中的不同基向量上。其实就是我们熟悉的用 RGB 值来表示颜色，不同颜色对应到 R、G、B 三维空间中一个点。分布式表示通常可以表示为低维的稠密向量。</p>\n<p>和局部表示相比，分布式表示的表示能力要强很多，分布式表示的向量维度一般都比较低。我们只需要用一个三维的稠密向量就可以表示所有颜色。并且，分布式表示也很容易表示新的颜色名。此外，不同颜色之间的相似度也很容易计算。</p>\n<p><img data-src=\"http://imgcdn.gality.cn/blog/0vymkm.png\" alt=\"局部表示和分布式表示\" height=\"200\" width=\"450\" /></p>\n<p>通过分布式表示，可以将高维的局部表示空间映射到一个非常低维的分布式表示空间。在这个地位空间中，每个特征不再是坐标轴上的点，而是分散在整个低维空间中。在机器学习中，这个过程称为<strong>嵌入</strong>（Embedding）。</p>\n<p>嵌入通常指将一个度量空间中的一些对象映射到另一个低维的度量空间中，并尽可能保持不同对象之间的拓扑关系。比如自然语言中词的分布式表示，也经常叫作词嵌入。</p>\n<h3 id=\"表示学习-2\"><a class=\"anchor\" href=\"#表示学习-2\">#</a> 表示 “学习”</h3>\n<p>「<strong>学到好的表示</strong>」通常需要从底层特征开始经过多步非线性转换才能得到。深层结构的优点是可以增加特征的重用性，从而指数级地增加表示能力。因此，表示学习的关键是构建具有一定深度的多层次特征表示。在传统机器学习中，由于特征的学习和最终预测模型的学习是分开进行的，所以学习到的特征不一定可以提升最终模型的性能。</p>\n<h2 id=\"深度学习\"><a class=\"anchor\" href=\"#深度学习\">#</a> 深度学习</h2>\n<p>为了学习一种好的表示，需要构建具有一定 “深度” 的模型，并通过学习算法来让模型自动学习出好的特征表示（从底层特征，到中层特征，再到高层特征），从而最终提升预测模型的准确率。所谓 “深度” 是指原始数据进行非线性特征转换的次数。如果把一个表示学习系统看作一个有向图结构，深度也可以看作从输入节点到输出节点所经过的最长路径的长度。由于学习过程是自动的，所以可以避免 “特征工程”，即无需提供人为标注的特征数据。</p>\n<p><img data-src=\"http://imgcdn.gality.cn/blog/5gu4eo.png\" alt=\"深度学习数据处理流程\" /></p>\n<p>深度学习是将原始的数据特征通过多步的特征转换得到一种特征表示，并进一步输入到预测函数得到最终结果。由于整体是黑盒的过程（又称<strong>端到端学习</strong>），所以需要解决 “<strong>贡献度分配问题</strong>”，但是这非常困难。从某种意义上讲，深度学习可以看作一种<strong>强化学习</strong>（Reinforcement Learning，RL），每个内部组件并不能直接得到监督信息，需要通过整个模型的最终监督信息（奖励）得到，并且有一定的延时性。</p>\n<p>目前，深度学习采用的模型主要是神经网络模型，其主要原因是神经网络模型可以使用误差反向传播算法，从而可以比较好地解决贡献度分配问题。只要是超过一层的神经网络都会存在贡献度分配问题，因此可以将超过一层的神经网络都看作深度学习模型。随着深度学习的快速发展，模型深度也从早期的 5 ∼ 10 层增加到目前的数百层。随着模型深度的不断增加，其特征表示的能力也越来越强，从而使后续的预测更加容易。</p>\n<h2 id=\"神经网络\"><a class=\"anchor\" href=\"#神经网络\">#</a> 神经网络</h2>\n<p>随着神经科学、认知科学的发展，我们逐渐知道人类的智能行为都和大脑活动有关。人类大脑是一个可以产生意识、思想和情感的器官。受到人脑神经系统的启发，早期的神经科学家构造了一种模仿人脑神经系统的数学模型，称为<strong>人工神经网络</strong>，简称<strong>神经网络</strong>。在机器学习领域，神经网络是指由很多<strong>人工神经元</strong>构成的网络结构模型，这些人工神经元之间的<strong>连接强度</strong>是可学习的参数。</p>\n<h3 id=\"人脑神经网络\"><a class=\"anchor\" href=\"#人脑神经网络\">#</a> 人脑神经网络</h3>\n<p>「抢救下要死未死的高中生物」人脑是人体最复杂的器官，由神经元、神经胶质细胞、神经干细胞和血管组成。其中，神经元（Neuron），也叫神经细胞（Nerve Cell），是携带和传输信息的细胞，是人脑神经系统中最基本的单元。人脑中包含近 860 亿个神经元，每个神经元有上千个突触和其他神经元相连接。这些神经元和它们之间的连接形成巨大的复杂网络，其中神经连接的总长度可达数千公里。我们人造的复杂网络，比如全球的计算机网络，和大脑神经网络相比要 “简单” 得多。</p>\n<p>典型的神经元结构大致可分为<strong>细胞体</strong>和细胞突起：</p>\n<ol>\n<li><strong>细胞体</strong>（Soma）中的神经细胞膜上有各种受体和离子通道，胞膜的受体可与相应的化学物质神经递质结合，引起离子通透性及膜内外电位差发生改变，产生相应的生理活动：兴奋或抑制</li>\n<li><strong>细胞突起</strong>是由细胞体延伸出来的细长部分，又可分为树突和轴突\n<ul>\n<li>树突（Dendrite）可以接收刺激并将兴奋传入细胞体。每个神经元可以有一或多个树突</li>\n<li>轴突（Axon）可以把自身的兴奋状态从胞体传送到另一个神经元或其他组织。每个神经元只有一个轴突</li>\n</ul>\n</li>\n</ol>\n<p>神经元可以接收其他神经元的信息，也可以发送信息给其他神经元。神经元之间没有物理连接，两个 “连接” 的神经元之间留有 20 纳米左右的缝隙，并靠<strong>突触</strong>（Synapse）进行互联来传递信息。一个神经元可被视为一种只有两种状态的细胞：<strong>兴奋</strong>和<strong>抑制</strong>。神经元的状态取决<br />\n于从其他的神经细胞收到的输入信号量，以及突触的强度（抑制或加强）。当信号量总和超过了某个阈值时，细胞体就会兴奋，产生电脉冲。电脉冲沿着轴突并通过突触传递到其他神经元。一个典型的神经元结构如下图所示。</p>\n<p><img data-src=\"http://imgcdn.gality.cn/blog/tad23p.png\" alt=\"典型神经元结构\" height=\"221\" width=\"412\" /></p>\n<p>人的智力不完全由遗传决定，大部份来自生活经验，即人脑神经网路就是一个具有学习能力的系统，人脑的学习能力是通过改变神经元之间的突触强度来实现的，不同神经元之前的突触有强有弱，通过学习（训练）可以改变强度，进而实现我们所谓的 “学习”。</p>\n<h3 id=\"人工神经网络\"><a class=\"anchor\" href=\"#人工神经网络\">#</a> 人工神经网络</h3>\n<p><strong>人工神经网络</strong>是为模拟人脑神经网络而设计的一种计算模型，它从结构、实现机理和功能上模拟人脑神经网络。人工神经网络与生物神经元类似，由多个节点（人工神经元）互相连接而成，可以用来对数据之间的复杂关系进行建模。不同节点之间的连接被赋予了不同的权重，每个权重代表了一个节点对另一个节点的影响大小。每个节点代表一种特定函数，来自其他节点的信息经过其相应的权重综合计算，输入到一个激活函数中并得到一个新的活性值（兴奋或抑制）。从系统观点看，人工神经元网络是由大量神经元通过极其丰富和完善的连接而构成的自适应非线性动态系统。</p>\n<p>构造人工神经网络很简单，但是如何实现网络的学习并不容易，早期的神经网络模型并不具备学习能力（早期神经网络并不是用于解决机器学习问题的）。首个可学习的人工神经网络是<strong>赫布网络</strong>，采用一种基于<strong>赫布规则</strong>「」的无监督学习方法。<strong>感知器</strong>是最早的具有机器学习思想的神经网络，但其学习方法无法扩展到多层的神经网络上。 直到 1980 年左右，<strong>反向传播算法</strong>才有效地解决了多层神经网络的学习问题，并成为最为流行的神经网络学习算法。</p>\n<blockquote>\n<p>” 赫布规则 “或” 赫布理论 “：</p>\n<p>当神经元 A 的一个轴突和神经元 B 很近，足以对它产生影响，并且持续地、重复地参与了对神经元 B 的兴奋，那么在这两个神经元或其中之一会发生某种生长过程或新陈代谢变化，以致神经元 A 作为能使神经元 B 兴奋的细胞之一，它的效能加强了。</p>\n</blockquote>\n<p>由于神经网络可以用作一个通用的函数逼近器（一个两层的神经网络可以逼近任意的函数），因此我们可以将人工神经网络看作一个可学习的函数，并将其应用到机器学习中。理论上，只要有足够的训练数据和神经元数量，人工神经网络就可以学到很多复杂的函数。我们可以把一个人工神经网络塑造复杂函数的能力称为<strong>网络容量</strong>（Network Capacity），这与可以被储存在网络中的信息的复杂度以及数量相关。</p>\n<h3 id=\"神经网络的发展历史\"><a class=\"anchor\" href=\"#神经网络的发展历史\">#</a> 神经网络的发展历史</h3>\n<p>神经网络的发展大致经过五个阶段</p>\n<p><strong>第一阶段：模型提出</strong></p>\n<p>1943～1969 年，神经网络发展的第一个高潮期，提出了许多神经元模型和学习规则，包括<strong> MP 模型</strong>、<strong>感知机</strong>等。在这一时期，神经网络以其独特的结构和处理信息的方法，在许多实际应用领域（自动控制、模式识别等）中取得了显著的成效。</p>\n<p><strong>第二阶段：冰河期</strong></p>\n<p>1969 年～1983 年，是神经网络发展的第一个低谷期。在此期间，神经网络的研究处于长年停滞及低潮状态。当时的神经网络有两个关键缺陷：</p>\n<ol>\n<li>感知机无法处理 “异或” 回路问题</li>\n<li>当时的计算机无法支持处理大型神经网络所需要的算力</li>\n</ol>\n<p>但是这个时期也提出很多有用的模型或算法，如：<strong>反向传播算法</strong>、新知机等</p>\n<p><strong>第三阶段：反向传播算法引起的复兴</strong></p>\n<p>1983 年～1995 年，是神经网络发展的第二个高潮期，这个时期中，反向传播算法重新激发了人们对神经网络的兴趣。<strong>Hopfield 网络</strong>在旅行商问题上取得了当时的最好结果，随后又在 Hopfield 网络的基础上提出了随机化版本的网络 “<strong>玻尔兹曼机</strong>”。</p>\n<p>20 世纪 80 年代中期，连接主义模型开始流行，即<strong>分布式并行处理</strong>（Parallel Distributed Pro-cessing，PDP）模型。反向传播算法逐渐成为 PDP 模型的主要学习算法，通过引入该算法的卷机神经网络在手写体数字识别上取得了很大成功。反向传播算法是迄今为止最为成功的网络学习算法，目前深度学习中主要使用的自动微可以看作是反向传播算法的一种扩展。</p>\n<p>但是，<strong>梯度消失问题</strong>（Vanishing Gradient Problem）阻碍神经网络的进一步发展。</p>\n<p><strong>第四阶段：流行度降低</strong></p>\n<p>1995 年～2006 年，在此期间，支持向量机和其他更简单的方法（例如线性分类器）在机器学习领域的流行度逐渐超过了神经网络。原因在于：</p>\n<ol>\n<li>当时算力不足以支撑复杂的神经网络</li>\n<li>神经网络理论基础不清晰、优化困难、可解释性差</li>\n</ol>\n<p><strong>第五阶段：深度学习的崛起</strong></p>\n<p>2006 年开始至今，在这一时期研究者逐渐掌握了训练深层神经网络的方法，使得神经网络重新崛起。随着大规模并行计算以及 GPU 设备的普及，计算机的计算能力得以大幅提高。此外，可供机器学习的数据规模也越来越大。在强大的计算能力和海量的数据规模支持下，以神经网络为基础的<strong>深度学习</strong>迅速崛起，在语音识别和图像分类等任务上取得巨大成功。</p>\n<h2 id=\"知识体系图\"><a class=\"anchor\" href=\"#知识体系图\">#</a> 知识体系图</h2>\n<p>主要对神经网络和深度学习所涉及的知识提出一个较全面的基础性介绍，可以分为三大块：机器学习、神经网络、概率图模型。</p>\n<p><img data-src=\"http://imgcdn.gality.cn/blog/crks8k.png\" alt=\"知识体系图\" height=\"400\" width=\"678\" /></p>\n<h2 id=\"常用的深度学习框架\"><a class=\"anchor\" href=\"#常用的深度学习框架\">#</a> 常用的深度学习框架</h2>\n<p>在深度学习中，一般通过误差反向传播算法来进行参数学习。采用手工方式来计算梯度再写代码实现的方式会非常低效，并且容易出错。此外，深度学习模型需要的计算机资源比较多，一般需要在 CPU 和 GPU 之间不断进行切换，开发难度也比较大。因此，一些支持自动梯度计算、无缝 CPU 和 GPU 切换等功能的深度学习框架就应运而生。比较有代表性的框架包括：Theano、Caffe、TensorFlow、Pytorch、飞桨（PaddlePaddle）、Chainer 和 MXNet 等</p>\n<ol>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5kZWVwbGVhcm5pbmcubmV0L3NvZnR3YXJlL3RoZWFubw==\">Theano</span>：<s>由蒙特利尔大学的 Python 工具包，用来高效地定义、优化和计算张量数据的数学表达式。Theano 可以透明地使用 GPU 和高效的符号微分</s>「项目已停止维护」</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2NhZmZlLmJlcmtlbGV5dmlzaW9uLm9yZy8=\">Caffe</span>：<s>由加州大学伯克利分校开发的针对卷积神经网络的计算框架，主要用于计算机视觉。Caffe 用 C++ 和 Python 实现，但可以通过配置文件来实现所要的网络结构，不需要编码</s>「已被并入 PyTorch 中」</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudGVuc29yZmxvdy5vcmcv\">TensorFlow</span>：由 Google 公司开发的深度学习框架，可以在任意具备 CPU 或者 GPU 的设备上运行。TensorFlow 的计算过程使用数据流图来表示。TensorFlow 的名字来源于其计算过程中的操作对象为多维数组，即张量（Tensor）。TensorFlow 1.0 版本采用静态计算图，2.0 版本之后也支持动态计算图。</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3B5dG9yY2gub3JnLw==\">PyTorch</span>：由 Facebook、NVIDIA、Twitter 等公司开发维护的深度学习框架，其前身为 Lua 语言的 Torch3。PyTorch 也是基于动态计算图的框架，在需要动态改变神经网络结构的任务中有着明显的优势。</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3BhZGRsZXBhZGRsZS5vcmcv\">飞桨（PaddlePaddle）</span>4：由百度开发的一个高效和可扩展的深度学习框架，同时支持动态图和静态图。飞桨提供强大的深度学习并行技术，可以同时支持稠密参数和稀疏参数场景的超大规模深度学习并行训练，支持千亿规模参数和数百个节点的高效并行训练。</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubWluZHNwb3JlLmNuLw==\">MindSpore</span>：由华为开发的一种适用于端边云场景的新型深度学习训练 / 推理框架。MindSpore 为 Ascend AI 处理器提供原生支持，以及软硬件协同优化</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9teG5ldC5hcGFjaGUub3JnLw==\">Chainer</span>：一个最早采用动态计算图的深度学习框架，其核心开发团队为来自日本的一家机器学习创业公司 Preferred Networks。和 Tensorflow、Theano、Caffe 等框架使用的静态计算图相比，动态计算图可以在运行时动态地构建计算图，因此非常适合进行一些复杂的决策或推理任务。</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9teG5ldC5hcGFjaGUub3JnLw==\">MXNet</span>：由亚马逊、华盛顿大学和卡内基・梅隆大学等开发维护的深度学习框架。MXNet 支持混合使用符号和命令式编程来最大化效率和生产率，并可以有效地扩展到多个 GPU 和多台机器。</li>\n</ol>\n<p>在这些基础框架上，还有一些建立在这些框架之上的高度模块化的神经网络库，其中比较有名的模块化神经网络框架有：</p>\n<ol>\n<li>基于 TensorFlow 和 Theano 的 <span class=\"exturl\" data-url=\"aHR0cDovL2tlcmFzLmlvLw==\">Keras</span></li>\n<li>基于 Theano 的 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0xhc2FnbmUvTGFzYWduZQ==\">Lasagne</span></li>\n<li>面向图结构数据的 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZGdsLmFpLw==\">DGL</span></li>\n</ol>\n<h2 id=\"推荐阅读\"><a class=\"anchor\" href=\"#推荐阅读\">#</a> 推荐阅读</h2>\n<ol>\n<li>斯坦福大学的 <span class=\"exturl\" data-url=\"aHR0cDovL2NzMjMxbi5zdGFuZm9yZC5lZHUv\">CS231n</span> 和 <span class=\"exturl\" data-url=\"aHR0cDovL3dlYi5zdGFuZm9yZC5lZHUvY2xhc3MvY3MyMjRuLw==\">CS224n</span> 是两门非常好的深度学习入门课程，分别从计算机视觉和自然语言处理两个角度来讲授深度学习的基础知识和最新进展。</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5pY2xyLmNjLw==\">国际表示学习会议</span>（International Conference on Learning Representations，ICLR）：主要聚焦于深度学习。</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9uaXBzLmNjLw==\">神经信息处理系统年会</span>（Annual Conference on Neural Information Processing Systems，NeurIPS）：交叉学科会议，但偏重于机器学习。主要包括神经信息处理、统计方法、学习理论以及应用等。</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9pY21sLmNjLw==\">国际机器学习会议</span>（International Conference on Machine Learning，ICML）：机器学习顶级会议，深度学习作为近年来的热点，也占据了 ICML 的很大比例。</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaWpjYWkub3JnLw==\">国际人工智能联合会议</span>（International Joint Conference on Artificial Intelligence，IJCAI）：人工智能领域最顶尖的综合性会议。历史悠久，从 1969 年开始举办。</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5hYWFpLm9yZy8=\">美国人工智能协会年会</span>（AAAI Conference on Artificial Intelligence，AAAI）：人工智能领域的顶级会议，每年二月份左右召开，地点一般在北美。</li>\n</ol>\n<p>另外，人工智能的很多子领域也都有非常好的专业学术会议。在计算机视觉领域，有计算机视觉与模式识别大会（IEEE Conference on Computer Vision and Pattern Recognition，CVPR）和国际计算机视觉会议（International Comference on Computer Vision，ICCV）。在自然语言处理领域，有计算语言学年会（Annual Meeting of the Association for Computational Linguistics，ACL）和自然语言处理实证方法大会（Conference on Empirical Methods in Natural Language Processing，EMNLP）等。</p>\n",
            "tags": [
                "学习笔记",
                "神经网络与深度学习",
                "系列长篇",
                "学习笔记",
                "机器学习",
                "深度学习",
                "神经网络"
            ]
        },
        {
            "id": "https://gality.cn/os/04-32bit-print/",
            "url": "https://gality.cn/os/04-32bit-print/",
            "title": "04-在保护模式下打印",
            "date_published": "2023-09-21T12:32:21.000Z",
            "content_html": "<div class=\"note info\">\n<p>本章是操作系统从 0 到 1 系列的第五篇文章，暂时喘口气，来讲解下怎么在 32 位模式下向屏幕打印字符串，方便我们打印各种信息，增加成就感。</p>\n</div>\n<div class=\"note warning\">\n<p><em>Concepts you may want to Google beforehand: 32-bit protected mode, VGA, video memory</em></p>\n</div>\n<h1 id=\"背景\"><a class=\"anchor\" href=\"#背景\">#</a> 背景</h1>\n<p>当系统进入到 32 位模式后，我们可以使用 32 位寄存器、更大的内存空间、保护模式、虚拟内存等高级功能，但同样的，我们也失去了通过中断直接调用 BIOS 的能力，所以前几章中使用的 <code>print</code>  函数就无法继续使用了（如果你细心的话，也可以注意到，在上一章末尾的 <code>main</code>  程序中，在进入 32 位模式后，我们就没有打印字符了，只是通过 <code>switch_to_pm</code>  函数后的打印来确定程序是否出错）。</p>\n<p>这一点还是很难受的，所以本章我们就来写一个 32 位模式下的打印函数。</p>\n<h1 id=\"原理\"><a class=\"anchor\" href=\"#原理\">#</a> 原理</h1>\n<p>在 32 位下打印信息需要用到<span class=\"exturl\" data-url=\"aHR0cHM6Ly93aWtpLm9zZGV2Lm9yZy9UZXh0X21vZGU=\"> VGA Text Mode</span>，一种极其古老的显示模式，打印的原理简单来说就是用 <code>32KB</code>  的内存来控制一个 <code>25行 * 80列</code> 的字符的屏幕终端，回忆一下第三章中出现的图：</p>\n<p><img data-src=\"http://imgcdn.gality.cn/blog/h04dzu.png\" alt=\"实模式下的内存布局\" /></p>\n<p>看红框标出来的，答案就是利用 <code>0xB8000 ~ 0xBFFFF</code>  这 <code>32KB</code>  的空间，可以通过访问并修改这一段内存的值来控制屏幕的显示。</p>\n<p>屏幕上有  <code>25 * 80 = 2000</code>  个字符，每个字符由  <code>2 byte</code>  控制，这样一屏幕就占用  <code>4000  bytes</code> ，所以 32 KB 最大容纳大约 8 屏的内容。为了简单起见，只控制第一屏幕的数据，超出部分就不予显示，也不支持上下翻屏等功能。</p>\n<h2 id=\"字符显示\"><a class=\"anchor\" href=\"#字符显示\">#</a> 字符显示</h2>\n<p>一个字符由 <code>2 byte</code>  来控制，高 <code>1 byte</code>  控制字符颜色（前景色 / 背景色 / 闪烁等），低 <code>1 byte</code>  为字符对应的 <code>Ascii</code>  码，更加具体可以参考<span class=\"exturl\" data-url=\"aHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvVkdBX3RleHRfbW9kZQ==\"> Wiki 百科</span>，这里给出其中的一个图。</p>\n<p><img data-src=\"http://imgcdn.gality.cn/blog/sv2gp5.png\" alt=\"VGA Text Mode Char\" /></p>\n<p>3 个 bit 可以显示 8 种颜色</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">颜色</th>\n<th style=\"text-align:center\">bit 值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">黑</td>\n<td style=\"text-align:center\">0</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">蓝</td>\n<td style=\"text-align:center\">1</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">绿</td>\n<td style=\"text-align:center\">2</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">青</td>\n<td style=\"text-align:center\">3</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">红</td>\n<td style=\"text-align:center\">4</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">粉</td>\n<td style=\"text-align:center\">5</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">粽</td>\n<td style=\"text-align:center\">6</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">白</td>\n<td style=\"text-align:center\">7</td>\n</tr>\n</tbody>\n</table>\n<p>其他控制位是类似的，就不再赘述了。</p>\n<h1 id=\"实现\"><a class=\"anchor\" href=\"#实现\">#</a> 实现</h1>\n<p>由于是直接读写内存，实现的思想其实就是之前的 <code>print</code>  的思想，只不过会更简单一些，我们可以利用 <code>ax</code>  来暂存要打印的字符 (2 bytes)，用 <code>ebx</code>  存储需要打印的字符串地址，用 <code>edx</code>  指向 VGA 的地址。代码非常简单，自己试试实现吧！</p>\n<details class=\"info\"><summary>32bit-print.asm</summary><div>\n<figure class=\"highlight nasm\"><figcaption data-lang=\"NASM\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">[</span>bits <span class=\"token number\">32</span><span class=\"token operator\">]</span> <span class=\"token comment\">; using 32-bit protected mode</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">; this is how constants are defined</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>VIDEO_MEMORY equ <span class=\"token number\">0xb8000</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>WHITE_ON_BLACK equ <span class=\"token number\">0x0f</span> <span class=\"token comment\">; the color byte for each character</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token label function\">print_string_pm:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    pusha</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    mov <span class=\"token register variable\">edx</span>, VIDEO_MEMORY</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token label function\">print_string_pm_loop:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    mov <span class=\"token register variable\">al</span>, <span class=\"token operator\">[</span><span class=\"token register variable\">ebx</span><span class=\"token operator\">]</span> <span class=\"token comment\">; [ebx] is the address of our character</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    mov <span class=\"token register variable\">ah</span>, WHITE_ON_BLACK <span class=\"token comment\">; control char color</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    cmp <span class=\"token register variable\">al</span>, <span class=\"token number\">0</span> <span class=\"token comment\">; check if end of string</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    je print_string_pm_done</pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    mov <span class=\"token operator\">[</span><span class=\"token register variable\">edx</span><span class=\"token operator\">]</span>, <span class=\"token register variable\">ax</span> <span class=\"token comment\">; store character + attribute in video memory</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    add <span class=\"token register variable\">ebx</span>, <span class=\"token number\">1</span> <span class=\"token comment\">; next char</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    add <span class=\"token register variable\">edx</span>, <span class=\"token number\">2</span> <span class=\"token comment\">; next video memory position</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    jmp print_string_pm_loop</pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token label function\">print_string_pm_done:</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    popa</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    ret</pre></td></tr></table></figure></div></details>\n<p>「一定要尝试自己将文字颜色换一换试试哟！」</p>\n<p>然后我们可以对上一章中的 <code>main</code>  代码中加入一下 <code>print_string_pm</code>  函数来试试吧</p>\n<details class=\"info\"><summary>32bit-main.asm</summary><div>\n<figure class=\"highlight nasm\"><figcaption data-lang=\"NASM\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">[</span>org <span class=\"token number\">0x7c00</span><span class=\"token operator\">]</span> <span class=\"token comment\">; bootloader offset</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    mov <span class=\"token register variable\">bp</span>, <span class=\"token number\">0x9000</span> <span class=\"token comment\">; set the stack</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    mov <span class=\"token register variable\">sp</span>, <span class=\"token register variable\">bp</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    mov <span class=\"token register variable\">bx</span>, MSG_REAL_MODE</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    call print <span class=\"token comment\">; This will be written after the BIOS messages</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    call switch_to_pm</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    mov <span class=\"token register variable\">bx</span>, MSG_ERROR </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    call print </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    jmp <span class=\"token operator\">$</span> <span class=\"token comment\">; this will actually never be executed</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token operator\">%</span>include <span class=\"token string\">\"../02-mbr/boot-print.asm\"</span> <span class=\"token comment\">; must be the first included</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token operator\">%</span>include <span class=\"token string\">\"../03-loader/32bit-gdt.asm\"</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token operator\">%</span>include <span class=\"token string\">\"32bit-print.asm\"</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token operator\">%</span>include <span class=\"token string\">\"../03-loader/32bit-switch.asm\"</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token operator\">[</span>bits <span class=\"token number\">32</span><span class=\"token operator\">]</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token label function\">BEGIN_PM:</span> <span class=\"token comment\">; after the switch we will get here</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    mov <span class=\"token register variable\">ebx</span>, MSG_PROT_MODE</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    call print_string_pm <span class=\"token comment\">; Note that this will be written at the top left corner</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    jmp <span class=\"token operator\">$</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>MSG_REAL_MODE db <span class=\"token string\">\"Started in 16-bit real mode\"</span>, <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>MSG_ERROR db <span class=\"token string\">\"Loaded 32-bit protected mode ERROR\"</span>, <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>MSG_PROT_MODE db <span class=\"token string\">\"Loaded 32-bit protected mode\"</span>, <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token comment\">; bootsector</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>times <span class=\"token number\">510</span><span class=\"token operator\">-</span>(<span class=\"token operator\">$</span><span class=\"token operator\">-</span><span class=\"token operator\">$</span><span class=\"token operator\">$</span>) db <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>dw <span class=\"token number\">0xaa55</span></pre></td></tr></table></figure></div></details>\n<p>编译并运行后，我们就可以看到打印出来的文字啦！</p>\n<p><img data-src=\"http://imgcdn.gality.cn/blog/ekfisv.png\" alt=\"VGA Text Mode Print\" /></p>\n<p>「我们之前说过，VGA Text Mode 的内存是对应终端的字符的，由于我们是在 <code>0xb8000</code>  开始处写的，所以打印的字符也会从终端最开始处开始，而且可以明显看出，VGA 下的打印出字体的白色会更凉一点，与 BIOS 的打印不同。」</p>\n<h1 id=\"参考\"><a class=\"anchor\" href=\"#参考\">#</a> 参考</h1>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvVkdBX3RleHRfbW9kZQ==\">https://en.wikipedia.org/wiki/VGA_text_mode</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93aWtpLm9zZGV2Lm9yZy9UZXh0X21vZGU=\">https://wiki.osdev.org/Text_mode</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93aWtpLm9zZGV2Lm9yZy9QcmludGluZ19Ub19TY3JlZW4=\">https://wiki.osdev.org/Printing_To_Screen</span></li>\n</ul>\n",
            "tags": [
                "操作系统",
                "从0到1",
                "操作系统",
                "系列长篇",
                "二进制基本功"
            ]
        },
        {
            "id": "https://gality.cn/misc/tool-usage/GDB-with-QEMU/",
            "url": "https://gality.cn/misc/tool-usage/GDB-with-QEMU/",
            "title": "GDB+QEMU调试mbr/loader",
            "date_published": "2023-09-20T09:31:28.000Z",
            "content_html": "<div class=\"note info no-icon\">\n<p>以下为本文所使用的系统环境与版本：</p>\n<ul>\n<li>macOS Ventura 13.4.1 (c) - 英特尔芯片</li>\n<li>GDB 13.2</li>\n<li>QEMU  8.0.4</li>\n</ul>\n</div>\n<h1 id=\"gdb调试qemu\"><a class=\"anchor\" href=\"#gdb调试qemu\">#</a> GDB 调试 QEMU</h1>\n<p>该方法不局限于调试 mbr/loader，也可以用来调试内核。步骤如下：</p>\n<p>首先运行 qemu，并在 qemu 启动后立刻监听 GDB 连接端口（qemu 不会执行任何指令）：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># Linux</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>qemu <span class=\"token parameter variable\">-s</span> <span class=\"token parameter variable\">-S</span> <span class=\"token operator\">&lt;</span>harddrive.img<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># Mac 调试实模式</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>qemu-system-i386 <span class=\"token parameter variable\">-s</span> <span class=\"token parameter variable\">-S</span> <span class=\"token operator\">&lt;</span>harddrive.img<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># Mac 调试保护模式</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>qemu-system-x86_64 <span class=\"token parameter variable\">-s</span> <span class=\"token parameter variable\">-S</span> <span class=\"token operator\">&lt;</span>harddrive.img<span class=\"token operator\">></span></pre></td></tr></table></figure><p>此时 qemu 会监听 1234 端口并等待 GDB 的连接，当 GDB 连接后，将调试控制权交给 GDB，我们可以用如下命令来让 GDB 连接 1234 端口（如果是远程调试的话，需要填写相应 URL 与端口）：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>gdb</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">(</span>gdb<span class=\"token punctuation\">)</span> target remote localhost:1234</pre></td></tr></table></figure><h2 id=\"调试内核\"><a class=\"anchor\" href=\"#调试内核\">#</a> 调试内核</h2>\n<p>调试内核时为了能有源代码进行对应，我们需要将将调试用到的符号信息也编译出来，有两种方法：</p>\n<ul>\n<li>使用 GCC 编译源代码时加入 <code>-g</code>  参数，这样会将所有符号信息打包进内核程序中（程序会比较大）</li>\n<li>使用 <code>objcopy</code>  来将符号信息单独打包到一个文件中</li>\n</ul>\n<p><code>objcopy</code>  是 <code>GNU Binutils</code>  包的一部分，在 Mac 上并没有链接到 <code>bin</code>  下，所以不能直接使用，可以用以下步骤来手动建立链接。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 1. 找到 `objcopy` 可执行文件的位置</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>mdfind <span class=\"token parameter variable\">-name</span> objcopy</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 2. 将可执行文件链接到 `/usr/local/bin` 中</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">ln</span> <span class=\"token parameter variable\">-s</span> /usr/local/Cellar/binutils/2.41/bin/objcopy /usr/local/bin/objcopy</pre></td></tr></table></figure><p>然后就可以使用 <code>objcopy</code>  来将调试符号输出到单独文件 <code>kernel.sym</code>  中：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>objcopy --only-keep-debug kernel.elf kernel.sym</pre></td></tr></table></figure><p>也可以在 GDB 中直接引入符号文件（可以是可执行文件，只要包含了 debug 信息即可）：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">(</span>gdb<span class=\"token punctuation\">)</span> symbol-file kernel.elf  <span class=\"token punctuation\">;</span>kernel.elf is the actual unstripped kernel image <span class=\"token keyword\">in</span> this <span class=\"token keyword\">case</span></pre></td></tr></table></figure><h2 id=\"调试实模式\"><a class=\"anchor\" href=\"#调试实模式\">#</a> 调试实模式</h2>\n<p>由于 GDB 并不原生支持实模式的调试，所以对于实模式下本身应为 16 位的二进制也会按 32 位去反汇编，导致出现问题，幸好已经有大神写过相应的脚本了，我们直接使用就可以了。</p>\n<p>首先需要下载以下三个文件（操作系统从 0 到 1 系列对应的 github 项目中已经全部包含）</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">wget</span> https://raw.githubusercontent.com/qemu/qemu/master/gdb-xml/i386-32bit.xml</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">wget</span> https://raw.githubusercontent.com/mhugo/gdb_init_real_mode/master/gdbinit_real_mode.txt</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'&lt;?xml version=\"1.0\"?>&lt;!DOCTYPE target SYSTEM \"gdb-target.dtd\">&lt;target>&lt;architecture>i8086&lt;/architecture>&lt;xi:include href=\"i386-32bit.xml\"/>&lt;/target>'</span> <span class=\"token operator\">></span> target.xml</pre></td></tr></table></figure><p>首先使用 <code>qemu -s -S &lt;harddrive.img&gt;</code>  启动 qemu，然后再使用以下命令即可正确调试实模式了</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>gdb <span class=\"token parameter variable\">-ix</span> <span class=\"token string\">\"gdb_init_real_mode.txt\"</span> <span class=\"token parameter variable\">-ex</span> <span class=\"token string\">\"set tdesc filename target.xml\"</span> <span class=\"token parameter variable\">-ex</span> <span class=\"token string\">\"target remote localhost:1234\"</span> <span class=\"token parameter variable\">-ex</span> <span class=\"token string\">\"br *0x7c00\"</span> <span class=\"token parameter variable\">-ex</span> <span class=\"token string\">\"c\"</span></pre></td></tr></table></figure><p>这个命令其实并不复杂，用 <code>-ix</code>  参数加载 gdb 脚本，就是该脚本实现了对实模式的支持，同时对 gdb 做了增强，会自动输出一些信息（寄存器、栈、代码等待）。</p>\n<p>至于后面的 <code>-ex</code>  参数，其实就是直接使得 gdb 启动后依次执行这些命令:</p>\n<ul>\n<li><code>target remote localhost:1234</code> ：连接 qemu 并进行调试</li>\n<li><code>br *0x7c00</code> ：在 <code>0x7c00</code>  处下断点，其实就是 mbr 开始的地方，也就是我们的代码开头。</li>\n<li><code>c</code> ：使程序继续执行，直到触发断点，接着程序会停在 <code>0x7c00</code>  处。</li>\n</ul>\n<p>注意：在 mbr/loader 的调试中，由于没有源代码，我们需要用 <code>ni/si</code>  来执行下一条指令。</p>\n<p>调试实模式的示意图如下：</p>\n<p><img data-src=\"http://imgcdn.gality.cn/blog/v1d8cs.png\" alt=\"gdb调试实模式\" height=\"761\" width=\"678\" /></p>\n<h1 id=\"参考\"><a class=\"anchor\" href=\"#参考\">#</a> 参考</h1>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly90ZXJuZXQuZnIvZ2RiX3JlYWxfbW9kZS5odG1s\">https://ternet.fr/gdb_real_mode.html</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93aWtpLm9zZGV2Lm9yZy9LZXJuZWxfRGVidWdnaW5n\">https://wiki.osdev.org/Kernel_Debugging</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvMzI5NTU4ODcvaG93LXRvLWRpc2Fzc2VtYmxlLTE2LWJpdC14ODYtYm9vdC1zZWN0b3ItY29kZS1pbi1nZGItd2l0aC14LWktcGMtaXQtZ2V0cy10cg==\">https://stackoverflow.com/questions/32955887/how-to-disassemble-16-bit-x86-boot-sector-code-in-gdb-with-x-i-pc-it-gets-tr</span></li>\n</ul>\n",
            "tags": [
                "杂项",
                "工具使用",
                "GDB",
                "gdb",
                "qemu",
                "调试",
                "os"
            ]
        },
        {
            "id": "https://gality.cn/misc/trail-and-error/Mac%E4%B8%8B%E4%BD%BF%E7%94%A8GDB/",
            "url": "https://gality.cn/misc/trail-and-error/Mac%E4%B8%8B%E4%BD%BF%E7%94%A8GDB/",
            "title": "Mac下使用GDB进行调试",
            "date_published": "2023-09-13T09:39:27.000Z",
            "content_html": "<div class=\"note info no-icon\">\n<p>以下为本文所使用的系统环境与版本：</p>\n<ul>\n<li>macOS Ventura 13.4.1 (c) - 英特尔芯片</li>\n<li>GDB 13.2</li>\n</ul>\n</div>\n<h1 id=\"背景\"><a class=\"anchor\" href=\"#背景\">#</a> 背景</h1>\n<h2 id=\"安装\"><a class=\"anchor\" href=\"#安装\">#</a> 安装</h2>\n<p>Mac 下安装 <code>gdb</code>  非常简单，直接使用 <code>homebrew</code>  安装即可：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>brew <span class=\"token function\">install</span> gdb</pre></td></tr></table></figure><h2 id=\"问题\"><a class=\"anchor\" href=\"#问题\">#</a> 问题</h2>\n<p>直接使用 <code>gdb</code>  运行调试运行其他程序会出现以下报错：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">(</span>gdb<span class=\"token punctuation\">)</span> r</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Starting program: /Users/gality/project/v8/out/xcode.debug/d8</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Unable to <span class=\"token function\">find</span> Mach task port <span class=\"token keyword\">for</span> process-id <span class=\"token number\">13210</span>: <span class=\"token punctuation\">(</span>os/kern<span class=\"token punctuation\">)</span> failure <span class=\"token punctuation\">(</span>0x5<span class=\"token punctuation\">)</span>.</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">(</span>please check gdb is codesigned - see taskgated<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">))</span></pre></td></tr></table></figure><p>此处错误的原因是 Mac 系统默认禁止一个未授权的进程访问 / 调试其它进程（防止安全问题）。想让内核解除这种限制，最好的方法就是用系统信任的证书对它进行签名。</p>\n<h1 id=\"解决方案\"><a class=\"anchor\" href=\"#解决方案\">#</a> 解决方案</h1>\n<h2 id=\"创建证书\"><a class=\"anchor\" href=\"#创建证书\">#</a> 创建证书</h2>\n<ol>\n<li>打开 <ins class=\"dot\">钥匙串访问.app</ins></li>\n<li>在右上角菜单栏中 <span class=\"label info\">钥匙串访问</span> -&gt; <span class=\"label info\">证书助理</span> -&gt;  <span class=\"label info\">创建证书</span></li>\n<li>填写信息：\n<ul>\n<li>名称：gdb_codesign</li>\n<li>身份类型：自签名根证书</li>\n<li>证书类型：代码签名</li>\n<li>勾选：让我覆盖这些默认值</li>\n</ul>\n</li>\n<li>使用默认设置，一直点击确定到 <ins class=\"dot\">指定证书位置</ins> 的步骤，选择 <span class=\"label info\">系统</span> 后，按提示完成创建</li>\n<li>在 <ins class=\"dot\">钥匙串访问.app</ins> 中，选择左侧栏的  <span class=\"label dot\">系统</span> 内的 <span class=\"label info\">我的证书</span> 栏目，找到刚刚创建的<ins class=\"dot\"> gdb_codesign</ins> 证书并双击打开 <ins class=\"dot\">证书信息窗口</ins> ，展开 <span class=\"label info\">信任</span> 项，设置 ++ 使用此证书时: ++{.dot} 为<strong>始终信任</strong>。</li>\n<li>关闭 <ins class=\"dot\">证书信息窗口</ins> 时，会再次输入密码。</li>\n</ol>\n<h2 id=\"对gdb签名\"><a class=\"anchor\" href=\"#对gdb签名\">#</a> 对 GDB 签名</h2>\n<p>先在 <code>家目录下</code> 创建一个 <code>gdb-entitlement.xml</code> ，然后写入以下内容：</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">plist</span> <span class=\"token name\">PUBLIC</span> <span class=\"token string\">\"-//Apple//DTD PLIST 1.0//EN\"</span> <span class=\"token string\">\"http://www.apple.com/DTDs/PropertyList-1.0.dtd\"</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>plist</span> <span class=\"token attr-name\">version</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1.0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dict</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>key</span><span class=\"token punctuation\">></span></span>com.apple.security.cs.debugger<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>key</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>true</span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dict</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>plist</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>pre</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>接着在 <code>家目录</code> 下执行以下命令，用我们刚刚创建的证书对 gdb 进行签名：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> codesign <span class=\"token parameter variable\">--entitlements</span> gdb-entitlement.xml <span class=\"token parameter variable\">-fs</span> gdb_codesign /usr/local/bin/gdb</pre></td></tr></table></figure><p>「如果你是用 <code>brew install gdb</code>  安装的 <code>gdb</code>  的话，那么其默认路径应该在 <code>/usr/local/bin/gdb</code> ，否则，可以使用 <code>whereis gdb</code>  命令来找到 <code>gdb</code>  的安装路径」</p>\n<hr />\n<p>此时，再次尝试使用 GDB 去调试别的应用，就可以正常调试啦！🎉🎉🎉</p>\n<div class=\"note info no-icon\">\n<p>在许多教程中（包括官方教程），均要求签名完成后必须重启电脑来使签名生效，不过我实际测试是不需要重启也可以生效的，如果你在前签名完成后仍然有问题，不妨重启下试试。</p>\n</div>\n<h1 id=\"已知bug\"><a class=\"anchor\" href=\"#已知bug\">#</a> 已知 Bug</h1>\n<p>如果出现如下情况：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">(</span>gdb<span class=\"token punctuation\">)</span> r</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Starting program: /Users/gality/project/V8/v8/out/xcode.debug/d8</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span>New Thread 0x2303 of process <span class=\"token number\">16191</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><p>然后卡住不动，可以使用快捷键 <span class=\"kbd\">Ctrl</span> + <span class=\"kbd red\">C</span> 来中断，然后就可以正常调试了。</p>\n<p>这个 Bug 经常出现于首次使用 <code>gdb</code>  调试时，中断后正常进入调试程序，且一般再次调试时就不会触发这个 Bug 了。</p>\n<h1 id=\"参考\"><a class=\"anchor\" href=\"#参考\">#</a> 参考</h1>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXN0LmdpdGh1Yi5jb20vZ3Jhdml0eWxvdy9mYjU5NTE4NmNlNjA2ODUzN2E2ZTlkYTZkOGI1Yjk2ZA==\">https://gist.github.com/gravitylow/fb595186ce6068537a6e9da6d8b5b96d</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Vub25vaS9hcnRpY2xlL2RldGFpbHMvMTI4NjMwMzMw\">https://blog.csdn.net/unonoi/article/details/128630330</span></li>\n</ul>\n",
            "tags": [
                "杂项",
                "踩坑",
                "gdb",
                "杂项",
                "踩坑"
            ]
        },
        {
            "id": "https://gality.cn/os/03-loader/",
            "url": "https://gality.cn/os/03-loader/",
            "title": "03-Loader编写之进入保护模式",
            "date_published": "2023-08-31T08:08:10.000Z",
            "content_html": "<div class=\"note info\">\n<p>本章是操作系统从 0 到 1 系列的第四篇文章，主要讲解了 loader 需要完成的任务以及其中涉及到的知识点。本章先总体介绍 loader 的工作，然后逐步实现部分 loader 的工作（虚拟内存之前）并讲解相关知识点，由于虚拟内存相关的知识庞大且重要，我们会在下一章进行详细探讨。</p>\n</div>\n<div class=\"note warning\">\n<p><em>Concepts you may want to Google beforehand: GDT, protected mode, segment register, interrupts, pipeline</em></p>\n</div>\n<h1 id=\"loader的工作\"><a class=\"anchor\" href=\"#loader的工作\">#</a> Loader 的工作</h1>\n<p>总的来说，loader 的工作为以下几项（也是 loader 到 kernel 的步骤）：</p>\n<ol>\n<li>禁用中断</li>\n<li>使能 A20 地址线（现在的设备都是默认使能的，所以可以跳过）</li>\n<li>建立 GDT</li>\n<li>进入保护模式并刷新 cpu 管道、初始化段寄存器和栈</li>\n<li>建立 kernel 页目录（ <code>page directory</code> ）和页表（ <code>page tables</code> ）</li>\n<li>打开虚拟内存（ <code>virtual memory</code> ），进入  <code>paging</code>  模式</li>\n<li>加载  <code>kernel</code>  镜像到内存</li>\n<li>执行 <code>kernel</code>  代码，控制权转交给 <code>kernel</code></li>\n</ol>\n<h1 id=\"loader编写\"><a class=\"anchor\" href=\"#loader编写\">#</a> Loader 编写</h1>\n<h2 id=\"禁用中断\"><a class=\"anchor\" href=\"#禁用中断\">#</a> 禁用中断</h2>\n<p>禁用中断通过设置 <code>IF</code> flag 来实现，当 <code>IF</code> flag 被设置为 0 时，系统会屏蔽中断命令；禁用中断非常简单，只需要一行命令即可：</p>\n<figure class=\"highlight nasm\"><figcaption data-lang=\"NASM\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>cli</pre></td></tr></table></figure><p>如果你看了很多教程的话，可能会发现，有的教程中有这行代码，而有的没有，甚至在自己写的 loader 中不禁用中断可能也不会有什么问题，但是，这里是 “可能”，如果中断发生在实模式进入保护模式之前和之后，系统都没有问题，但在模式切换进行时发生中断就会发生异常。这个情况概率比较低，少量的验证是没法复现此问题的，所以我们最好还是加上 <code>cli</code>  命令。</p>\n<h2 id=\"使能a20地址线\"><a class=\"anchor\" href=\"#使能a20地址线\">#</a> 使能 A20 地址线</h2>\n<p>由于现在设备会在启动时自动使能 A20 地址线，所以这一步可以跳过，不过我们的教程为了完整性，还是稍微讲一下。</p>\n<p>「A20 其实是指第 21 根地址线，因为地址线是从 0 开始计数的。」</p>\n<p>需要该步骤也是历史原因导致的，<a href=\"https://gality.cn/os/02-mbr/#%E4%BB%8E%E9%80%9A%E7%94%B5%E5%BC%80%E5%A7%8B\">我们之前讲过</a>，在 CPU 发展早期（8086 时代），CPU 地址线只有 20 位，此时寻址还需要还需要经过转换。经过 CPU 的不断发展（80286 时代），地址线从 20 根扩展到了 24 根，能访问的内存达到了 2<sup>24</sup>M，但是在 CPU 设计时是向下兼容的，所以，80286 CPU 在实模式时表现应该和 8086 CPU 一致，但其实 80286 芯片却存在一个 Bug：因为 80286 有了 A20 地址线，如果程序员访问 <code>100000H ~ 10FFEFH</code>  之间的内存，系统将实际访问这块内存，而不是像 8086/8088 一样从 0 开始。</p>\n<p>所以为了解决上述兼容问题，IBM 使用实模式下本应无用的 A20 地址线来进行设置，当 A20 被使能时，程序员给出 <code>100000H ~ 10FFEFH</code>  之间的地址的时候，系统将真正访问这块内存区域；若 A20 为被使能，则会按照实模式下对地址取模进行访问。</p>\n<p>使能 A20 的代码非常简单，只需要记住即可</p>\n<figure class=\"highlight nasm\"><figcaption data-lang=\"NASM\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>in <span class=\"token register variable\">al</span>, <span class=\"token number\">92h</span> <span class=\"token comment\">; 2. enable A20</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>or <span class=\"token register variable\">al</span>, <span class=\"token number\">00000010b</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>out <span class=\"token number\">92h</span>, <span class=\"token register variable\">al</span></pre></td></tr></table></figure><h2 id=\"建立gdt\"><a class=\"anchor\" href=\"#建立gdt\">#</a> 建立 GDT</h2>\n<details class=\"info\"><summary>什么是GDT？</summary><div>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93aWtpLm9zZGV2Lm9yZy9HRFRfVHV0b3JpYWw=\">GDT</span>（ <strong>Global Descriptor Table</strong>）即全局描述符表，又叫段描述符表，本质其实就是一种专用于 <code>IA-32</code>  和 <code>x86-64</code>  体系结构的二进制数据结构，该表位于内存中，具体位置保存在 <code>GDTR</code>  寄存器中，其条目描述并规定了不同内存分区的各种特征，包括基地址、大小和访问特权如可执行、可写等。 在 Intel 的术语中，这些内存区域被称为 <code>segment</code> 。</p>\n<p>我们在上一章中提到过，CPU 通过 <code>段基地址</code>  + <code>段内偏移</code> 的方式来扩展寻址空间，类似的，在保护模式下，CPU 通过 GDT 中记录的基地址和偏移地址实现寻址，因此可以通过 GDT 中记录的段的信息来进行内存的保护（对比实模式下，所有程序都可以访问任意内存）。</p>\n</div></details>\n<h3 id=\"gdtr\"><a class=\"anchor\" href=\"#gdtr\">#</a> GDTR</h3>\n<p>根据<span class=\"exturl\" data-url=\"aHR0cHM6Ly93aWtpLm9zZGV2Lm9yZy9HbG9iYWxfRGVzY3JpcHRvcl9UYWJsZQ==\">手册</span>，GDT 的地址应存储在 <code>GDTR</code>  寄存器中，这个过程通过汇编指令 <code>LGDT</code>  进行加载，参数指向 <code>GDT Descriptor</code>  结构：</p>\n<p><img data-src=\"http://imgcdn.gality.cn/blog/qsb20j.png\" alt=\"GDT Descriptor\" /></p>\n<ul>\n<li><strong>Size</strong>：表示 GDT 的大小，以字节为单位，实际大小值为 <code>Size+1</code> ，这是因为 <code>Size</code>  的最大值是 65535，但是 GDT 的最大值为 65536（8192 条数据）；同时，GDT 的 <code>Size</code>  不能为 0</li>\n<li><strong>Offest</strong>：GDT 的线性地址（并不是物理地址，而是分页地址）</li>\n</ul>\n<p>同时，上图中我们也可以看出 <code>LGDT</code>  命令在 32 位和 64 位下采用不同的方式载入数据， <code>Offest</code>  在 32 位下只有 4 字节长度，而在 64 位下有 8 字节。</p>\n<h3 id=\"gdt\"><a class=\"anchor\" href=\"#gdt\">#</a> GDT</h3>\n<p>GDT 中的条目占 8 字节，在内存中的形式如下：</p>\n<p><img data-src=\"http://imgcdn.gality.cn/blog/ug568w.png\" alt=\"GDT\" /></p>\n<p>注意，GDT 中的第一个条目 (Entry 0) 永远为空，所以段数据应从第二个条目开始存储；表中的项由段选择器（Segment Selectors）存取，段选择器通过汇编指令或中断等硬件函数加载到段寄存器中。</p>\n<p>GDT 中每一项都有一个名为 <code>Segment Descriptor</code>  复杂的结构，该结构长度为 8 Bytes，示意图如下：</p>\n<p><img data-src=\"http://imgcdn.gality.cn/blog/ir3ukr.png\" alt=\"System Segment Descriptor\" /></p>\n<ul>\n<li><strong>Base</strong>：一个 32 位值（不连续的黄色部分），记录了该段的起始地址「图中 Base address 后的括号说明了改部分在整个 Base 中的位数」</li>\n<li><strong>Limit</strong>：一个 20 位值（不连续的粉红色部分），记录最大可寻址单元，以 1 字节为单位（最大寻址 1M），或以 1 页（4 KB）为单位；因此，在 32 位下，如果选择以页为单位且 limit 设为 <code>0xFFFFF</code> ，那么该段将覆盖整个 4 GB（4KB*1M ）空间「图中括号内数字含义同 Base」</li>\n</ul>\n<details class=\"info\"><summary>64位下的GDT</summary><div>\n<p>上述图片展示的是 32 位模式下的 GDT，而在 64 位模式下，段保护机制基本被废弃了，更多的是使用页机制，因此，服务于段机制的 GDT 表项就少很多；又由于 64 位下引入的 <code>IA-32e</code>  指令集不再兼容老旧的 8086 模式，仅有代码段 CS，数据段 DS 仍和 32 位一样使用 64 位，即 8 字节的描述符，其他的段寄存器例如：DS、ES、SS 这样的段寄存器已经不再使用了，GDT 项存在的意义就更小了。</p>\n<p>另一个导致 GDT 在 64 位下不受宠的原因是，其实从 win XP 系统开始，系统进入保护模式后 GDT 的项就没用了，一直就那么空在内存中，甚至还有从系统启动到结束就没用过的表项，不但占地方还给了黑客可趁之机，很多大神看上了这一大片有可读写可执行属性的内存，就把 Shellcode 或者全局数据区布置在这了。</p>\n</div></details>\n<ul>\n<li>\n<p><strong>Access Byte</strong>：一个 8 位值（40-47），代表了该段的访问权限字段，字段参数及含义如下：</p>\n<ul>\n<li>\n<p><strong>P:</strong> 段是否存在，存在 = 1</p>\n</li>\n<li>\n<p><strong>DPL:</strong> 描述符权限级别字段（2 位）， 即该段的<span class=\"exturl\" data-url=\"aHR0cHM6Ly93aWtpLm9zZGV2Lm9yZy9TZWN1cml0eSNSaW5ncw==\"> CPU 权级</span>. <strong>0</strong> = 最高权限（内核）, <strong>3</strong> = 最低权限（用户应用）.</p>\n</li>\n<li>\n<p><strong>S:</strong> 描述符类型字段。如果设置为 <code>0</code> ，则定义了一个系统段 (例如 TSS「 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93aWtpLm9zZGV2Lm9yZy9UYXNrX1N0YXRlX1NlZ21lbnQ=\">Task State Segment</span> 」、LDT「 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93aWtpLm9zZGV2Lm9yZy9Mb2NhbF9EZXNjcmlwdG9yX1RhYmxl\">Local Descriptor Table</span> 」)；如果设置为 <code>1</code> ，则定义一个代码段或数据段。这两种描述符的 Type 字段结构有所不同，接下来分别来说：</p>\n<div class=\"note success no-icon\">\n<p><strong>S=0</strong> 时（System Segment Descriptor）</p>\n<ul>\n<li><strong>Type</strong>：定义系统段的类型（32 位模式）\n<ul>\n<li><strong>0x1:</strong> 16-bit TSS (Available)</li>\n<li><strong>0x2:</strong> LDT</li>\n<li><strong>0x3:</strong> 16-bit TSS (Busy)</li>\n<li><strong>0x9:</strong> 32-bit TSS (Available)</li>\n<li><strong>0xB:</strong> 32-bit TSS (Busy)</li>\n</ul>\n</li>\n<li><strong>Type</strong>：定义系统段的类型（<span class=\"exturl\" data-url=\"aHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvTG9uZ19tb2Rl\">Long Mode</span>）\n<ul>\n<li><strong>0x2:</strong> LDT</li>\n<li><strong>0x9:</strong> 64-bit TSS (Available)</li>\n<li><strong>0xB:</strong> 64-bit TSS (Busy)</li>\n</ul>\n</li>\n</ul>\n</div>\n<div class=\"note success no-icon\">\n<p><strong>S=1</strong> 时（Code/Data Segment），<strong>Type</strong> 字段会被拆分为以下字段</p>\n<p><img data-src=\"http://imgcdn.gality.cn/blog/shts2l.png\" alt=\"Access Byte\" /></p>\n<ul>\n<li><strong>E</strong>：第 43 位，是否可执行位， <code>0</code>  代表该段为数据段，不可执行； <code>1</code>  代表代码段，可执行</li>\n<li><strong>DC</strong>：第 42 位，方向位 / 符合位\n<ul>\n<li>对于数据段：表示方向位。 <code>0</code>  代表段向高地址增长； <code>1</code>  代表段向低地址生长</li>\n<li>对于代码段：表示符合位。 <code>0</code>  代表只有 <code>DPL</code>  字段中指定的权限可以执行该段代码； <code>1</code>  表示该段代码的执行权限可以小于等于 <code>DPL</code></li>\n</ul>\n</li>\n<li><strong>RW</strong>：第 41 位，可读 / 可写位\n<ul>\n<li>对于代码段：表示可读位。 <code>0</code>  代表该段不允许读， <code>1\t</code> 代表可读；代码段永远没有写权限。</li>\n<li>对于数据段：表示可写位。 <code>0</code>  代表该段不可写， <code>1</code>  代表可写；数据段永远有读权限。</li>\n</ul>\n</li>\n<li><strong>A</strong>：第 40 位，访问位，最好设置为 0，CPU 会在该段被访问时自动设置它。</li>\n</ul>\n</div>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>Flags</strong>：一个 4 位值（52-55 位）</p>\n<ul>\n<li><strong>G</strong>：粒度位，指示 <code>Limit</code>  的单位。 <code>0</code>  表示 <code>Limit</code>  单位为 1 字节 (字节粒度)。如果设置为 <code>1</code> ，则 <code>Limit</code>  单位为 4KB 块 (页面粒度)。</li>\n<li><strong>DB</strong>：大小位， <code>0</code>  代表定义了一个 16 位保护模式段， <code>1</code>  表示定义了一个 32 位保护模式段；一个 GDT 可以同时有 16 位和 32 位的位选择器</li>\n<li><strong>L</strong>：长模式代码标志， <code>1</code>  表示该段定义为 64 位代码段，此时 <code>DB</code>  应该设置位 <code>0</code> ； <code>0</code>  表示为其他类型段</li>\n<li><strong>A</strong>：保留位，设为 0 即可</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"asm\"><a class=\"anchor\" href=\"#asm\">#</a> asm</h3>\n<p>以上就是所有有关 <code>GDT</code>  的理论知识啦，现在让我们动手写一下我们的操作系统的 <code>GDT</code>  吧！梳理一下：</p>\n<ol>\n<li><code>GDT</code>  的第一项必须为空项</li>\n<li>至少定义两个段：代码段、数据段（ <code>base</code>  和 <code>length</code>  先一样即可）</li>\n<li>获取 <code>GDT</code>  的地址</li>\n<li>创建 <code>GDT Descriptor</code>  结构用于后续填充 <code>GDTR</code></li>\n</ol>\n<details class=\"info\"><summary>32bit-gdt.asm</summary><div>\n<figure class=\"highlight nasm\"><figcaption data-lang=\"NASM\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token label function\">gdt_start:</span> <span class=\"token comment\">; don't remove the labels, they're needed to compute sizes and jumps</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">; the GDT starts with a null 8-byte</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    dd <span class=\"token number\">0x0</span> <span class=\"token comment\">; 4 byte</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    dd <span class=\"token number\">0x0</span> <span class=\"token comment\">; 4 byte</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">; GDT for code segment. base = 0x00000000, length = 0xfffff</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">; for flags, refer to https://gality.cn/os/03-loader/#gdt</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">; again,  1 bytes = 8 bits | 1 word = 2 bytes = 16 bits</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token label function\">gdt_code:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    dw <span class=\"token number\">0xffff</span>    <span class=\"token comment\">; segment length, bits 0-15</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    dw <span class=\"token number\">0x0</span>       <span class=\"token comment\">; segment base, bits 0-15</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    db <span class=\"token number\">0x0</span>       <span class=\"token comment\">; segment base, bits 16-23</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    db <span class=\"token number\">10011010b</span> <span class=\"token comment\">; flags (8 bits), little-endian, so compare the doc. from P to A (high to low)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    db <span class=\"token number\">11001111b</span> <span class=\"token comment\">; flags (4 bits) + segment length, bits 16-19 | length=0xfffff</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    db <span class=\"token number\">0x0</span>       <span class=\"token comment\">; segment base, bits 24-31</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\">; GDT for data segment. base and length identical to code segment</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\">; some flags changed, again, https://gality.cn/os/03-loader/#gdt</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token label function\">gdt_data:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    dw <span class=\"token number\">0xffff</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    dw <span class=\"token number\">0x0</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    db <span class=\"token number\">0x0</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    db <span class=\"token number\">10010010b</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    db <span class=\"token number\">11001111b</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    db <span class=\"token number\">0x0</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token label function\">gdt_end:</span> <span class=\"token comment\">; don't remove this label</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token comment\">; GDT Descriptor</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token label function\">gdt_descriptor:</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    dw gdt_end <span class=\"token operator\">-</span> gdt_start <span class=\"token operator\">-</span> <span class=\"token number\">1</span> <span class=\"token comment\">; size (16 bit), always one less of its true size</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    dd gdt_start <span class=\"token comment\">; address (32 bit)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token comment\">;define some constants for later use</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>CODE_SEG equ gdt_code <span class=\"token operator\">-</span> gdt_start</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>DATA_SEG equ gdt_data <span class=\"token operator\">-</span> gdt_start</pre></td></tr></table></figure></div></details>\n<p>上面的代码中其实还隐藏了一个知识点，仔细想想也确实会有一个并不是很合逻辑的地方。我们知道在高级语言，例如 <code>C语言</code> 中，一个一个的创建变量并不能保证变量在内存中是连续存储的，除非用数组；但是我们的代码里面并没有任何的特殊数据结构的形式，那么 <code>GDT</code>  的每一项在内存中是一定在一起的吗？</p>\n<details class=\"primary\"><summary>如果是，那么这代表什么？如果不是，那么实际又是怎么实现的呢？</summary><div>\n<p>答案：<strong>一定是在一起</strong>。这是因为汇编源代码里的指令和数据部分是可以自由混杂排布的，而且最终编译出来的二进制中，它们排布顺序完全遵循源代码的排布。所以你可以任意安排你的指令和数据所处的位置，只需记得要使用各种跳转指令来控制代码运行即可。</p>\n<p>但是，整个  <code>loader</code>  的起始位置，即入口代码必须在  <code>0x9000</code>  处，因为这是和  <code>mbr</code>  约定好的跳转地址（详见<a href=\"https://gality.cn/os/02-mbr/\">上一章</a>），至于后面全部可以自由发挥和排布。</p>\n<p>其实，这个特性又是另外一个问题的答案，不知道有没有读者在看前面的代码时有这么一个疑问，为什么都要在代码结束加上 <code>jmp $</code> ，一定要加吗？</p>\n<p>当然<strong>是的</strong>，这个问题的答案同样是来源于上述特性，如果不加上 <code>jmp $</code>  来使代码进入死循环，那么代码将继续向后执行，将随机乱码理解成代码去执行，这样会导致未知错误。</p>\n</div></details>\n<h2 id=\"保护模式\"><a class=\"anchor\" href=\"#保护模式\">#</a> 保护模式</h2>\n<h3 id=\"设置gdtr\"><a class=\"anchor\" href=\"#设置gdtr\">#</a> 设置 GDTR</h3>\n<p>上一步中我们已经定义了 <code>GDT</code>  和 <code>GDT Descriptor</code>  结构，只需要使用 <code>lgdt [gdt_descriptor]</code>  命令来将 <code>GDT Descriptor</code>  的地址加载到 <code>GDTR</code>  寄存器中即可。</p>\n<h3 id=\"进入保护模式\"><a class=\"anchor\" href=\"#进入保护模式\">#</a> 进入保护模式</h3>\n<p>设置完 <code>GDT</code>  后我们就可以使 CPU 进入保护模式了，进入保护模式非常简单，只需要设置 CPU 的 <code>cr0</code>  寄存器即可。 <code>cr0</code>  寄存器是一个控制寄存器，共 32 位，每一位都对应着不同的控制能力，我们这里无需管其他位的能力，只需要关注第 0 位 PE（Protected Enable）位即可，当 <code>PE=0</code>  时，启动保护模式； <code>PE=1</code>  时，则在实模式运行。</p>\n<p>我们在对 cr0 寄存器进行操作时还必须注意需要保留其他控制位值不变，想到了什么操作？没错，就是 <code>OR</code> ，该操作可以仅将第 0 位改变成 <code>1</code> ，并保持其他位不变。</p>\n<p>还有一点需要注意的是， <code>OR</code>  操作不能直接对 <code>cr0</code>  寄存器进行操作，所以我们需要借助 <code>eax</code>  寄存器来作为桥梁，完成对 <code>cr0</code>  寄存器的赋值，代码是不是已经呼之欲出了？</p>\n<details class=\"info\"><summary>进入保护模式</summary><div>\n<figure class=\"highlight nasm\"><figcaption data-lang=\"NASM\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>mov <span class=\"token register variable\">eax</span>, <span class=\"token register variable\">cr0</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>or <span class=\"token register variable\">eax</span>, <span class=\"token number\">0x1</span> <span class=\"token comment\">; set 32-bit mode bit in cr0</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>mov <span class=\"token register variable\">cr0</span>, <span class=\"token register variable\">eax</span></pre></td></tr></table></figure></div></details>\n<p>此时，我们就正式进入保护模式了。</p>\n<h3 id=\"刷新cpu管道\"><a class=\"anchor\" href=\"#刷新cpu管道\">#</a> 刷新 CPU 管道</h3>\n<p>为什么要刷新 CPU 管道（pipeline）呢？是因为 CPU 是以 pipeline 的方式工作的，需要执行的指令都在 pipeline 中，若两个不同指令依赖同一块数据，同时修改这块数据就可能导致危险，这种情况下，就需要刷新 CPU 管道来防止这种危险发生（这里查到的<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY29tcHV0ZXJob3BlLmNvbS9qYXJnb24vcC9waXBlbGluZS1mbHVzaC5odG0jOn46dGV4dD1BJTIwaGF6YXJkJTIwY29uZGl0aW9uJTIwbWF5JTIwcHJlc2VudCxjb3JydXB0ZWQlMjBieSUyMHRoZSUyMHBpcGVsaW5pbmclMjBwcm9jZXNzLg==\">资料</span>是这样的，但是感觉稍微有一点点问题，有熟悉的师傅欢迎评论区留言呀～）。</p>\n<p>刷新 CPU 管道也非常简单，可以通过一个远跳命令实现:</p>\n<figure class=\"highlight nasm\"><figcaption data-lang=\"NASM\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>jmp CODE_SEG:init_pm <span class=\"token comment\">; far jump by using a different segment to refresh pipeline</span></pre></td></tr></table></figure><h3 id=\"初始化段寄存器\"><a class=\"anchor\" href=\"#初始化段寄存器\">#</a> 初始化段寄存器</h3>\n<p>上一章中我们已经介绍了寄存器的默认用法及含义，这里详细介绍下段寄存器各自的用途</p>\n<div class=\"note info no-icon\">\n<p>在保护模式下，CPU 提供了段寄存器（16 位）。段寄存器存放的并不是段的基地址，而是段选择符（Segment Descriptor）的相对于 GDT 地址的偏移地址（这也是为什么我们在上一节的代码中要定义 <code>CODE_SEG</code>  和 <code>DATA_SEG</code>  的原因），这些段寄存器包括 <code>cs</code> 、 <code>ss</code> 、 <code>ds</code> 、 <code>es</code> 、 <code>fs</code> 、 <code>gs</code> 。前三个寄存器有特定用途：</p>\n<ul>\n<li><strong>cs</strong>：代码段寄存器，指向包含程序指令的段</li>\n<li><strong>ss</strong>：栈段寄存器，指向包含当前程序栈的段</li>\n<li><strong>ds</strong>：数据段寄存器，指向包含静态数据或全局数据的数据段</li>\n</ul>\n<p>后三个段寄存器是通用的。</p>\n</div>\n<p><code>cs</code>  寄存器直接由 CPU 设置（想想上一章中讲的）我们无需初始化，所以我们就需要初始化其他的寄存器，至于用什么初始化，当然是我们提前定义好的 <code>DATA_SEG</code>  变量啦，有一点需要注意，段寄存器同样也不能直接进行立即数的赋值，我们需要借助 <code>ax</code> （16 位）来帮助赋值。</p>\n<figure class=\"highlight nasm\"><figcaption data-lang=\"NASM\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">[</span>bits <span class=\"token number\">32</span><span class=\"token operator\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token label function\">init_pm:</span> <span class=\"token comment\">; we are now using 32-bit instructions</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    mov <span class=\"token register variable\">ax</span>, DATA_SEG <span class=\"token comment\">; update the segment registers</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    mov <span class=\"token register variable\">ds</span>, <span class=\"token register variable\">ax</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    mov <span class=\"token register variable\">ss</span>, <span class=\"token register variable\">ax</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    mov <span class=\"token register variable\">es</span>, <span class=\"token register variable\">ax</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    mov <span class=\"token register variable\">fs</span>, <span class=\"token register variable\">ax</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    mov <span class=\"token register variable\">gs</span>, <span class=\"token register variable\">ax</span></pre></td></tr></table></figure><h3 id=\"初始化栈\"><a class=\"anchor\" href=\"#初始化栈\">#</a> 初始化栈</h3>\n<p><img data-src=\"http://imgcdn.gality.cn/blog/k0xq4i.png\" alt=\"mbr工作阶段内存布局\" /></p>\n<p>还记得上面这个图吗，我们将 <code>loader</code>  的地址设置在了 <code>0x8000</code>  后 <code>0x1000</code>  的空间内，此时 <code>0x8000</code>  前后的空间和 <code>mbr</code>  前的空间都是空着的，我们用 <code>mbr</code>  前面的空间来布置栈，就像示意图中标识的那样，将栈底设置为 <code>0x7B00</code> （栈向低地址增长），代码同样非常简单。</p>\n<figure class=\"highlight nasm\"><figcaption data-lang=\"NASM\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>mov <span class=\"token register variable\">ebp</span>, <span class=\"token number\">0x7B00</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>mov <span class=\"token register variable\">esp</span>, <span class=\"token register variable\">ebp</span></pre></td></tr></table></figure><p>将以上代码合并起来，就形成了从实模式到保护模式的代码</p>\n<figure class=\"highlight nasm\"><figcaption data-lang=\"NASM\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">[</span>bits <span class=\"token number\">16</span><span class=\"token operator\">]</span> <span class=\"token comment\">; real mode</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token label function\">switch_to_pm:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    cli <span class=\"token comment\">; 1. disable interrupts</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    in <span class=\"token register variable\">al</span>, <span class=\"token number\">92h</span> <span class=\"token comment\">; 2. enable A20</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    or <span class=\"token register variable\">al</span>, <span class=\"token number\">00000010b</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    out <span class=\"token number\">92h</span>, <span class=\"token register variable\">al</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    lgdt <span class=\"token operator\">[</span>gdt_descriptor<span class=\"token operator\">]</span> <span class=\"token comment\">; 3. load the GDT descriptor</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    mov <span class=\"token register variable\">eax</span>, <span class=\"token register variable\">cr0</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    or <span class=\"token register variable\">eax</span>, <span class=\"token number\">0x1</span> <span class=\"token comment\">; 4. set 32-bit mode bit in cr0</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    mov <span class=\"token register variable\">cr0</span>, <span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    jmp CODE_SEG:init_pm <span class=\"token comment\">; 5. far jump by using a different segment to refresh cpu pipeline</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token operator\">[</span>bits <span class=\"token number\">32</span><span class=\"token operator\">]</span> <span class=\"token comment\">; protected mode</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token label function\">init_pm:</span> <span class=\"token comment\">; we are now using 32-bit instructions</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    mov <span class=\"token register variable\">ax</span>, DATA_SEG <span class=\"token comment\">; 6. update the segment registers</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    mov <span class=\"token register variable\">ds</span>, <span class=\"token register variable\">ax</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    mov <span class=\"token register variable\">ss</span>, <span class=\"token register variable\">ax</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    mov <span class=\"token register variable\">es</span>, <span class=\"token register variable\">ax</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    mov <span class=\"token register variable\">fs</span>, <span class=\"token register variable\">ax</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    mov <span class=\"token register variable\">gs</span>, <span class=\"token register variable\">ax</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    mov <span class=\"token register variable\">ebp</span>, <span class=\"token number\">0x7B00</span> <span class=\"token comment\">; 7. update the stack right at the top of the free space</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    mov <span class=\"token register variable\">esp</span>, <span class=\"token register variable\">ebp</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    call BEGIN_PM <span class=\"token comment\">; 8. Call a well-known label with useful code</span></pre></td></tr></table></figure><p>此时，我们不妨写一个 main 函数来调用上述过程，然后测试一下程序：</p>\n<figure class=\"highlight nasm\"><figcaption data-lang=\"NASM\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">[</span>org <span class=\"token number\">0x7c00</span><span class=\"token operator\">]</span> <span class=\"token comment\">; bootloader offset</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    mov <span class=\"token register variable\">bp</span>, <span class=\"token number\">0x9000</span> <span class=\"token comment\">; set the stack</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    mov <span class=\"token register variable\">sp</span>, <span class=\"token register variable\">bp</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    mov <span class=\"token register variable\">bx</span>, MSG_REAL_MODE</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    call print <span class=\"token comment\">; This will be written after the BIOS messages</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    call switch_to_pm</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    mov <span class=\"token register variable\">bx</span>, MSG_ERROR <span class=\"token comment\">; this will actually never be executed</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    call print </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    jmp <span class=\"token operator\">$</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token operator\">%</span>include <span class=\"token string\">\"../02-mbr/boot-print.asm\"</span> <span class=\"token comment\">; must be the first included</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token operator\">%</span>include <span class=\"token string\">\"32bit-gdt.asm\"</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token operator\">%</span>include <span class=\"token string\">\"32bit-switch.asm\"</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token operator\">[</span>bits <span class=\"token number\">32</span><span class=\"token operator\">]</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token label function\">BEGIN_PM:</span> <span class=\"token comment\">; after the switch we will get here</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token comment\">; need patch</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    jmp <span class=\"token operator\">$</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>MSG_REAL_MODE db <span class=\"token string\">\"Started in 16-bit real mode\"</span>, <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>MSG_ERROR db <span class=\"token string\">\"Loaded 32-bit protected mode ERROR\"</span>, <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\">; bootsector</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>times <span class=\"token number\">510</span><span class=\"token operator\">-</span>(<span class=\"token operator\">$</span><span class=\"token operator\">-</span><span class=\"token operator\">$</span><span class=\"token operator\">$</span>) db <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>dw <span class=\"token number\">0xaa55</span></pre></td></tr></table></figure><p>然后编译执行就可以了</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>nasm <span class=\"token parameter variable\">-fbin</span> 32bit-main.asm <span class=\"token parameter variable\">-o</span> loader.bin</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>qemu-system-i386 <span class=\"token parameter variable\">-fda</span> loader.bin</pre></td></tr></table></figure><p>实际测试发现 <code>boot-print.asm</code>  必须第一个 include，否则 <code>nasm</code>  在编译的时候会把 <code>[bx]</code>  转换成 <code>[edi]</code>  不知道是 bug 还是我不知道的什么原因，总之，首先 include 就不会有问题了。</p>\n<hr />\n<p>至此，CPU 已经进入了保护模式（32 位），接下来我们需要完成虚拟内存到物理内存的映射，为 kernel 的工作打下基础，由于这部分内容体量相对庞大且至关重要，所以我们放在下下一章详细去讲（下一章先讲点轻松的～）。</p>\n",
            "tags": [
                "操作系统",
                "从0到1",
                "操作系统",
                "系列长篇",
                "二进制基本功"
            ]
        },
        {
            "id": "https://gality.cn/os/02-mbr/",
            "url": "https://gality.cn/os/02-mbr/",
            "title": "02-从BIOS启动到MBR编写",
            "date_published": "2023-08-22T04:03:46.000Z",
            "content_html": "<div class=\"note info\">\n<p>本章是操作系统从 0 到 1 系列的第三篇文章，主要讲解了计算机从通电到启动操作系统前的过程。在本章中，我将会介绍引导启动中的核心概念和知识，并最终自己实现一个 MBR。</p>\n</div>\n<div class=\"note warning\">\n<p><em>Concepts you may want to Google beforehand: assembler, BIOS, BOOT, Real mode, interrupts, CPU registers, control structures, function calling, strings</em></p>\n</div>\n<h1 id=\"bios和boot\"><a class=\"anchor\" href=\"#bios和boot\">#</a> BIOS 和 BOOT</h1>\n<p>即使不了解计算机的人也可能对于 <code>boot</code>  和 <code>bios</code>  这两个词有所耳闻，然而即使是计算机专业的人也可能会混淆这两者的概念，这里我们先来区分一下这两个概念，以便于我们后续的展开。</p>\n<ul>\n<li><ins class=\"wavy\">BIOS</ins> 是英文 &quot;Basic Input Output System&quot; 的缩略语，直译过来后中文名称就是 &quot;基本输入输出系统&quot;。它是一组固化到计算机内主板上一个<strong> ROM 芯片</strong>上的程序，由主板的制造厂商编写代码；我们有时听到的 “刷 BIOS” 就是指将主版上的 BIOS 程序进行更换。</li>\n<li><ins class=\"wavy\">BOOT</ins> 其实是指 <code>Boot Loader</code> ，boot 本身就是 “引导” 的意思，是指一种用来引导操作系统激活的程序，广泛应用于各种系统之中。</li>\n</ul>\n<h2 id=\"对比\"><a class=\"anchor\" href=\"#对比\">#</a> 对比</h2>\n<p>BIOS 保存着计算机最重要的<strong>基本输入输出程序</strong>、<strong>系统设置信息</strong>、<strong>开机后自检程序</strong>和<strong>系统自启动程序</strong>，其主要功能是为计算机提供最底层的、最直接的硬件设置和控制。可从 CMOS 中读写系统设置的具体信息。</p>\n<p>当按下电脑开机键的一瞬间，CPU 会先被激活去寻找 BIOS，接着 BIOS 会先在 Flash Memory 中执行，初始化计算机各种硬件并检测完整性，再执行 CMOS 中用户所喜好的设置，然后 BIOS 将自己解压缩到计算机的主存储器中。再启动引导程序 boot，然后由 boot 将操作系统加载到内存中执行。</p>\n<p>Boot 的过程其实就是由 <code>mbr</code> + <code>loader</code>  一起实现的，后面会详细讲解什么是 <code>mbr</code> ，什么是 <code>loader</code> ，耐心看下去吧～</p>\n<h1 id=\"mbr实现\"><a class=\"anchor\" href=\"#mbr实现\">#</a> MBR 实现</h1>\n<p>尽管很多教程中直接提供了 <code>mbr</code>  和 <code>loader</code>  供我们使用而无需自己编写，但是我仍推荐至少自行实现一次这两者，原因如下；</p>\n<ul>\n<li>有助于提高汇编能力，这一点在后面也至关重要。</li>\n<li>它的编写并不困难，可以借助 <code>mbr</code> +  <code>loader</code>  的编写来入门操作系统的编写。</li>\n<li>从 CPU 通电开始写起有助于建立对于计算机的全面认知，为后面的内核、可执行程序的加载，以及虚拟内存的建立做好准备。</li>\n<li>boot 阶段会初步搭建起 segment 以及虚拟内存的框架，为后续 kernel 编写打下基础</li>\n</ul>\n<p>💗真是激动人心，我们要开始编写自己的 <code>mbr</code>  了！</p>\n<h2 id=\"从通电开始\"><a class=\"anchor\" href=\"#从通电开始\">#</a> 从通电开始</h2>\n<p>一个经典的问题：<span class=\"orange\">计算机通电后是怎么就进入到了操作系统呢？</span></p>\n<p>计算机通电后，CPU 处于<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTUlQUUlOUUlRTYlQTglQTElRTUlQkMlOEYvNzM1NDUzMQ==\">实模式</span>，在实模式下，CPU 寻址方式为：由 16 位段寄存器值 * 10H 加 16 位偏移地址来形成 20 位的寻址空间，即只有 1M 的空间是可以被 CPU 读取的，而其他空间 CPU 都无法使用，CPU 必须借助这 1M 空间内的存储的各种程序来引导操作系统启动。</p>\n<details class=\"primary\"><summary>为什么是20位寻址空间呢？</summary><div>\n<p>这与 CPU 的发展历史有关，在 CPU 早期 (8086 时期)，由于 CPU 性能有限，一共只有 20 位地址线，可寻址空间只有 1M (2<sup>20</sup> bytes)，以及 8 个 16 位的通用寄存器，和 4 个 16 位的段寄存器；16 位的物理地址只能访问 64KB (2<sup>16</sup> bytes) 的内存。所以，为了能够通过这些 16 位的寄存器去构成 20 位的寻址地址，访问 1 MB 的内存，必须采取一种特殊的方式。</p>\n<p>特殊方式即由 <code> 段基址 + 段内偏移</code> 的方式来将 16 位的地址扩展为 20 位，具体方式如下：</p>\n<ul>\n<li>段基址：由段寄存器提供，并将寄存器值左移 4 位，将结果作为基地址。</li>\n<li>段内偏移地址：由通用寄存器来提供 (如 EIP)</li>\n</ul>\n<p>将二者相加，得到一个 20 位的地址，覆盖 CPU 20 位的寻址空间，这里给出一个例子以便于更形象的说明：</p>\n<p>例如，段基址为 <code>0x1000</code> ，段内偏移为 <code>0x1234</code> ，则此时物理地址可以由下式计算得出：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.15999999999999992em\" columnalign=\"center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mn>0</mn><mi>x</mi><mn>1000</mn><mo>&lt;</mo><mo>&lt;</mo><mn>4</mn><mo>+</mo><mn>0</mn><mi>x</mi><mn>1234</mn><mo>=</mo><mn>0</mn><mi>x</mi><mn>10000</mn><mo>+</mo><mn>0</mn><mi>x</mi><mn>1234</mn><mo>=</mo><mn>0</mn><mi>x</mi><mn>11234</mn></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin {array}{c}\n\n0x1000 &lt;&lt; 4 + 0x1234 = 0x10000 + 0x1234 = 0x11234\n\n\\end {array}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.2000000000000002em;vertical-align:-0.35000000000000003em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8500000000000001em;\"><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span><span class=\"mord mathnormal\">x</span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\">4</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">0</span><span class=\"mord mathnormal\">x</span><span class=\"mord\">1</span><span class=\"mord\">2</span><span class=\"mord\">3</span><span class=\"mord\">4</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\">0</span><span class=\"mord mathnormal\">x</span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">0</span><span class=\"mord mathnormal\">x</span><span class=\"mord\">1</span><span class=\"mord\">2</span><span class=\"mord\">3</span><span class=\"mord\">4</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\">0</span><span class=\"mord mathnormal\">x</span><span class=\"mord\">1</span><span class=\"mord\">1</span><span class=\"mord\">2</span><span class=\"mord\">3</span><span class=\"mord\">4</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.35000000000000003em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span></span></span></span></span></span></span></p>\n</div></details>\n<p>因此，这至关重要的 1MB 空间的划分是已经固定好的，每一块都有规定的用途的，被映射到不同的设备上：</p>\n<p><img data-src=\"http://imgcdn.gality.cn/blog/vj8uwa.png\" alt=\"实模式下1M寻址空间分配表\" /></p>\n<h2 id=\"bios的工作\"><a class=\"anchor\" href=\"#bios的工作\">#</a> BIOS 的工作</h2>\n<p>我们前面提到，CPU 通电后，将会执行 BIOS 程序，那么 BIOS 具体的工作有哪些呢？包括以下几步：</p>\n<ol>\n<li>开机后 CPU 的指令寄存器 \t <code>EIP</code>  被设置为地址  <code>0xFFFF0</code> ，这一地址指向 BIOS 固件上的代码，CPU 从这里执行开机后的第一条指令；</li>\n<li>CPU 开始执行 BIOS 上的代码，这一部分主要是硬件输入输出设备相关的检查，以及建立一个最初的中断向量表（后面会提到）；</li>\n<li>BIOS 代码最后阶段的工作，就是检查启动盘上的  <code>mbr</code>  分区，所谓 mbr 分区就是指磁盘上的第一个 512 bytes 的内容，又叫 <code>引导分区</code> ；BIOS 会对这 512 bytes 做一个检查：它的最后 2 个字节必须是特定的两个 magic number： <code>0x55</code>  和  <code>0xaa</code> ，否则它就不是一个合法的启动盘；</li>\n<li>检查通过后，BIOS 将这 512B 加载到内存  <code>0x7C00</code>  处，到 0x7E00 为止，然后指令跳转到 0x7C00 开始执行；至此 BIOS 退出舞台；</li>\n</ol>\n<p>我们可以将这个过程画成一个图，来帮助我们理解</p>\n<p><img data-src=\"http://imgcdn.gality.cn/blog/a4r89b.png\" alt=\"\" /></p>\n<ul>\n<li>黄色部分是 <code>mbr</code> ，被 bios 从磁盘复制到内存中去执行</li>\n<li>粉色部分是 <code>bios</code>  代码</li>\n<li>黄色部分的两边的白色部分 (0x500 开始) 是我们可以自由使用的空间</li>\n</ul>\n<h2 id=\"mbr的工作\"><a class=\"anchor\" href=\"#mbr的工作\">#</a> mbr 的工作</h2>\n<p><code>mbr</code>  的大小被限制在了 512 bytes，这对于引导一个操作系统的重任来说有点太小了，里面根本放不下太多的数据和代码，所以 <code>mbr</code>  的工作其实只是将一个 <code>laoder</code>  加载到内存，然后跳转到 <code>loader</code>  去继续执行。</p>\n<p>我们还是用一个示意图来表示这个过程的变化和内存布局：</p>\n<p><img data-src=\"http://imgcdn.gality.cn/blog/k0xq4i.png\" alt=\"mbr工作阶段内存布局\" /></p>\n<p>「假设我们把 <code>loader</code>  加载到 <code>0x8000</code>  处（可以任意指定加载的位置，只需要 <code>mbr</code>  中对应起来就可以）， <code>loader</code>  大约 4KB 大小」</p>\n<p>上一节中我们说过， <code>mbr</code>  被加载到内存后，前后都有一块可供我们自由使用的空间，前面那块 (0x500 开始) 较小，大约 30KB，而后面这块 (0x7E00 开始) 就大的多了，大约有 608KB 左右的空间，我们就可以利用这块内存空间，将 <code>loader</code>  加载进内存并执行。</p>\n<h2 id=\"牛刀小试\"><a class=\"anchor\" href=\"#牛刀小试\">#</a> 牛刀小试</h2>\n<p>理论知识已经学了很多了，但是直接就开始写一个完整 <code>mbr</code>  还是有点难度的，不如我们从 <code>hello world</code>  开始。</p>\n<div class=\"note default\">\n<p>🎯编写一个 mbr，并打印 'Hello World!'</p>\n</div>\n<p>原理：通过<span class=\"exturl\" data-url=\"aHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvSU5UXzEwSA==\"> 0x10H 中断</span>触发 bios 中的打印服务，向屏幕输出字符，该中断的调用规则为：</p>\n<table>\n<thead>\n<tr>\n<th>Teletype output</th>\n<th>AH=0Eh</th>\n<th>AL = Character, BH = Page Number, BL = <span class=\"exturl\" data-url=\"aHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvQklPU19Db2xvcl9BdHRyaWJ1dGVz\">Color</span> (only in graphic mode)</th>\n<th>no return</th>\n</tr>\n</thead>\n</table>\n<p>然后我们就可以编写代码了：</p>\n<figure class=\"highlight nasm\"><figcaption data-lang=\"NASM\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>mov <span class=\"token register variable\">ah</span>, <span class=\"token number\">0x0e</span> <span class=\"token comment\">; set tty mode</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>mov <span class=\"token register variable\">al</span>, <span class=\"token string\">'H'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>int <span class=\"token number\">0x10</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>mov <span class=\"token register variable\">al</span>, <span class=\"token string\">'e'</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>int <span class=\"token number\">0x10</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>mov <span class=\"token register variable\">al</span>, <span class=\"token string\">'l'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>int <span class=\"token number\">0x10</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>int <span class=\"token number\">0x10</span> <span class=\"token comment\">; 'l' is still on al</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>mov <span class=\"token register variable\">al</span>, <span class=\"token string\">'o'</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>int <span class=\"token number\">0x10</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>mov <span class=\"token register variable\">al</span>, <span class=\"token string\">' '</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>int <span class=\"token number\">0x10</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>mov <span class=\"token register variable\">al</span>, <span class=\"token string\">'W'</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>int <span class=\"token number\">0x10</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>mov <span class=\"token register variable\">al</span>, <span class=\"token string\">'o'</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>int <span class=\"token number\">0x10</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>mov <span class=\"token register variable\">al</span>, <span class=\"token string\">'r'</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>int <span class=\"token number\">0x10</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>mov <span class=\"token register variable\">al</span>, <span class=\"token string\">'l'</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>int <span class=\"token number\">0x10</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>mov <span class=\"token register variable\">al</span>, <span class=\"token string\">'d'</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>int <span class=\"token number\">0x10</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>mov <span class=\"token register variable\">al</span>, <span class=\"token string\">'!'</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>int <span class=\"token number\">0x10</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>jmp <span class=\"token operator\">$</span><span class=\"token comment\">;  jump to current address = infinite loop</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>times <span class=\"token number\">510</span> <span class=\"token operator\">-</span> (<span class=\"token operator\">$</span><span class=\"token operator\">-</span><span class=\"token operator\">$</span><span class=\"token operator\">$</span>) db <span class=\"token number\">0</span> <span class=\"token comment\">; fill with 0,length = (510 - previous code)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>dw <span class=\"token number\">0xaa55</span> <span class=\"token comment\">; x86 is little-endian</span></pre></td></tr></table></figure><div class=\"note info no-icon\">\n<p>nasm 语法：</p>\n<ul>\n<li><code>$</code> ：当前行在所在段的相对位移</li>\n<li><code>$$</code> ：当前段的起始地址</li>\n<li><code>dd</code> ：即  <code>define double</code> ，定义一个 4 字节值</li>\n<li><code>dw</code> ：即 <code>define word</code> ，定义一个 2 字节值</li>\n<li><code>db</code> ：即  <code>define byte</code> ，定义一个 1 字节值</li>\n</ul>\n</div>\n<p>我们把上面的代码保存成  <code>boot_hello_world.asm</code> , 然后用 <code>nasm</code>  编译他：</p>\n<p><code>nasm -fbin boot_hello_world.asm -o boot_hello_world.bin</code></p>\n<p>然后你就可以通过 <code>xxd</code>  来查看生成的 <code>bin</code>  文件:</p>\n<p><img data-src=\"http://imgcdn.gality.cn/blog/szjute.jpg\" alt=\"xxd of bin file\" height=\"561\" width=\"478\" /></p>\n<p>我们可以看到，结尾时 Magic Number  <code>0x55aa</code> ，前面是我们写的 asm 代码转成的机器码，中间用 0 填充，一共 <code>0x200</code>  也就是 512bytes。</p>\n<p>接着就可以用 qemu 来执行他了</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># mac</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>qemu-system-i386 boot_hello_world.bin</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># linux</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>qemu boot_hello_world.bin</pre></td></tr></table></figure><p>不出意外的话，你就会看到 <code>Hello World!</code>  了🎉</p>\n<p><img data-src=\"http://imgcdn.gality.cn/blog/q8kecc.png\" alt=\"qemu with hello world\" /></p>\n<h3 id=\"problem-time\"><a class=\"anchor\" href=\"#problem-time\">#</a> Problem Time</h3>\n<ol>\n<li class=\"quiz\">\n<p>以下哪行代码可以使 <code>Hello World!</code>  以绿色字体输出：</p>\n<ul class=\"options\">\n<li><code>mov bl, 0x0a</code></li>\n<li><code>mov bh, 0x0a</code></li>\n<li><code>mov bl, 0x0c</code></li>\n<li class=\"correct\">以上都不对</li>\n</ul>\n<blockquote>\n<ul class=\"options\">\n<li>该设置只有在图形化模式下才生效</li>\n<li>需设置 bl 才能影响输出字符颜色</li>\n<li>根据手册 10 才是绿色对应的代码</li>\n</ul>\n</blockquote>\n</li>\n</ol>\n<h2 id=\"更进一步打印信息\"><a class=\"anchor\" href=\"#更进一步打印信息\">#</a> 更进一步 (打印信息)</h2>\n<p>上面我们已经学会了打印字符，那么接下来我们尝试编写几个打印函数用于输出错误或信息，帮助我们在后面的过程中定位问题。</p>\n<h3 id=\"打印新行\"><a class=\"anchor\" href=\"#打印新行\">#</a> 打印新行</h3>\n<p>先简单一点，我们写一个打印换行符的函数 <code>print_nl()</code> ，其实就是依次打印 ascii 表特殊字符中的换行符，很简单，做一点点解释</p>\n<ul>\n<li>\n<p><code>\\r</code> ：对应 ascii 码为 13 的字符，表示回车，将当前位置移到本行头</p>\n</li>\n<li>\n<p><code>\\n</code> ：对应 ascii 码为 10 的字符，表示换行，将当前位置移动到下一行</p>\n</li>\n</ul>\n<details class=\"info\"><summary>print_nl()</summary><div>\n<figure class=\"highlight nasm\"><figcaption data-lang=\"NASM\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">; print a new line</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token label function\">print_nl:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    pusha</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    mov <span class=\"token register variable\">ah</span>, <span class=\"token number\">0x0e</span> <span class=\"token comment\">; tty mode</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    mov <span class=\"token register variable\">al</span>, <span class=\"token number\">0x0a</span> <span class=\"token comment\">; '\\r'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    int <span class=\"token number\">0x10</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    mov <span class=\"token register variable\">al</span>, <span class=\"token number\">0x0d</span> <span class=\"token comment\">; '\\n'</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    int <span class=\"token number\">0x10</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    popa</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    ret</pre></td></tr></table></figure></div></details>\n<h3 id=\"打印字符串\"><a class=\"anchor\" href=\"#打印字符串\">#</a> 打印字符串</h3>\n<p>然后加大一点难度，通过循环来实现一个打印字符串的函数 <code>print()</code> ，本质就是一个一个的打印字符，一些要点如下：</p>\n<ul>\n<li>因为调用 <code>print()</code>  的场景是程序运行过程中，所以函数开始要 <code>pusha</code>  保存 “现场”，在调用结束前还需要用 <code>popa</code>  还原 “现场”</li>\n<li>通过 <code>bx</code>  寄存器来传递参数 (寄存器有<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudHV0b3JpYWxzcG9pbnQuY29tL2Fzc2VtYmx5X3Byb2dyYW1taW5nL2Fzc2VtYmx5X3JlZ2lzdGVycy5odG0=\">默认的用法</span>，这里推荐用 <code>bx</code>  来传递参数)</li>\n<li>可以通过 <code>cmp</code>  和 <code>je</code>  命令来进行条件判断和分支跳转。</li>\n</ul>\n<details class=\"info\"><summary>print( [bx]string s )</summary><div>\n<figure class=\"highlight nasm\"><figcaption data-lang=\"NASM\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">; print a string pointed with bx</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token label function\">print:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    pusha</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">; keep this in mind:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">; while (string[i] != 0) &#123; print string[i]; i++ &#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">; the comparison for string end (null byte)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token label function\">print_start:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    mov <span class=\"token register variable\">al</span>, <span class=\"token operator\">[</span><span class=\"token register variable\">bx</span><span class=\"token operator\">]</span> <span class=\"token comment\">; 'bx' is the base address for the string</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    cmp <span class=\"token register variable\">al</span>, <span class=\"token number\">0</span> <span class=\"token comment\">; if '\\0', then stop loop</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    je print_end</pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token comment\">; the part where we print with the BIOS help</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    mov <span class=\"token register variable\">ah</span>, <span class=\"token number\">0x0e</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    int <span class=\"token number\">0x10</span> <span class=\"token comment\">; 'al' already contains the char</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token comment\">; increment pointer and do next loop</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    add <span class=\"token register variable\">bx</span>, <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    jmp print_start</pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token label function\">print_end:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    popa</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    ret</pre></td></tr></table></figure></div></details>\n<h3 id=\"以十六进制打印数字\"><a class=\"anchor\" href=\"#以十六进制打印数字\">#</a> 以十六进制打印数字</h3>\n<p>同样的道理，我们来将数字以 16 进制打印出来，由于我们直接是直接对接底层 CPU 的处理，没有现成的进制转换函数供我们使用，此时我们需要自己处理进制转换（数字到字符）和格式化输出，步骤如下：</p>\n<ol>\n<li>参数：通过 <code>dx</code>  寄存器来传递参数</li>\n<li>预处理：用寄存器来记录需要被转换的值，寄存器为 16 位，每次处理 4 位（一个 16 进制字符），所以要建立一个循环 4 次的函数</li>\n<li>取数字：可以通过和 <code>0x000f</code>  进行 <code>与操作</code> 的方式，来仅取出 4 位数，方便后续处理</li>\n<li>进制转换：原数字 + <code>0x30</code>  就会转换成对应的数字的字符，与 9 做比较，如果更大，就加 7（对应 ascii 表的 <code>A</code> -&gt; <code>F</code> ）</li>\n<li>格式化处理：结合索引，通过移位的方式来将字符放在合适的位置，</li>\n<li>打印：调用上面写的 <code>print()</code>  函数</li>\n</ol>\n<p><span class=\"wavy\">注意</span>：字符串在定义时末尾必须加上 <code>0</code> ，来作为字符串结束的标识（例如 <code>HEX_OUT</code> ）</p>\n<details class=\"info\"><summary>print_hex( [dx]number n )</summary><div>\n<figure class=\"highlight nasm\"><figcaption data-lang=\"NASM\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">; receiving the data in 'dx'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">; For the examples we'll assume that we're called with dx=0x1234</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token label function\">print_hex:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    pusha</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    mov <span class=\"token register variable\">cx</span>, <span class=\"token number\">0</span> <span class=\"token comment\">; our index variable</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">; Strategy: get the last char of 'dx', then convert to ASCII</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">; Numeric ASCII values: '0' (ASCII 0x30) to '9' (0x39), so just add 0x30 to byte N.</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">; For alphabetic characters A-F: 'A' (ASCII 0x41) to 'F' (0x46) we'll add 0x40</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">; Then, move the ASCII byte to the correct position on the resulting string  </span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token label function\">print_hex_start:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    cmp <span class=\"token register variable\">cx</span>, <span class=\"token number\">4</span> <span class=\"token comment\">; loop 4 times</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    je print_hex_end</pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token comment\">; 1. convert last char of 'dx' to ascii</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    mov <span class=\"token register variable\">ax</span>, <span class=\"token register variable\">dx</span> <span class=\"token comment\">; we will use 'ax' as our working register</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    and <span class=\"token register variable\">ax</span>, <span class=\"token number\">0x000f</span> <span class=\"token comment\">; 0x1234 -> 0x0004 by masking first three to zeros</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    add <span class=\"token register variable\">al</span>, <span class=\"token number\">0x30</span> <span class=\"token comment\">; add 0x30 to N to convert it to ASCII \"N\"</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    cmp <span class=\"token register variable\">al</span>, <span class=\"token number\">0x39</span> <span class=\"token comment\">; if > 9, add extra 8 to represent 'A' to 'F'</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    jle step2</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    add <span class=\"token register variable\">al</span>, <span class=\"token number\">0x07</span> <span class=\"token comment\">; 'A' is ASCII 65 instead of 58, so 65-58=7</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token label function\">step2:</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token comment\">; 2. get the correct position of the string to place our ASCII char</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token comment\">; bx &lt;- base address + string length - index of char</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    mov <span class=\"token register variable\">bx</span>, hex_string <span class=\"token operator\">+</span> <span class=\"token number\">5</span> <span class=\"token comment\">; base + length</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    sub <span class=\"token register variable\">bx</span>, <span class=\"token register variable\">cx</span> <span class=\"token comment\">; our index variable</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    mov <span class=\"token operator\">[</span><span class=\"token register variable\">bx</span><span class=\"token operator\">]</span>, <span class=\"token register variable\">al</span> <span class=\"token comment\">; copy the ASCII char on 'al' to the position pointed by 'bx'</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    ror <span class=\"token register variable\">dx</span>, <span class=\"token number\">4</span> <span class=\"token comment\">; 0x1234 -> 0x4123 -> 0x3412 -> 0x2341 -> 0x1234</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token comment\">; increment index and loop</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    add <span class=\"token register variable\">cx</span>, <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    jmp print_hex_start</pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token label function\">print_hex_end:</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token comment\">; prepare the parameter and call the function</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token comment\">; remember that print receives parameters in 'bx'</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    mov <span class=\"token register variable\">bx</span>, hex_string</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    call print</pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    popa</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    ret</pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token label function\">hex_string:</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    db <span class=\"token string\">'0x0000'</span>, <span class=\"token number\">0</span> <span class=\"token comment\">; reserve memory for our new string</span></pre></td></tr></table></figure></div></details>\n<p>完成以上打印函数后，我们可以将他们保存在 <code>print.nasm</code>  中，然后通过 <code>%include &quot;boot_print.asm&quot;</code>  的方式在别的 <code>asm</code>  中使用我们定义好的打印函数</p>\n<h2 id=\"一步登天\"><a class=\"anchor\" href=\"#一步登天\">#</a> 一步登天</h2>\n<p><s class=\"danger\">好了，现在你已经学会 1+1 了，现在请计算 9.121*7.32/6.97 吧</s></p>\n<p>根据我们之前说的，仔细想想，编写的 <code>mbr\t</code> 的功能，拆解一下其实并不复杂，本质就是读取一块硬盘，并将 <code>loader</code>  加载到内存中，然后跳转到 <code>loader</code>  执行就可以了，稍微复杂的点在于，由于历史原因，读磁盘时采用的是 CHS 的模式，这点也你会在后面更近一步学习，接着往下看吧。</p>\n<p>「以下代码的部分希望读者能自己根据原理完成，如果觉得较为困难，可以打开折叠栏查看」</p>\n<h3 id=\"nasm读硬盘\"><a class=\"anchor\" href=\"#nasm读硬盘\">#</a> nasm 读硬盘</h3>\n<p>好消息是我们无需去直接跟磁盘打交道，bios 中同样写好了读写磁盘的程序，我们只需要跟打印程序一样通过中断来调用即可。我么可以通过<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdGFuaXNsYXZzLm9yZy9oZWxwcGMvaW50XzEzLTIuaHRtbA==\"> 0x13H 中断</span>来读写磁盘，该中断的调用参数为：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">Register</th>\n<th style=\"text-align:center\">Value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">AH</td>\n<td style=\"text-align:center\">02H =&gt; bios 磁盘服务程序中的读磁盘程序</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">AL</td>\n<td style=\"text-align:center\">要读的扇区个数\t(1-128 dec.)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">CH</td>\n<td style=\"text-align:center\">磁道号的低 8 位  (0-1023 dec.)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">CL</td>\n<td style=\"text-align:center\">低 5 位为所读起始扇区号， 6-7 位表示磁道号的高 2 位 (1-17 dec.)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">DH</td>\n<td style=\"text-align:center\">所读磁盘的磁头号  (0-15 dec.)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">DL</td>\n<td style=\"text-align:center\">需要进行读操作的驱动器号 (0=A:, 1=2nd floppy, 80h=drive 0, 81h=drive 1)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ES:BX</td>\n<td style=\"text-align:center\">缓冲区地址</td>\n</tr>\n</tbody>\n</table>\n<p>返回值为：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">Register</th>\n<th style=\"text-align:center\">Value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">AH</td>\n<td style=\"text-align:center\">status  (see INT 13,STATUS)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">AL</td>\n<td style=\"text-align:center\">number of sectors read</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">CF</td>\n<td style=\"text-align:center\">0 = successful OR 1 = error</td>\n</tr>\n</tbody>\n</table>\n<p>在 mbr 启动的时候，CPU 处于实模式，此时只能使用 bios 按 CHS 的寻址方式来找到 <code>loader</code>  的位置。</p>\n<details class=\"primary\"><summary>CHS到底是什么呢？</summary><div>\n<p>CHS 即 (Cylinder/Head/Sector)，是非常古老的硬盘参数了，很久以前，硬盘的容量还很小，人们采用类似软盘的结构生产硬盘，即硬盘盘片的每一条磁道都具有相同的扇区数，由此产生了磁头数 (Heads)，柱面数 (Cylinders)，扇区数 (Sectors) 以及相应的寻址方式.</p>\n<p>其中:</p>\n<ul>\n<li>磁头数 (Heads)：表示硬盘总共有几个磁头，也就是有几面盘片，最大为 255  (用 8 个二进制位存储);</li>\n<li>柱面数 (Cylinders)：表示硬盘每一面盘片上有几条磁道，最大为 1023 (用 10 个二进制位存储) =&gt; 每条磁道都有编号，叫做磁道号；</li>\n<li>扇区数 (Sectors)：表示每一条磁道上有几个扇区，最大为  63  (用 6  个二进制位存储).</li>\n</ul>\n<p>每个扇区一般是  512 个字节，理论上讲这不是必须的，但好象没有取别的值的。</p>\n<p>因此，数据寻址方式为：先找到磁头，然后再通过柱面和扇区来确定唯一一个磁道，磁道中记录了数据。（如果你想了解<span class=\"exturl\" data-url=\"aHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvQ3lsaW5kZXItaGVhZC1zZWN0b3I=\">更多有关早期硬盘的知识</span>）</p>\n</div></details>\n<h4 id=\"参数值讲解\"><a class=\"anchor\" href=\"#参数值讲解\">#</a> 参数值讲解</h4>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">Register</th>\n<th style=\"text-align:center\">Value</th>\n<th style=\"text-align:center\">Remark</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">AL</td>\n<td style=\"text-align:center\">0x02</td>\n<td style=\"text-align:center\">要读两个扇区 (根据实际情况)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">CH</td>\n<td style=\"text-align:center\">0x0</td>\n<td style=\"text-align:center\">仍然是 0 号磁道，只不过是去读第二个扇区)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">CL</td>\n<td style=\"text-align:center\">0x02</td>\n<td style=\"text-align:center\"><code>mbr</code>  总是在 <code>fisrt of cylinder 0 of head 0 of hdd 0 </code> ，因此任何字节都只能在第二个扇区之后</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">DH</td>\n<td style=\"text-align:center\">0x00</td>\n<td style=\"text-align:center\">读取第一个磁头 (即第一个盘片)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">DL</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">由 bios 自动设置</td>\n</tr>\n</tbody>\n</table>\n<p>我们这里先将读磁盘内容的命令封装成一个函数，同时增加一点错误输出函数来帮助我们定位可能存在的错误</p>\n<details class=\"info\"><summary>disk_load([dh]sector n)</summary><div>\n<figure class=\"highlight nasm\"><figcaption data-lang=\"NASM\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">; load 'dh' sectors from drive 'dl' into ES:BX</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token label function\">disk_load:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\tpusha</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\tpush <span class=\"token register variable\">dx</span> <span class=\"token comment\">; store the argument in 'dh'</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\tmov <span class=\"token register variable\">ah</span>, <span class=\"token number\">0x02</span> <span class=\"token comment\">; 0x02 = 'read disk'</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\tmov <span class=\"token register variable\">al</span>, <span class=\"token register variable\">dh</span> <span class=\"token comment\">; al &lt;- number of sectors to read (0x01 .. 0x80)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\tmov <span class=\"token register variable\">cl</span>, <span class=\"token number\">0x02</span> <span class=\"token comment\">; cl &lt;- sector (0x01 .. 0x11)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\tmov <span class=\"token register variable\">ch</span>, <span class=\"token number\">0x00</span> <span class=\"token comment\">; ch &lt;- cylinder (0x0 .. 0x3FF, upper 2 bits in 'cl')</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\tmov <span class=\"token register variable\">dh</span>, <span class=\"token number\">0x00</span> <span class=\"token comment\">; dh &lt;- head number (0x0 .. 0xF)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t<span class=\"token comment\">; [es:bx] &lt;- pointer to buffer where the data will be stored</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token comment\">; caller sets it up for us, and it is actually the standard location for int 13h</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    int <span class=\"token number\">0x13</span>      <span class=\"token comment\">; BIOS interrupt</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    jc disk_error <span class=\"token comment\">; if error (stored in the carry bit)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    pop <span class=\"token register variable\">dx</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    cmp <span class=\"token register variable\">al</span>, <span class=\"token register variable\">dh</span>    <span class=\"token comment\">; BIOS also sets 'al' to the # of sectors read. Compare it.</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    jne sectors_error</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    popa</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    ret</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token label function\">disk_error:</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    mov <span class=\"token register variable\">bx</span>, DISK_ERROR</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    call print</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    call print_nl</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    mov <span class=\"token register variable\">dh</span>, <span class=\"token register variable\">ah</span> <span class=\"token comment\">; ah = error code, dl = disk drive that dropped the error</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    call print_hex <span class=\"token comment\">; check out the code at http://stanislavs.org/helppc/int_13-1.html</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    jmp disk_loop</pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token label function\">sectors_error:</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    mov <span class=\"token register variable\">bx</span>, SECTORS_ERROR</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    call print</pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token label function\">disk_loop:</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    jmp <span class=\"token operator\">$</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token label function\">DISK_ERROR:</span> db <span class=\"token string\">\"Disk read error\"</span>, <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token label function\">SECTORS_ERROR:</span> db <span class=\"token string\">\"Incorrect number of sectors read\"</span>, <span class=\"token number\">0</span></pre></td></tr></table></figure></div></details>\n<p>此时还没有结束，让我们写一个 <code>main</code>  函数在将所有之前写的功能串联起来吧，注意这里还有如下几点需要注意：</p>\n<ul>\n<li>开头要加上 <code>[org 0x7c00]</code> ，该命令会将后续出现的所有地址在寻址时加上该偏移，因为这里才是 <code>mbr</code>  真实执行的地址，也即我们各种数据储存的 “基地址”，如果不加的话，在寻址时会出现错误。</li>\n<li>在安全的位置设置我们自己的堆栈</li>\n<li>记得要设置 <code>bx</code>  寄存器指向 <code>loader</code>  的加载地址（因为 <code>es:bx</code>  指向读取出的硬盘数据的存储位置）</li>\n<li>由于我们还没有写 <code>loader</code> ，可以暂时先将 <code>sector 2</code>  设置成某特殊字符，来检验读取效果</li>\n</ul>\n<details class=\"info\"><summary>main.asm</summary><div>\n<figure class=\"highlight nasm\"><figcaption data-lang=\"NASM\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">[</span>org <span class=\"token number\">0x7c00</span><span class=\"token operator\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    mov <span class=\"token register variable\">bp</span>, <span class=\"token number\">0x7B00</span> <span class=\"token comment\">; set the stack safely away from us</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    mov <span class=\"token register variable\">sp</span>, <span class=\"token register variable\">bp</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    mov <span class=\"token register variable\">bx</span>, <span class=\"token number\">0x8000</span> <span class=\"token comment\">; es:bx = 0x0000:0x8000 = 0x08000</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    mov <span class=\"token register variable\">dh</span>, <span class=\"token number\">2</span> <span class=\"token comment\">; read 2 sectors</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">; the bios sets 'dl' for our boot disk number</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\">; if you have trouble, use the '-fda' flag: 'qemu-system-i386 -fda file.bin'</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    call disk_load</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    mov <span class=\"token register variable\">dx</span>, <span class=\"token operator\">[</span><span class=\"token number\">0x8000</span><span class=\"token operator\">]</span> <span class=\"token comment\">; retrieve the first loaded word, 0xdada</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    call print_hex</pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    call print_nl</pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    mov <span class=\"token register variable\">dx</span>, <span class=\"token operator\">[</span><span class=\"token number\">0x8000</span> <span class=\"token operator\">+</span> <span class=\"token number\">512</span><span class=\"token operator\">]</span> <span class=\"token comment\">; first word from second loaded sector, 0xface</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    call print_hex</pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    jmp <span class=\"token operator\">$</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token operator\">%</span>include <span class=\"token string\">\"boot_print.asm\"</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token operator\">%</span>include <span class=\"token string\">\"boot_sect_disk.asm\"</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\">; Magic number</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>times <span class=\"token number\">510</span> <span class=\"token operator\">-</span> (<span class=\"token operator\">$</span><span class=\"token operator\">-</span><span class=\"token operator\">$</span><span class=\"token operator\">$</span>) db <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>dw <span class=\"token number\">0xaa55</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token comment\">; boot sector = sector 1 of cyl 0 of head 0 of hdd 0</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token comment\">; from now on = sector 2 ...</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>times <span class=\"token number\">256</span> dw <span class=\"token number\">0xdada</span> <span class=\"token comment\">; sector 2 = 512 bytes</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>times <span class=\"token number\">256</span> dw <span class=\"token number\">0xface</span> <span class=\"token comment\">; sector 3 = 512 bytes</span></pre></td></tr></table></figure></div></details>\n<p>🎉以上就是本章的全部内容，下一章将会继续讲解 <code>loader</code>  的实现～</p>\n",
            "tags": [
                "操作系统",
                "从0到1",
                "操作系统",
                "系列长篇",
                "二进制基本功"
            ]
        },
        {
            "id": "https://gality.cn/os/01-environment/",
            "url": "https://gality.cn/os/01-environment/",
            "title": "01-环境准备",
            "date_published": "2023-08-21T02:26:23.000Z",
            "content_html": "<div class=\"note info no-icon\">\n<p>本文章中的所有实践均推荐在 Linux 环境下进行，原因在于 Linux 可以自动处理依赖关系，便捷的完成依赖工具的构建，由于博主主力电脑为 Mac，所以实践环境为 MacOS，但是大体与 Linux 没有区别，以下为默认使用的环境：</p>\n<ul>\n<li>macOS Ventura 13.4.1 (c) - 英特尔芯片</li>\n<li>qemu  8.0.4</li>\n<li>nasm 2.16.01</li>\n<li>GDB 13.2</li>\n</ul>\n</div>\n<div class=\"note warning\">\n<p><em>Concepts you may want to Google beforehand: linux, mac, terminal, compiler, emulator, nasm, qemu</em></p>\n</div>\n<h1 id=\"qemu\"><a class=\"anchor\" href=\"#qemu\">#</a> QEMU</h1>\n<p><ins class=\"wavy\">QEMU</ins>(<strong>Q</strong>uick <strong>Emu</strong>lator) 是一款免费且开源的模拟器，他通过动态二进制转换来模拟 CPU，并且提供了一组硬件和设备模型，使他能够运行多种原始操作系统；它还可以通过与 KVM 交互来以接近原生的速度运行虚拟机器。QEMU 同样可以模拟用户态进程，允许应用编译为另外一种架构的应用去运行（<s>人话版本：qemu 就是一个硬件模拟器，用来模拟计算机硬件</s>）。</p>\n<p>许多从零开始写操作系统的教程均是采用 Bochs 来作为模拟器，qemu 与其相比来说，不仅更加快速，而且提供了更多的调试手段，更加灵活，所以我们选择 qemu 来做硬件模拟。</p>\n<h2 id=\"安装\"><a class=\"anchor\" href=\"#安装\">#</a> 安装</h2>\n<p>linux 系统下可以方便的安装 qemu，而 mac 则需要通过 <code>homebrew</code>  进行安装</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># mac</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>brew <span class=\"token function\">install</span> qemu</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># linux</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">apt</span> <span class=\"token function\">install</span> qemu</pre></td></tr></table></figure><p>对于 linux 来说，qemu 是以一个整体存在的，也直接通过 <code>qemu</code>  命令运行 <code>qemu</code> ，而对于 mac 来说，qemu 会被拆分为多个部分，可以通过补全来看到所有部分：</p>\n<p><img data-src=\"http://imgcdn.gality.cn/blog/4c7nqq.png\" alt=\"\" /></p>\n<p>当安装完成后，我们可以通过 <code>qemu-system-i386</code>  来运行一个 qemu 虚拟机，如果此时你看到了这样一个黑框，那么恭喜你，qemu 就安装完成了。</p>\n<p><img data-src=\"http://imgcdn.gality.cn/blog/9qwzxs.png\" alt=\"\" /></p>\n<h1 id=\"nasm\"><a class=\"anchor\" href=\"#nasm\">#</a> NASM</h1>\n<p><ins class=\"wavy\">NASM</ins>(<strong>N</strong>etwide <strong>As</strong>se<strong>m</strong>bler ) 是一个汇编器和反汇编器，支持 x86 和 x64，被设计的非常便携和模块化。它支持多种文件类型，包括 Linux and *BSD  <code>a.out</code> , ELF, Mach-O, 16-bit and 32-bit  <code>.obj</code>  (OMF) format, COFF (including its Win32 and Win64 variants.) ；还可以输出纯二进制文件，intel hex 和 Motorola S-Record 格式。他的语法被设计的极其简单且易于理解，有点类似于<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaW50ZWwuY29tL2NvbnRlbnQvd3d3L3VzL2VuL2RldmVsb3Blci9hcnRpY2xlcy90ZWNobmljYWwvaW50ZWwtc2RtLmh0bWw=\">英特尔软件开发者手册</span>中的语法但稍微复杂一点；他支持当前所有已知的 x86 架构。</p>\n<h2 id=\"安装-2\"><a class=\"anchor\" href=\"#安装-2\">#</a> 安装</h2>\n<div class=\"note warning\">\n<p>强烈建议通过 homebrew 完整安装，尽管 mac 中 Xcode 其实内置了 nasm，但功能有所阉割，可能会在后续过程导致未知错误。</p>\n</div>\n<p>nasm 的安装也非常简单，可以直接命令安装</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># mac</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>brew <span class=\"token function\">install</span> nasm</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># linux</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">apt</span> <span class=\"token function\">install</span> nasm</pre></td></tr></table></figure><p>当你使用 <code>nasm -h</code>  成功打印出帮助信息时，则代表安装完成了。</p>\n<h1 id=\"gdb\"><a class=\"anchor\" href=\"#gdb\">#</a> GDB</h1>\n<p>现在的 Mac 不默认支持 gdb 了，想要安装 gdb 还需要折腾一番，不过这个折腾绝对是必要的，gdb 可以帮助我们调试操作系统内核甚至是我们马上就会讲到的 bios 代码，在写操作系统的过程中肯定会遇见一些奇奇怪怪的 bug，这种时候我们只有通过调试才能确定问题。</p>\n<h2 id=\"安装-3\"><a class=\"anchor\" href=\"#安装-3\">#</a> 安装</h2>\n<p>安装与使用请参考<a href=\"https://gality.cn/misc/trail-and-error/Mac%E4%B8%8B%E4%BD%BF%E7%94%A8GDB/\"> Mac 下使用 GDB</a> 和<a href=\"https://gality.cn/tools/GDB-with-QEMU/\"> GDB+QEMU 调试 mbr/loader</a></p>\n<hr />\n<p>以上就是我们在后面会用到的所有工具了，qemu 主要负责模拟一个硬件环境给我们写的操作系统去运行，而 nasm 则是帮助我们去将我们写的代码转换成机器码去给硬件执行，gdb 则是帮助我们在出现问题的时候快速 debug，通过这三个工具，我们就可以进行操作系统的编写了🎉🎉🎉</p>\n",
            "tags": [
                "操作系统",
                "从0到1",
                "操作系统",
                "系列长篇",
                "二进制基本功",
                "gdb",
                "nasm",
                "qemu"
            ]
        },
        {
            "id": "https://gality.cn/os/00-preface/",
            "url": "https://gality.cn/os/00-preface/",
            "title": "序言-操作系统从0到1",
            "date_published": "2023-08-21T01:45:16.000Z",
            "content_html": "<div class=\"note info\">\n<p>本章是操作系统从 0 到 1 系列的第一篇文章，主要说明了本系列文章的目标、章节规划、前置知识储备及参考文章；文章编写力求图文丰富、逻辑完备，利用主线把知识串联起来，最终将从 0 到 1 实现一个操作系统所需要的知识都有机结合起来。</p>\n</div>\n<p>其实本科阶段在学习操作系统的时候就有跟着清华大学的<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2tpdWtvdHN1L3Vjb3Jl\"> ucore 项目</span>，当时感觉学到了很多，但由于 ucore 是补充关键代码而非从真正意义上的 0 开始写一个操作系统，时至今日，细节已经完全模糊了，这是本系列产生的第一个原因。</p>\n<p>第二个原因也在于，之前在看 sakura 师傅的知乎问答时看到关于打基础的内容，提到了：&quot;自己写一个操作系统，并用自己的写的编译器来编译一个程序&quot;，又唤起了我之前的雄心，此时此刻，正适合有一个系列来记录这个过程，于是，<span class=\"rainbow\">Boooooom！</span></p>\n<h1 id=\"目标\"><a class=\"anchor\" href=\"#目标\">#</a> 目标</h1>\n<p>网上已经存在一些非常成熟的教程了，但可能或多或少都有一点点过时，软件版本的巨大变动使得过去教程中的一些东西可能有些过时（指的是工具部分，而非理论部分），这是我希望解决的第一个问题；同时我还希望能做到以下几点：</p>\n<ul>\n<li>\n<p>用丰富的图片去解析原理，用足够的资料去支撑理论。</p>\n</li>\n<li>\n<p>该系列将尽可能详细的对原理和实践进行解释，如果你仍然有疑问，欢迎评论，我会在看到后及时回复。</p>\n</li>\n<li>\n<p>最终实现一个微型操作系统，并在其上运行自己实现的编译器去编译运行一个程序。</p>\n</li>\n</ul>\n<h1 id=\"章节规划\"><a class=\"anchor\" href=\"#章节规划\">#</a> 章节规划</h1>\n<div class=\"note warning\">\n<p>非最终版，在系列结束后本部分会更新成确定版本</p>\n</div>\n<div class=\"note info\">\n<p>🎉🎉本系列的所有文章可以通过左手侧边栏中的系列文章索引进行快速到达～</p>\n</div>\n<ul>\n<li>序言</li>\n<li><a href=\"https://gality.cn/os/01-environment/\">环境准备</a></li>\n<li><a href=\"https://gality.cn/os/02-bios/\">BIOS 启动</a></li>\n<li>GDT 与保护模式</li>\n<li>虚拟内存实现</li>\n<li>加载并进入 kernel</li>\n<li>显示与打印</li>\n<li>全局描述符表 GDT</li>\n<li>中断处理</li>\n<li>虚拟内存完善</li>\n<li>实现堆和 malloc</li>\n<li>第一个 kernel 线程</li>\n<li>多线程切换</li>\n<li>锁于多线程同步</li>\n<li>进入用户态</li>\n<li>系统调用</li>\n<li>简单文件系统</li>\n<li>加载可执行文件</li>\n<li>键盘驱动</li>\n<li>运行 shell</li>\n</ul>\n<h1 id=\"前置知识储备\"><a class=\"anchor\" href=\"#前置知识储备\">#</a> 前置知识储备</h1>\n<p>操作系统本身就比较复杂，想自己实现操作系统并运行更需要很多其他的知识，这些知识中关于操作系统原理部分的知识会详细讲解，但涉及到工具的部分（模拟工具，编译工具等等）就不会过多的深入，只会讲一点于实现操作系统有关的部分，一切为主线服务。</p>\n<p>如果你已经具备以下知识，那么你可能可以较为轻松的接受本系列所讲知识，并将主要精力放在代码实践上，而如果你不是很了解以下知识，其实也没关系，不明白了就去搜索学习就好，带着问题学知识本身就是一种很好的学习方式，这些知识包括：</p>\n<ul>\n<li>C 语言能力</li>\n<li>一点 x86 汇编能力（可以在项目中提高）；</li>\n<li>熟练使用 Linux 系统，以及 Linux 下的系统编程经验；</li>\n<li>gcc，Makefile 等工具的使用；</li>\n<li>对编译，链接，执行代码的原理有足够的认识；</li>\n<li>硬件以及 OS 对内存的管理原理，尤其是虚拟内存；</li>\n<li>程序在操作系统中的加载，执行过程，内存的使用和分布；</li>\n<li>中断的概念和处理；</li>\n<li>进程，线程的概念及原理；</li>\n<li>多线程编程，同步与锁的概念；</li>\n</ul>\n<h1 id=\"参考文章\"><a class=\"anchor\" href=\"#参考文章\">#</a> 参考文章</h1>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3J1aWVycy9vcy10dXRvcmlhbC1jbi90cmVlL2NoaW5lc2U=\">https://github.com/ruiers/os-tutorial-cn/tree/chinese</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zZWdtZW50ZmF1bHQuY29tL2EvMTE5MDAwMDA0MDEyNDY1MA==\">https://segmentfault.com/a/1190000040124650</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93aWtpLm9zZGV2Lm9yZy9NYWluX1BhZ2U=\">https://wiki.osdev.org/Main_Page</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2NmZW5vbGxvc2Evb3MtdHV0b3JpYWw=\">https://github.com/cfenollosa/os-tutorial</span></li>\n</ul>\n",
            "tags": [
                "操作系统",
                "从0到1",
                "操作系统",
                "系列序言",
                "系列长篇",
                "二进制基本功"
            ]
        },
        {
            "id": "https://gality.cn/daily/DailyRecord/",
            "url": "https://gality.cn/daily/DailyRecord/",
            "title": "九天揽月",
            "date_published": "2023-08-17T04:19:28.000Z",
            "content_html": "<div class=\"note info no-icon-with-header\">\n<h1 id=\"dig-deeper\"><a class=\"anchor\" href=\"#dig-deeper\">#</a> <ins class=\"danger\">Dig Deeper</ins></h1>\n<ol>\n<li>😁 记录不追求形式，以最舒服的方式进行记录即可。</li>\n<li>🗺️ 每天在总结时要总结所学内容在整体中的位置，不能只是闷着头只做知识储备。</li>\n<li>🧐 及时记录迸发的想法，哪怕无果而终，也要留有痕迹。</li>\n</ol>\n</div>\n<h1 id=\"daily-record\"><a class=\"anchor\" href=\"#daily-record\">#</a> Daily Record</h1>\n<h2 id=\"2023-第45周\"><a class=\"anchor\" href=\"#2023-第45周\">#</a> 2023 - 第 45 周</h2>\n<h3 id=\"1030-1031\"><a class=\"anchor\" href=\"#1030-1031\">#</a> 10.30-10.31</h3>\n<p>上课 &amp; 写作业，学习了 IRIG-B 的含义和结构，IRIG-B 广泛应用于卫星和光纤中，还是非常有用的。</p>\n<h2 id=\"2023-第44周\"><a class=\"anchor\" href=\"#2023-第44周\">#</a> 2023 - 第 44 周</h2>\n<h3 id=\"1027\"><a class=\"anchor\" href=\"#1027\">#</a> 10.27</h3>\n<p>记住：什么都懂一点并不值得骄傲，只有在某一领域有深入研究、有成果的基础上，才是优点。</p>\n<h3 id=\"1026\"><a class=\"anchor\" href=\"#1026\">#</a> 10.26</h3>\n<p>彻底搞清楚了光纤通信的基本原理和波分复用技术的原理，明天继续看 IRIG-B 编码！</p>\n<p>针对昨天提出的 “劣币驱逐良币” 问题，进一步思考了一下，希望能系统的总结成文章～</p>\n<h3 id=\"1025\"><a class=\"anchor\" href=\"#1025\">#</a> 10.25</h3>\n<p>主要时间都在鉴别礼物，另外学了一点光纤授时中涉及到的一些原理如光纤通讯、波分复用技术等，不得不说，在现在这个时代，买东西想不被骗对于购买者真的是一个很高的要求，100 元的东西，10 元原材料、90 元营销宣发照样可以赚的盆满钵满。过去酒香不怕巷子深、踏踏实实做东西的认知已经过时了，现在这个时代，关注短期利益、赚一波钱再换个商标继续赚钱就可以了。监管不严、惩罚力度小，最终都成了劣币驱逐良币的最佳土壤！哀哉！哀哉！</p>\n<h3 id=\"1024\"><a class=\"anchor\" href=\"#1024\">#</a> 10.24</h3>\n<p>电脑莫名其妙的更新了系统，导致诸多软件不兼容，上午就在处理各种 bug，下午继续学习了机器学习的课程，明天更新 “正则化” 的知识。</p>\n<h3 id=\"1023\"><a class=\"anchor\" href=\"#1023\">#</a> 10.23</h3>\n<p>除了上课之外的时间都在踩坑，终于是在今天内选择出了一套完整好用的论文编写和管理方案，总结成博客后就可以继续向前了！</p>\n<h2 id=\"2023-第43周\"><a class=\"anchor\" href=\"#2023-第43周\">#</a> 2023 - 第 43 周</h2>\n<h3 id=\"1020\"><a class=\"anchor\" href=\"#1020\">#</a> 10.20</h3>\n<p>上课 &amp; 做 PPT，然后就没有时间了，但是对未来的研究方向有了突破口，还是非常激动人心的！</p>\n<h3 id=\"1019\"><a class=\"anchor\" href=\"#1019\">#</a> 10.19</h3>\n<p>整整一天的课，不过还是猛猛抽时间完成了机器学习的第一个大作业，芜湖！</p>\n<h3 id=\"1018\"><a class=\"anchor\" href=\"#1018\">#</a> 10.18</h3>\n<p>今天有大量时间，在看机器学习的第一个作业：新冠病例预测，透过大作业去学习学的还是挺快的，状态也不错，跟学长的交流也很有收获，真是幸福的一天～</p>\n<h3 id=\"1017\"><a class=\"anchor\" href=\"#1017\">#</a> 10.17</h3>\n<p>基本一直在看网课，网课还是挺长的，目前看的进度有点慢，计划努努力，尽快开始第一个练习，希望能从问题中反驱学习。</p>\n<h3 id=\"1016\"><a class=\"anchor\" href=\"#1016\">#</a> 10.16</h3>\n<p>由于在入门机器学习，就想着先找个感兴趣的项目下载下来玩一玩，看看大概是什么样的，最终在处理了两天 bug 后觉得可以放弃了，就以现在手中这台 Mac 的能力，完全不支持自己训练模型，不如老老实实的看网课，做一些配套的练习题实在。</p>\n<h2 id=\"2023-第42周\"><a class=\"anchor\" href=\"#2023-第42周\">#</a> 2023 - 第 42 周</h2>\n<h3 id=\"1013-1015\"><a class=\"anchor\" href=\"#1013-1015\">#</a> 10.13-10.15</h3>\n<p>搜集了很长时间资料，跟老师聊了一下才发现思路完全是错的，正确的思路应该是：</p>\n<ol>\n<li>考虑过去做的事情的经验</li>\n<li>考虑现有的资源</li>\n</ol>\n<p>最终汇总成 2～3 个方面，从中选择感兴趣的方向。另外还有两点问题需要反思：</p>\n<ol>\n<li>更多的跟学长学姐们交流自己不明白的地方，不要包装用词</li>\n<li>要踏踏实实的做科研，不能对未来过于乐观，不能认为时间还有很长，要聚焦于短时间（两年）内能做的事</li>\n</ol>\n<h3 id=\"1012\"><a class=\"anchor\" href=\"#1012\">#</a> 10.12</h3>\n<p>基本完成了数理统计大作业了，还剩一点点小尾巴，明天可以很快弄完。</p>\n<p>导师又找我聊了聊授时和研究方向的问题，聊了很长时间，收获也很大。记录一些我认为的要点：</p>\n<ol>\n<li>批判性读论文。其实读论文不带脑子的问题我在 9.25-9.26 中提出了，但还是比较模糊，会有种「因为自己不了解相关知识，于是就把所有都当成 “定理” 去接受了」这样的认知，今天看了老师读论文的笔记后，我突然意识到，上述说的并不构成理由，恰恰是因为没有批评思维，才会觉得读起论文来知识体系非常模糊。提出问题其实不是一定提出 “真实的问题”，而是 “自己的问题”，正是这些问题，这些疑问才能促使思考，为信息收集该如何扩展指明方向。</li>\n<li>知识收集要从博客转向论文。我认为是惯性问题，但是也必须要改变才可以。除了惯性外，英语阅读能力也需要提升。</li>\n<li>倒着想时间 &amp; 规划。老师确实否定了我很快发论文的想法，但也给了很好的时间参考。我现在暂时把目标定为这一学期内能发第一篇论文的初稿，那按时间倒推，留半年时间写论文的话，我就需要在这学期选定方向、定下论文思路、完成数学推导了。时间很紧张，留给我定方向的时间不多了，请在下周内至少完成粗略领域筛选，最好完成细分领域的筛选。</li>\n<li>选择感兴趣的方向。但我认为，选择感兴趣的方向其实稍微有点伪命题的意思，最佳选择其实不是最感兴趣的方向，而是  <code>兴趣 + 前景 + 知识背景</code>  三者的综合最优。所以我暂时想到的寻找办法是：\n<ol>\n<li>先确定搜索的范围，一定是顶刊（只局限安全的顶刊？还是包括非安全领域？）</li>\n<li>按领域进行分类，类内按引用数进行排序</li>\n<li>粗看论文，大致搞清楚各个领域的研究边界（3-6 个好像都可以接受）</li>\n<li>综合自己的特点和背景，确定自己感兴趣的领域（1-2 个）</li>\n<li>批判性的找综述类的论文来读，了解该领域下的细分方向，二次确认 “兴趣” 领域（1 个）</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"1011\"><a class=\"anchor\" href=\"#1011\">#</a> 10.11</h3>\n<p>学习了 Monte Carlo 算法，看懂了大作业题目 hhh，写了一部分大作业，明天又是一天课，能写完我就知足了。</p>\n<h3 id=\"1010\"><a class=\"anchor\" href=\"#1010\">#</a> 10.10</h3>\n<p>把之前草草看过的机器学习的笔记做了一下，在这次笔记记录过程中发现了一个问题，有太大量的篇幅是对原文的摘抄或翻译，做笔记的目的不是为了重复劳动，而应该是促使自己思考的，所以在下一次的笔记中，一定要注意这一点，把知识揉碎了形成一个整体再去形成自己的笔记，这样才会有收获。</p>\n<h3 id=\"109\"><a class=\"anchor\" href=\"#109\">#</a> 10.9</h3>\n<p>上课狗，抽时间做组会分享的 PPT，好多 qaq，今天一定要做完！</p>\n<h2 id=\"2023-第41周\"><a class=\"anchor\" href=\"#2023-第41周\">#</a> 2023 - 第 41 周</h2>\n<h3 id=\"103-108\"><a class=\"anchor\" href=\"#103-108\">#</a> 10.3-10.8</h3>\n<p>一直头痛，就没有更新了，顺便说一句，学校不补课真是太 coooooool 了～</p>\n<h3 id=\"102\"><a class=\"anchor\" href=\"#102\">#</a> 10.2</h3>\n<p>基本搞懂了极化码的原理，尝试着继续看论文。</p>\n<h2 id=\"2023-第40周\"><a class=\"anchor\" href=\"#2023-第40周\">#</a> 2023 - 第 40 周</h2>\n<h3 id=\"101\"><a class=\"anchor\" href=\"#101\">#</a> 10.1</h3>\n<p>越学学多，深度优先搜索还没有收敛，已经追到信息论的知识了，明天补一下，希望能回到论文继续看。</p>\n<h3 id=\"930\"><a class=\"anchor\" href=\"#930\">#</a> 9.30</h3>\n<p>完成了时间的分发部分，具体细节没有追的特别细，公式基本看懂了。</p>\n<h3 id=\"929\"><a class=\"anchor\" href=\"#929\">#</a> 9.29</h3>\n<p>小学了一会儿，大概弄懂了授时中时间是怎么产生的了，还是很不错的，明天继续！</p>\n<h3 id=\"927-928\"><a class=\"anchor\" href=\"#927-928\">#</a> 9.27-9.28</h3>\n<p>课程加党日活动把时间占的很满，没有太多时间可以学习自己东西，抽时间完成了科协第一课的 ppt，还有 1000 字的思想汇报和论文精读，本来想着国庆能摆一摆，真实情况是可能得加班加点的学习<sup>_</sup></p>\n<h3 id=\"925-926\"><a class=\"anchor\" href=\"#925-926\">#</a> 9.25-9.26</h3>\n<p>上课连着组会，其实没有太多时间干自己的事，主要是继续读论文；在组会分享中发现了一些问题，需要尽快解决：</p>\n<ol>\n<li>怎样读论文？重点注意哪些？在泛读时需要达到什么程度？</li>\n<li>要注意知识的背景，将整个授时的过程研究明白</li>\n<li>在读论文时一定要<strong>带着脑子</strong>读，多提出问题。</li>\n</ol>\n<h2 id=\"2023-第39周\"><a class=\"anchor\" href=\"#2023-第39周\">#</a> 2023 - 第 39 周</h2>\n<h3 id=\"922\"><a class=\"anchor\" href=\"#922\">#</a> 9.22</h3>\n<p>周末接着读了论文，然后提前回家了～小摆一下</p>\n<h3 id=\"921\"><a class=\"anchor\" href=\"#921\">#</a> 9.21</h3>\n<p>今天真一天课，本来想利用空闲时间搜一下论文做脑图，结果学校的光纤被挖断了，看不了论文，被迫更新了操作系统的第五章 QAQ。</p>\n<h3 id=\"919-920\"><a class=\"anchor\" href=\"#919-920\">#</a> 9.19-9.20</h3>\n<p>上课 &amp; 找论文资料，经过一番搜索初见端倪，大概理解授时技术到底是在干嘛了，关键词也从 <code>PNT timing security</code>  -&gt;  <code>time protocol security</code>  -&gt;  <code>timing synchronization security</code> ，基本找到想要的内容了。</p>\n<p>另外还完成了操作系统第四篇文章的代码 Debug，只能说，因为 include 顺序导致的编译错误这种 bug 真的想象不到，还浪费时间，可恶！</p>\n<h3 id=\"918\"><a class=\"anchor\" href=\"#918\">#</a> 9.18</h3>\n<p>非常充实的一天，忙到 12 点才睡，上了一天课，又抽时间帮学弟学妹们完成了面试复盘，明天开始正式迈入科研生活，任务：寻找论文资料并完成研究现状、安全挑战两块内容。</p>\n<h2 id=\"2023-第38周\"><a class=\"anchor\" href=\"#2023-第38周\">#</a> 2023 - 第 38 周</h2>\n<h3 id=\"915\"><a class=\"anchor\" href=\"#915\">#</a> 9.15</h3>\n<p>继续被上课和预算填满，抽时间继续更新了资源导引页，新增了「搜寻学习资源」的类目，这里面的网站真是我不愿说出的信息差，不过呢，即然都说了「开发共享」，又怎么能有所保留呢？</p>\n<p>同样给自己留一个思考题：目前本页的更新中，由于每天记录内容其实很短，反倒是标题占用了大多数的空间，信噪比太低了，要考虑要不要优化一下格式了。</p>\n<h3 id=\"914\"><a class=\"anchor\" href=\"#914\">#</a> 9.14</h3>\n<p>上课！好多课！其余时间都在整资源页，终于小具规模，还是很有成就感的，希望能帮助到一些人，这里补一下想做但还没有做的分类：图书推荐、安全资讯平台汇总、赚点外快....（暂时先这么多）</p>\n<h3 id=\"913\"><a class=\"anchor\" href=\"#913\">#</a> 9.13</h3>\n<p>上午上课加忙预算，下午完成了 Mac 下 gdb 的安装，真不戳～</p>\n<h3 id=\"912\"><a class=\"anchor\" href=\"#912\">#</a> 9.12</h3>\n<p>一整天都在重新调整整个预算表格的格式，估计是要熬夜才能改完了 Orz</p>\n<h3 id=\"911\"><a class=\"anchor\" href=\"#911\">#</a> 9.11</h3>\n<p>上了整天课，课上又没发干自己的事，完全没有时间做其他的事情🥺</p>\n<h2 id=\"2023-第37周\"><a class=\"anchor\" href=\"#2023-第37周\">#</a> 2023 - 第 37 周</h2>\n<h3 id=\"99-910\"><a class=\"anchor\" href=\"#99-910\">#</a> 9.9-9.10</h3>\n<p>周末好好玩～</p>\n<h3 id=\"98\"><a class=\"anchor\" href=\"#98\">#</a> 9.8</h3>\n<p>Debug 中，操作系统好难调试，没有办法进行指令调试，只能插值来调试，去了解下怎么用 qemu 做调试？留个小任务，去学着调试下吧。</p>\n<h3 id=\"97\"><a class=\"anchor\" href=\"#97\">#</a> 9.7</h3>\n<p>终于有时间做自己的事情了，上午修复了一下博客的评论 bug，为静态资源配置了 cdn 加速；下午看了会儿塔式服务器（万一用上呢！），然后继续修改部分预算问题并继续进行操作系统的更新，完成了保护模式的部分。</p>\n<h3 id=\"96\"><a class=\"anchor\" href=\"#96\">#</a> 9.6</h3>\n<p>上午完成了预算的初稿，下午去找了财务的老师核对各项问题，晚上还挺有状态的完成了操作系统的 <code>GDT</code>  和保护模式的部分内容，还不错～明天要把～～ <code>loader</code> ~~ 保护模式写完进入虚拟内存的章节啦</p>\n<h3 id=\"94-95\"><a class=\"anchor\" href=\"#94-95\">#</a> 9.4-9.5</h3>\n<p>预算工作第一版接近尾声，一定要把第一版写完，明天开始继续操作系统</p>\n<h2 id=\"2023-第35-36周\"><a class=\"anchor\" href=\"#2023-第35-36周\">#</a> 2023 - 第 35-36 周</h2>\n<h3 id=\"92-93\"><a class=\"anchor\" href=\"#92-93\">#</a> 9.2-9.3</h3>\n<p>周末基本在学校活动、应酬、改预算之间度过，操作系统 0...</p>\n<h3 id=\"91\"><a class=\"anchor\" href=\"#91\">#</a> 9.1</h3>\n<p>操作系统进度缓慢，明天尽量把预算弄完，然后好好学操作系统吧</p>\n<h3 id=\"831\"><a class=\"anchor\" href=\"#831\">#</a> 8.31</h3>\n<p>接触了点项目预算编写的知识并编写了一份财务预算说明书，抽了一点时间给操作系统的第四篇文章开了点头，希望两天内能完成第四章吧，加油！</p>\n<h3 id=\"830\"><a class=\"anchor\" href=\"#830\">#</a> 8.30</h3>\n<p>开学报道～参观了一下学校，体验了食堂，还是很不戳的～</p>\n<h3 id=\"827-829\"><a class=\"anchor\" href=\"#827-829\">#</a> 8.27-8.29</h3>\n<p>又是当懒狗的一天，摆了很长时间，好在迷途知返，抽了点时间看操作系统～</p>\n<h3 id=\"825-826\"><a class=\"anchor\" href=\"#825-826\">#</a> 8.25-8.26</h3>\n<p>抽空回家进行了各种档案工作，陪陪家人，基本摸不到电脑...</p>\n<p>不过还是利用一点点时间把操作系统第 3 章完成了✌️</p>\n<h3 id=\"824\"><a class=\"anchor\" href=\"#824\">#</a> 8.24</h3>\n<p>难得休息，打了打游戏，出去应酬了一圈，就没有进行学习任务 (爽～</p>\n<h3 id=\"823\"><a class=\"anchor\" href=\"#823\">#</a> 8.23</h3>\n<p><s class=\"danger\">终于，项目结束了，可以好好休息一下了，幸福到流泪😭</s></p>\n<p>上午完成了 baidu、google、bing 的 SEO 索引，等待一天时间就可以看分析数据了，可以通过改善关键字来提升 SEO 排名，既然准备好好经营，为什么不让更多人看到呢😊</p>\n<p><s>必须吐糟一下，baidu 的这个站长工具真的垃圾，google 3 分钟就配好了，就这个百度，用站长工具还需要实名认证，实名认证就算了，还需要扫脸，牛</s></p>\n<p>下午接着完成 <code>mbr</code>  编写的剩余部分的内容，还是剩一点点小尾巴没有完成，有一点点可惜，留着明天完成吧～😁</p>\n<h3 id=\"822\"><a class=\"anchor\" href=\"#822\">#</a> 8.22</h3>\n<p>整体效率还行，完成了博客的 aligolia 的搜索配置，完成了操作系统从 0 到 1 的第二篇文章，第三篇开了个头，使用 figma 作为画图工具还是有些大材小用了，浪费了点时间，需要找一个功能更简单、更便捷的画图工具！</p>\n<h3 id=\"821\"><a class=\"anchor\" href=\"#821\">#</a> 8.21</h3>\n<p>今天效率极低，只完成了操作系统序言部分的编写还大多都是借鉴别佬的，感觉稍微有点浮躁，没有沉下心，倒是听了很多财经的科普 hhh，明天要调整下状态好好学技术～</p>\n<h2 id=\"2023-第34周\"><a class=\"anchor\" href=\"#2023-第34周\">#</a> 2023 - 第 34 周</h2>\n<h3 id=\"820\"><a class=\"anchor\" href=\"#820\">#</a> 8.20</h3>\n<p>继续处理博客的遗留问题，包括：</p>\n<ul>\n<li>精选分类封面图片无法加载</li>\n<li>主题特殊样式学习</li>\n<li>主题样式的一点点 bug 的修复</li>\n<li>comment 表情包引入</li>\n<li>默认模版更新</li>\n</ul>\n<p>其实都是小问题，中间由于要调 bug，也去学习了一点 <code>Nunjunks</code>  和 <code>stylus</code>  语法，对于 hexo 的实现和现在使用的主题的实现都有了一定了解，可以更好 DIY 了😁</p>\n<p>对于博客的改动基本进入尾声了，之前预留的待踩坑项也都完成的七七八八了，后面就要注重内容的填充了，冲！</p>\n<h3 id=\"818-819\"><a class=\"anchor\" href=\"#818-819\">#</a> 8.18-8.19</h3>\n<p>虽然是偷偷摸摸，但终算有点时间打理一下博客，完成了博客配色的改变、评论管理系统搭建、图床的适配等等，基本将博客的整体架子搭出来了，后面就算再加，也只是功能的完善、调整或新增。现在其实更重要的是把博客的内容丰富起来了，加油！</p>\n<p>今天反思了一下过去写博客的经历，仔细想想其实之前也有过坚持日更坚持一年的情况，但是随着电脑的更换、服务器的到期最终连记录都已经找不到了，确实有点可惜，希望这次依托 github 可以将数据永久保留，使得我可以再走了很久之后可以回头看看自己来时的路。</p>\n<h3 id=\"817\"><a class=\"anchor\" href=\"#817\">#</a> 8.17</h3>\n<p>情况稍有转机，工作内容有了变化，可以使用自己的电脑了，做了 4 个 1day 的漏洞复现，也算是有些收获吧，顺便开始回忆起了一点点 web 手的记忆 hhh~</p>\n<h3 id=\"814-816\"><a class=\"anchor\" href=\"#814-816\">#</a> 8.14-8.16</h3>\n<p>本来雄心壮志且状态在线的立刻开始记录每日的学习，但实际上却被外部条件无奈的阻止了，迫不得已暂时停止开始坐牢...</p>\n",
            "tags": [
                "日常"
            ]
        },
        {
            "id": "https://gality.cn/ponder/%E9%9D%A2%E8%AF%95%E5%A4%8D%E7%9B%98/",
            "url": "https://gality.cn/ponder/%E9%9D%A2%E8%AF%95%E5%A4%8D%E7%9B%98/",
            "title": "科技协会面试反思与总结",
            "date_published": "2023-08-14T08:02:17.505Z",
            "content_html": "<div class=\"note warning\">\n<p>本篇文章只是我结合了自己两年面试 + 两年旁听的经历的一些思考与总结，中间可能有些想法并不准确，只是希望能有抛砖引玉的作用，能引发学弟学妹们的一些思考；如果你在看的过程中对任何想法有所质疑，欢迎在评论区中留言讨论👏</p>\n<p>为了尽量对一些想法做出没有歧义的解释，部分内容的论述稍显冗余，如果你可以很容易的理解我想说的，那就下一条吧！理解万岁🎉</p>\n</div>\n<div class=\"note primary no-icon\">\n<p>🎯 总的来说，我认为对于 SIPC 的面试官而言，应该做到以下几点：</p>\n<ol>\n<li>明确对面试的认知，摆正心态，能动的设计流程和问题，注重问题的深度而非广度。</li>\n<li>帮助面试者挖掘自身实力与优势，尽量屏蔽因紧张、社恐导致的发挥失常。</li>\n<li>注重挖掘面试者的「真实水平」，不要把重心放在问题是否正确回答了，而应该注重回答的过程，以及隐藏在其下的思考问题的逻辑。</li>\n<li>精心设计题目难度与提问方式，注重引导面试者思考问题。</li>\n<li>因人而异的设置面试策略和评价标准，根据个人特点调整 Task 任务策略。</li>\n<li>从技术和团队的两方面来考虑面试者，诚然有些人技术非常优秀，但可能并不太适合团队合作或 SIPC，So～</li>\n</ol>\n</div>\n<h1 id=\"理念篇\"><a class=\"anchor\" href=\"#理念篇\">#</a> 理念篇</h1>\n<h2 id=\"面试认知\"><a class=\"anchor\" href=\"#面试认知\">#</a> 面试认知</h2>\n<p>在所有讨论之前，我想先说下对于面试的认知，希望能给面试官一点启发，包括：</p>\n<ul>\n<li>面试的目的是为了深入了解面试者，而非难倒面试者。</li>\n<li>面试官其实是 “服务者”，面试的目的是帮助面试者展现他们的优势。</li>\n<li>面试并非轻松的按流程提问，而是需要消耗大量脑力去对问题进行精心设计，进而达到我们了解面试者的目的。</li>\n<li>要注重差异性，对于不同的面试者采取不同的提问策略和评价标准。</li>\n<li>科协的面试官其实是与面试者共同成长的，要在心态上摆正位置。</li>\n</ul>\n<p>思想上的认识是最为重要的，因此以上几点在后面还会反复提及。</p>\n<p>我想说的是，各位面试官能最终进入 SIPC，都是非常优秀的，本身就是一种能力的证明，我们不应该死板的套公式去面试，而应该充分解放思想，抓住我们面试的核心目的，所有流程、规范都是为「<strong>深入了解面试者</strong>」这个核心服务的，也就是说，只要能达到这个目的，采用什么样的手段其实并不重要。</p>\n<h2 id=\"两轮面试\"><a class=\"anchor\" href=\"#两轮面试\">#</a> 两轮面试</h2>\n<p>在科技协会历来的传统中（至少从我开始），整体包括两轮面试，那么为什么安排两轮面试？以及每轮面试中面试官需要重点侧重于哪方面的考察？这些问题是我们应该思考的。以下我们详细谈谈。</p>\n<p>在我个人的理解中，两轮面试的好处如下：</p>\n<ol>\n<li>两轮面试侧重方面不同，帮助全方位的、可信的考察面试者。</li>\n<li>尽量排除一次面试中可能出现的各种人为因素。</li>\n<li>通过两轮面试中的时间差确定面试者短期学习能力和时间规划能力。</li>\n</ol>\n<p>接下来我们分点来详细论述：</p>\n<h3 id=\"不同的侧重\"><a class=\"anchor\" href=\"#不同的侧重\">#</a> 不同的侧重</h3>\n<div class=\"note info no-icon\">\n<p>我个人认为在一轮面试中需要侧重面试者画像建构，二轮面试中侧重面试者画像验证；两轮面试其实是前后相承的，二者顺序不可调换，虽然可以二合一，但是这样效果可能并不太好。</p>\n</div>\n<p>我们从两轮面试中不同的面试形式说起，在我们这一届中，一面的形式采用 <code>面试</code>  + <code>一点点的题目考查</code> ；二面的形式采用 <code>无领导讨论</code>  + <code>代码测试</code>  + <code>面试</code> 的形式。这两种形式中其实就体现了两轮面试侧重点的不同了。</p>\n<h4 id=\"面试者画像建构\"><a class=\"anchor\" href=\"#面试者画像建构\">#</a> 面试者画像建构</h4>\n<p>为了准确建构面试者画像，在第一轮面试中我们需要做到两件事：</p>\n<ol>\n<li>确定 C 语言真实水平</li>\n<li>对综合素质进行考察与记录</li>\n</ol>\n<p>C 语言的考察只是为了测试面试者是否真实的达到了他完成的 Task 的水平，所以我会注重 C 语言<strong>基础知识</strong>的考察，只要确定出 C 语言真实水平即可；在测试出真实水平的同时，也可以侧面看出面试者对于对于学习知识的态度，到底是急匆匆的学习新知识？还是稳扎稳打的前进？还是学不会一个知识点就不前进？这几者在我的观念中，这几者其实并没有显著优势的学习方案，但是我们必须了解到这点，并帮助面试者进行相应的调整。</p>\n<p>但是，其实就算是没有 C 语言进度也是无所谓的，在一面中，我是可以接受面试者仅仅是刚刚接触 C 语言甚至是还没有进行 C 语言学习（当然，面试者必须能够说明自己态度是端正的）。刚经历了高考的折磨，在高三的暑假中好好玩一下又有什么不好呢？0 基础并不影响一个人的优秀，就像有基础也不代表一定会被录取😊，但是如果我发现了面试者试图欺骗我，那么不好意思，这个会很扣分。</p>\n<p>但但是，其实 C 语言的分数占比挺小的（欺骗除外），大概会占 20%-30% 左右。我会更加侧重于对面试者的性格、目标、时间规划、逻辑能力等<strong>综合素质</strong>进行考察。其实就是是聊天啦，一方面可以一定程度上消除面试者的紧张感，另外一方面这种开放式的问题非常考察综合素质；这一点我发现学弟学妹们也会有相应的题库，但是对于回答到底应该 <code>听什么</code> 、 <code>怎么听</code> 以及 <code>怎么追问</code> 上还是欠缺思考，这点我在后面章节会详细讨论。</p>\n<p><strong>总的来说</strong>，一轮面试中面试官做的更多的是信息的搜集工作，在这个过程中我们可以通过对一些问题的回答来进行交叉对比和逻辑推演，进而识别一些掩饰或谎言；但我们在这个阶段更重要的工作是尽可能详细的建构面试者的真实画像并记录下来，以方便在二面中进行针对性的提问和验证。这并不是说在一轮面试中不会刷掉任何人，某些态度不端、品行不端、理念不合的人趁早刷掉就好。</p>\n<h4 id=\"面试者画像验证\"><a class=\"anchor\" href=\"#面试者画像验证\">#</a> 面试者画像验证</h4>\n<p>了解到现在的二面中已经没有了无领导讨论环节，那么对于一面中建构的综合素质画像就无法很好的验证，但这一点其实也还好，可以通过采用初期培训过程中学长学姐与小组配对的形式，通过学长学姐对小组的观察进行判断；另外，素质考察并不是二面的侧重点，在二面中就需要侧重对技术能力的考察（当然，我们本质其实看的是学习能力），毕竟我们是一个以技术能力作为核心竞争力的组织。</p>\n<p>所以，在二面 C 语言考察中，就可以稍微涉及一些<strong>相对</strong>比较偏的知识点了，但这里我要强调，我们出题的目的不是为了得到正确的答案，而是听面试者思考的过程，所以我们不能只是在听到面试者回答出正确 / 错误答案后，一句：” 不错 / 下去再了解下吧 “就完事了，对于正确答案，我们要进一步追问:</p>\n<ul>\n<li>为什么是这样？</li>\n<li>答案的依据是什么？</li>\n<li>那如果变一下还成立吗？</li>\n</ul>\n<p>对于回答不出来或错误答案的情况，我们需要引导面试者：</p>\n<ul>\n<li>你仔细想想 xxx（前置知识）是怎么样的？</li>\n<li>没关系，说说你的思路吧！</li>\n<li>如果我告诉你 xx（可能的疑难点或记忆点）是这样的，那么你有思路吗？</li>\n</ul>\n<p>注意这里我用了相对两字，如果是太偏的知识点其实是没有意义的，哪怕面试者说不出来又能怎样呢？我们也无法判断他到底是否优秀，所以，作为面试官，一定要精心的设计题目的难度和知识点范围，可以通过<strong>组合知识点</strong>来增加难度，而不要去追着一些偏门的知识进行询问，这样才能得到有意义的回答。</p>\n<p>在验证面试者技术能力的时候一定要与一面中构建的画像进行比对，进而构建二面的问题。例如，对于一个基础不牢的面试者，我们在一面中留的任务是好好复习一下已经学过的内容，那么我们就需要在二面中对于基础知识进行重点考察，观察面试者能否在我们的指导下克服自己的劣势面，这不仅是学习能力的证明，同样也是有无成长可能的证明。通过对每个人的问题的精心设计，我们也可以去验证该面试者在一面中对于自己的评价是否可信，只有通过了交叉对比，我们才算是完成了面试者画像的构建与验证，如果无法通过，我们就要及时修正我们的画像，再去考量该面试者是否通过。</p>\n<h3 id=\"排除人为因素\"><a class=\"anchor\" href=\"#排除人为因素\">#</a> 排除人为因素</h3>\n<div class=\"note info no-icon\">\n<p>要尽可能客观公正的评价每一位面试者，摒除面试中人为因素的影响；同时要记住，面试官是与面试者一同成长的关系！</p>\n</div>\n<p>在面试中，影响面试结果的人为因素来源于两方面：</p>\n<ul>\n<li>面试官的个人因素</li>\n<li>面试者的个人因素</li>\n</ul>\n<p>对于面试官来说，第一点是：人都会对与自己经历相似的人有天然的好感、容易沉溺于夸赞，同样也会对某些人有天然的厌恶。人是一种极其主观的生物，对于事物的评价受主观因素影响很大，为了避免这种情况，通过较为轻松的标准 + 两次面试可以一定程度上的规避因强烈的个人情感导致的不公平现象，当然，一组面试官中有多个人的原因也是如此。</p>\n<p>第二点是：有些面试官可能在面试过程中非常的严肃，或者由于面试官自身的表达原因无法准确的描述问题，都会对面试产生影响，从这一点上来说对于面试者也是有些不公平的。就我们自己而言，我们是需要在每一场面试中不断去反思自己的：提的问题是否有更准确的表达？态度能否更和善？...... 其实对于 SIPC 的面试官而言，要<strong>记得感谢面试者</strong>，因为我们其实是在这个面试的过程中共同成长，而非只是单纯的面试筛选，面试官其实本身也不够成熟，面试者会触发我们<strong>对于技术的思考总结</strong>，我们自己<strong>对未来的规划</strong>、<strong>沟通表达能力的提升</strong>以及<strong>对于 “显而易见问题” 的重新思考</strong>。</p>\n<p>而对于面试者而言，在一次面试中可能会因为各种意外情况导致发挥失常，有些意外并非自己能够控制的，所以进行两次面试也可以最大程度上帮助面试者调整状态，熟悉面试感觉，展现出最好的自己。</p>\n<p>为了<strong>尽可能消除面试官的个人影响</strong>，我建议在面试中采用如下顺序进行问题询问：</p>\n<ol>\n<li>C 语言技术问题</li>\n<li>综合素质问题</li>\n<li>对 SIPC 认知问题</li>\n</ol>\n<p>将可能对于个人倾向有影响的问题放在最后去问，使得我们更容易认真倾听并冷静分析面试者说的话。</p>\n<h3 id=\"判断学习与规划能力\"><a class=\"anchor\" href=\"#判断学习与规划能力\">#</a> 判断学习与规划能力</h3>\n<div class=\"note info no-icon\">\n<p>对于大学生来说，时间规划能力与学习能力其实直接相关，由于本科有大量的课必须要上，能否在紧张的课业中合理安排时间进行技术学习是非常重要的；同时要注意，特殊个体特殊对待，有时我们要有足够的耐心。</p>\n</div>\n<p>这一点我觉得应该不用进行太深的讨论，大家应该都明白，要关注一面到二面之间的成长，而不要做绝对学习进度的对比。但这里我想强调另外一点：<strong>要结合个人的经历、性格去评判成长的大小</strong>。举个例子，对于从小接触计算机编程的面试者，他们学习 C 语言的速度就会快一些，而如果是有些同学从小从来没有接触过计算机，那么学习 C 语言肯定会慢一些，所以要动态的衡量学习的快慢而非制定绝对标准。</p>\n<p>在过往的面试中，我们经常遇见一种情况：面试者在过去除了计算机课就没碰过电脑，再加上自身性格比较内向，有时候说话可能都听不清，看起来整体分数并不高。但是<strong>事实证明</strong>了只要给这样的同学一点时间，他们反倒会比大多数人要优秀。所以我们在面试过程中，要对于这样的面试者给予额外的耐心，多给他们一些时间，再去看看他们的反馈，你可以就会大吃一惊。</p>\n<p><strong>当然</strong>，对不同的人采用不同的评价标准对于每个人而言并不绝对公平，所以这句话只是针对进入科协的两轮面试而言，而对于后面的科协大考核，必须是制定统一的评价标准的。</p>\n<h1 id=\"问题篇\"><a class=\"anchor\" href=\"#问题篇\">#</a> 问题篇</h1>\n<div class=\"note info no-icon\">\n<p>问问题的目的是通过差异化的问题帮助面试者正常甚至超常发挥，来确定不同面试者的真实水平，既不是完成面试流程中的任务、也不是非难倒所有面试者来证明我们优秀。</p>\n<p>为什么要先写理念篇，就是因为我们在面试时一定是在理念的指引下灵活的面试。在设计面试问题的时候一定要能动的去思考我们面试的目的，要想明白我们组织一面、二面是为了什么，去思考我们问的问题能不能达到我们的目的</p>\n</div>\n<p>在多次的旁听中发现了学弟学妹们，尤其是大二的学弟学妹们做主面的时候，对于问题的提问和设计有所欠缺，这个问题非常的普遍，而且又比较具体，我会按照重要程度依次来罗列需要注意的点。</p>\n<h2 id=\"问的深而非问的广\"><a class=\"anchor\" href=\"#问的深而非问的广\">#</a> 问的深而非问的广</h2>\n<p>先来说说问的广而不是问的深的问题：</p>\n<ul>\n<li>问不出面试者的真实水平</li>\n<li>很难了解面试者的综合素质</li>\n<li>面试者很难呈现自己的优势</li>\n<li>很难获得有价值的反馈</li>\n<li>面试官很难判断信息的真伪</li>\n</ul>\n<p>在旁听的过程中，问问题流于表面、广而不深的问题非常的严重，绝大多数学弟学妹们在面试过程中太过于死板的按照流程询问：一道 C 语言、一道技术栈、一道规划...... 面试者有很多有价值继续追问的问题都被忽略了。我极其讨厌这种按照现成的规章制度、不在实际情况的基础上做出修改就照搬照抄的做法，在我看来，这就是 &quot;<strong> 懒</strong> &quot;，而且，是头脑的 “<strong>懒</strong>”。诚然，规范的流程可以提醒我们还有哪些东西没有问到，但是按照流程均匀的分配时间给每一个流程的问题根本就是不动脑子。</p>\n<p>一定要抓住一条主线：<strong>我们是为了深入的了解面试者而提问，而不是为了流程而提问</strong>。</p>\n<p>我们的困境在于：如何在一个极短的时间内，深入的了解面试者。时间短这件事其实本身就意味着想要全面的了解面试者是一种奢望，与其将时间分配在流程上那些无关痛痒的问题上，为什么不把时间全部用来了解你想要了解的东西呢？规范的流程只是参考，而非一定，<strong>不要让思想懒惰</strong>，找到你感兴趣的点不断追问，这个过程反倒会帮助你更深入的了解面试者。</p>\n<p>这里举一个例子：在曾经的面试中，面试者自我介绍时提到了爱好英雄联盟，这个说法大家应该很常见吧，一般情况下我也不会追着这点问，但是情况的特殊在于该面试者除了打游戏外没有别的爱好，C 语言也只是刚刚入门，没有太多可以问的，那么，这个人就 PASS 了吗？并没有，我接着开始问他：</p>\n<ol>\n<li>平时喜欢打哪个位置？ — 打野</li>\n<li>记得野怪的刷新时间吗？— 180S</li>\n<li>怎么平衡刷野和抓人？— 看兵线 xxxxxxx</li>\n</ol>\n<p>这是一个比较极端也很有趣的例子，其实我们可以从回答中看到该面试者对于自己喜欢的东西是会去研究的，那我就觉得这是一种非常好的品质，甚至相比于那些说自己有某某基础，但其实只是看看教程，不求甚解的人，我觉得可能会更优秀一点，哪怕他现在 C 语言只是刚刚开始看我同样让他过了面试，虽然不记得这位同学后来怎么样了，但我相信如果他能对计算机感兴趣，也会发展的很好。这个例子并不是要大家听到面试者爱打游戏就猛猛追问，只是给大家一个参考，我们要<strong>仔细聆听</strong>面试者的介绍，抓住他们感兴趣的点一直追问到自己想听的答案，而非按部就班的提问，会让我们收获更多。</p>\n<h3 id=\"不要被面试者唬住\"><a class=\"anchor\" href=\"#不要被面试者唬住\">#</a> 不要被面试者唬住</h3>\n<p>在面试中还发现一种情况，大概是因为技术栈不交叉的原因，面试者在说自己曾经的技术栈时大概率就是介绍一下就过了，我觉得这是非常可惜的，有技术栈的面试者会比没有技术栈的面试者更好面一些，这里我来说说我面的思路。</p>\n<p>首先，我需要确定面试者的这些技术栈到底是跟着教程按部就班的获取的，还是有一些自己的思考 / 研究在。举个例子，在某次面试中，某面试者介绍自己曾有过游戏破解的经历，于是我详细的问了他：</p>\n<ol>\n<li>是什么游戏</li>\n<li>破解的过程是什么</li>\n<li>怎么学习破解的</li>\n<li>中间有没有遇见什么困难，是怎么解决的</li>\n</ol>\n<p>事实上我只问到了第二个问题就结束了，因为面试者的回答是风灵月影，那么就没必要接着往下问了，而且这个经历也就是一般而已，没有太大的加分。</p>\n<p>「其实，有关游戏破解的知识我也了解的不多，这个时候可以多听面试者讲的东西，我们只需对于逻辑有问题或者讲的不清楚的地方发问就可以了，换个角度看，如果面试者能很清楚的跟面试官讲清楚技术原理，那么其本身就是一个很优秀的面试者了，不是吗？所以，千万不要被面试者唬住」</p>\n<p><strong>总结一下</strong>，我们在面试有技术背景的面试者时，需要通过更加具体的问题在分清楚该面试者对于该技术，到底是简单的跟着教程走，还是自己有所思考 / 研究，然后在回答中去甄别这个人到底是一个有自驱有思考的优秀者，还是只是一个就还好的普通面试者。</p>\n<p><strong>另外</strong>，其实我个人是很喜欢这种问问题的模式的，我在面试中就会经常以这样的方式去询问面试者，个人觉得这是一种很好的问问题的思路，既可以让面试者在熟悉的领域回答问题，还很容易看出面试者的综合素质，也推荐给大家。</p>\n<h2 id=\"问题应是引导而非否定\"><a class=\"anchor\" href=\"#问题应是引导而非否定\">#</a> 问题应是引导而非否定</h2>\n<p>在旁听中，面试官问问题后，如果面试者没有非常快的准确回答，往往会被面试官打断，然后以 “下去再了解了解吧” 结束。我个人觉得这样的问题是无效问题，白白浪费时间。我们一定要明确，我们问问题的过程应该是引导的过程，而非挑刺的过程。通过引导来让面试者回答出问题，或者至少能暴露面试者的思考过程，这道题才是有意义的。如果一味否定，不仅会让面试者紧张以至难以发挥，而且根本难以获取对于面试者的有效评价。</p>\n<p>这一点是有学弟做的比较好的，例如在问字母大小写转换的题目时，会提示 ASCII 码表。可能有些人会觉得前置知识太简单无需引导，其实不是这样的，<strong>引导的过程也是我们梳理自己的知识体系的过程</strong>，一个知识体系不清楚的人是无法做出有效引导的。在引导的过程中，我们强迫自己梳理所学的知识，将「基础」、「结果」通过清晰的逻辑串联起来，你才能做出准确的引导，所以，何不测试测试自己到底有没有梳理好自己的知识体系呢？</p>\n<h2 id=\"c语言知识点应注重基础\"><a class=\"anchor\" href=\"#c语言知识点应注重基础\">#</a> C 语言知识点应注重基础</h2>\n<p>对于面试官而言，要对题目有如下三点反思：</p>\n<ol>\n<li>题目本身是否有非预期解，这道题自己到底搞清楚了吗？</li>\n<li>题目是否为基础问题，是否为面试者常规学习中自然掌握的问题（故意的偏 / 难题除外）？</li>\n<li>自己是否准备了充分的引导？</li>\n</ol>\n<p>有一种极其不应该的情况但是历史上发生过， <code>i++</code>  和 <code>++i</code>  的问题应该是我们面试的高频问题了，但是曾经出过一道题目，由于没有考虑到不同平台编译器的优化问题，导致其实是有非预期解的，幸好面试的时候我在场，没有闹笑话。虽然不要求面试官在出题时对于 C 语言、编译器优化、操作系统有充分的了解，但是至少应该保证代码是能跑通的，且答案与实际执行结果是一致的。</p>\n<p>如果题目本身就非面试者自然掌握的范围，那么问题本身的价值就不是很大，如果是故意为之，那么该有的引导到位了吗？我们要明确一点：偏题如果有充分的引导，可以考察到面试者的逻辑思维能力；但如果没有引导，那就是废题。</p>\n<h2 id=\"问题应清晰明确且不带明显的对错倾向\"><a class=\"anchor\" href=\"#问题应清晰明确且不带明显的对错倾向\">#</a> 问题应清晰明确且不带明显的对错倾向</h2>\n<p>这里我直接给出一些问题实例对比，请大家仔细体会其中的差别：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">原始问题</th>\n<th style=\"text-align:center\">不好的点</th>\n<th style=\"text-align:center\">变换问题</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">如果你室友在你做题时拉你去打游戏，你会怎么做？</td>\n<td style=\"text-align:center\">对错倾向太过明显</td>\n<td style=\"text-align:center\">请问你怎么均衡技术时间、娱乐时间和社交时间？</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">介绍一下数组吧</td>\n<td style=\"text-align:center\">问题范围太大</td>\n<td style=\"text-align:center\">请你介绍下数组怎么初始化 / 与字符串的区别 /......</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">你对科协有什么看法？</td>\n<td style=\"text-align:center\">没问题</td>\n<td style=\"text-align:center\">开放类问题是可以这样问的</td>\n</tr>\n</tbody>\n</table>\n<p>我们在问问题之前要先在脑中斟酌一下，这一点并不难做到，同样的问题，变换一下问法，就可能能问出你想要的答案了。</p>\n<h2 id=\"不要随便问方向内问题\"><a class=\"anchor\" href=\"#不要随便问方向内问题\">#</a> 不要随便问方向内问题</h2>\n<p>如果面试者没有表现出明显的对于某方面的兴趣，或是过往技术背景中没有明显的方向的背景，请不要突然就问某一个细分方向（前端 / 后端 / 产品 / 安全...），真的很奇怪诶！</p>\n<h1 id=\"任务篇\"><a class=\"anchor\" href=\"#任务篇\">#</a> 任务篇</h1>\n<p>这一章表达的思想其实前面都有体现，这里单独拿出来再说一下也是因为非常重要，希望每一位面试官认真对待。</p>\n<ul>\n<li>\n<p>留 Task 的依据</p>\n<p>正如上面说的，要<strong>根据不同的面试者来制定不同的面试策略和评价标准</strong>，同理，对于不同的面试者留 Task 的多少也应该有所不同，例如：对于基础不牢的同学我们甚至可以不留更多 Task，让他把已经做过的 Task 好好复习也是可以的。对于每一类型的面试者，面试官都需要认真思考留 Task 的策略。</p>\n<p>在二面中，对于没有完成既定 Task 目标的面试者我们也要<strong>保持耐心</strong>，认真的听他们说原因，同时也需要<strong>反思</strong>我们留的 Task 的任务是否是合理的，其实对于大家目前的能力来说，<strong>偏离才是常态</strong>，如果绝大部分人都按要求完成了 Task 任务，那么这时就要警惕是否可能是一些我们不希望看到的事情发生了，要进行更加认真的验证。</p>\n</li>\n<li>\n<p>留任务应具体</p>\n<p>我们的面试官在面试过程中经常会说 “下去了解下” 这样的话，这一点本身没什么问题，但是如果不提示面试者下去应该了解 “什么” 知识，那就有可能导致问题了。</p>\n<p>例如我们问：如果创建一个超级大的数组可能产生什么问题？那么我们留任务的时候就要说：下去可以了解下栈溢出的知识。我们需要帮助面试者具体出需要了解的知识而不是只是一句 “下去了解下” 就完了。</p>\n</li>\n</ul>\n<p>不过以上两点在我晚上做了简单的面试复盘后，面试官已经有了很好的改变，<strong>特别棒！</strong></p>\n<h1 id=\"制度篇\"><a class=\"anchor\" href=\"#制度篇\">#</a> 制度篇</h1>\n<p>本章就是一些简单的面试制度上的建议了，经验性的东西就写的比较简略</p>\n<ul>\n<li>\n<p>时间把控</p>\n<p>建议<strong>以 30 分钟为区间</strong>通知面试者等候面试，大概每一桌等待的人数保持在 2-3 人是比较合适的，既不会太耽误面试者时间，也可以应对一些面试者晚到等意外情况，更高效的利用时间。</p>\n</li>\n<li>\n<p>题目控制</p>\n<p>如果是多天 / 多场面试，建议准备<strong>多套题目</strong>，防止因泄题导致的技术面失真。</p>\n</li>\n</ul>\n<h1 id=\"愿景与使命\"><a class=\"anchor\" href=\"#愿景与使命\">#</a> 愿景与使命</h1>\n<p>鲁迅先生曾说</p>\n<blockquote>\n<p>愿中国青年都摆脱冷气，只是向上走，不必听自暴自弃者流的话。能做事的做事，能发声的发声。有一分热，发一分光。就令萤火一般，也可以在黑暗里发一点光，不必等候炬火。此后如竟没有炬火：我便是唯一的光。</p>\n</blockquote>\n<p>科技协会的愿景是帮助每一个热爱计算机、热爱技术的同学在技术的大海中遨游；SIPC 作为一个学生组织，使命是帮助整个学院乃至学校的同学们提升技术水平。所以，<strong>面试不必过于严苛，培训不用过于保密</strong>，如若能让每一位热爱技术的同学有所收获，那便是我们最大的成就。</p>\n",
            "tags": [
                "思考与沉淀",
                "思考"
            ]
        }
    ]
}